{"version":3,"sources":["components/layout/GridComponent.js","components/buttons/ToggleButton.js","utils/WebConfig.js","components/layout/Header.js","constant/Url.js","components/buttons/Menu.js","constant/Menus.js","components/layout/ContentTitle.js","components/pages/Home.js","utils/StringUtil.js","components/buttons/ActionButtons.js","components/CrudRow.js","components/layout/InstantTable.js","components/pages/About.js","redux/actionCreators.js","redux/types.js","utils/ComponentUtil.js","components/input/InputField.js","components/buttons/ActionButton.js","components/Label.js","components/Message.js","components/pages/Login.js","components/buttons/Tab.js","components/input/ComboBox.js","components/pages/DashboardMain.js","constant/TimelineConstant.js","components/card/Card.js","components/pages/FullCalendar.js","utils/EntityConfigurations.js","components/pages/Timeline.js","components/pages/Dashboard.js","components/layout/Footer.js","components/ChatList.js","components/pages/ChatRoom.js","components/input/DropdownItem.js","components/input/InputDropdown.js","components/input/InputFile.js","components/input/InputFileMultiple.js","components/pages/EntityForm.js","components/pages/EntityList.js","components/pages/Management.js","App.js","redux/shopReducer.js","utils/HardCodedEntites.js","redux/userReducer.js","redux/transactionReducer.js","redux/managementReducer.js","redux/reducers.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["GridComponent","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","items","width","repeat","cols","length","gridAutoColumns","react_default","a","createElement","style","objectSpread","display","verticalAlign","gridTemplateColumns","map","item","Component","ToggleButton","_this","state","active","onClick","e","setState","outerClass","innerClass","fontSize","layout_GridComponent","className","text","debugMode","console","log","localStorage","getItem","Header","handleClick","setItem","app","componentDidMount","isDebugMode","title","buttons_ToggleButton","baseImageUrl","config","logoUrl","url","Menu","userLink","divisionInfo","division","name","loggedUser","id","appIcon","src","renderedMenus","icon","menus","handleMenuCLick","activeCode","code","key","Link","to","LOGOUT","ContentTitle","description","Home","document","setMenuCode","layout_ContentTitle","content","index","uniqueId","string","Date","getUTCMilliseconds","beautifyNominal","val","nominal","result","zero","i","isNonNullArrayWithIndex","array","months","ActionButtons","buttonsData","buttonData","status","concat","stringUtil","CrudRow","handleEdit","identifier","handleDelete","values","Array","newValues","value","CS","RS","colspan","rowspan","push","trStyle","borderTop","actionButton","buttons_ActionButtons","disabled","valign","CrudRow_Cells","Cells","rowSpan","colSpan","InstantTable","rows","tableStyle","row","components_CrudRow","About","padding","fontFamily","margin","layout_InstantTable","usedHost","apiBaseUrl","apiEntityBaseUrl","apiAccount","apiAdmin","getEntityList","request","startLoading","type","payload","entity","entityName","filter","limit","page","fieldsFilter","orderBy","orderType","meta","entityConfig","_byId","getElementById","createNavButtons","totalButton","currentPage","Math","ceil","min","max","InputField","handleKeyup","onKeyUp","target","onChange","placeholder","inputField","checked","ActionButton","Label","Message","timer","intervalId","update","clearInterval","endMessage","withTimer","setInterval","messageText","msgStyle","realtime","floor","progress","textAlign","Login","username","password","showMessageLoginFailed","handleUsername","handlePassword","doLogin","main","validateLoginStatus","loginStatus","history","message","loginFailed","components_Message","components_Label","input_InputField","buttons_ActionButton","withRouter","Tab","tabsData","autoColumns","gap","borderBottom","tabData","React","ComboBox","handleOnChange","options","defaultValue","option","DashboardMain","onDivisionListChange","divisionId","selectDivision","divionOptions","divisions","forEach","input_ComboBox","month","day","Card","titleStyle","height","backgroundRepeat","backgroundColor","backgroundImage","backgroundSize","FullCalendar","selectedMonth","getMonth","inputYearValue","getFullYear","activeId","selectedDay","calendarData","days","month_now","begin","week","dayCount","info","begin_old","year_now","input_month","date_info","running_month","running_year","filterDayId","filterMonthId","dateFormId","entity_Name","entity_Prop","setSelectedMonth","refresh","changeInputYear","createTable","r","getEventByDate","year","getEventDetail","updateFields","focus","loadCalendar","dateID","filterStr","fillDay","setCalendar","updated","doSetCalendar","diff_year","abs","monthCount","less","current_month","endMonth","begin_month","b","prevMonth","m","nextMonth","fillInfo","timeLineConstant","detail","doPrevMonth","prev","begin_prev","findBegin","switch_","doNextMonth","next","begin_old_","totalday","M","begin_prev_","D","val2","data","getDate","getYear","now","strDate","dateAcceptableForHtmlInput","addZero","Val","Min","N","String","MinStr","ValLength","Diff","clear","begin_new","week_","day_","isNow","d","setElementByAttr","_this2","selectedYear","totalCalendarData","element","minHeight","marginBottom","events","eventList","event","card_Card","divisionConfig","fieldNames","lableName","formData","inputType","reffEntity","idField","displayField","sectionConfig","programConfig","eventConfig","positionConfig","memberConfig","Timeline","detailView","detailEvents","date","addEvent","getEntities","addEventFromTimeline","y","participant","location","done","eventCard","pages_FullCalendar","connect","managementState","userState","dispatch","actions","Dashboard","getButtonsData","menu","getDivisons","pages_DashboardMain","pages_Timeline","buttons_Tab","Footer","version","ChatItem","admin","sender","senderComponent","marginLeft","float","color","ChatRoom","messages","sendChatMessage","alert","handleMessage","response","storeChatMessageLocally","entities","changeUsername","getMessages","userAlias","shopState","DropdownItem","hover","onHover","unHover","onMouseLeave","onMouseOver","InputDropdown","hoverIndex","onBlur","onSelect","dataValue","dropdownList","dropdownComponent","input_DropdownItem","onFocus","InputFile","base64Data","file","referer","callback","reader","FileReader","readAsDataURL","files","onload","onerror","error","componentUtil","assertThisInitialized","removeImage","displayImage","trim","accept","InputFileMultiple","handleAddMoreFile","addMoreImage","inputFields","inputFilesData","inputFileData","input_InputFile","base64","includes","inputId","EntityForm","managedEntity","formValues","dropdownValues","selectedEntities","base64DataMultiple","validateEntity","formDataItem","getFormDataItemStartWith","arrayOfValues","split","resultValue","updatedValue","join","handleSubmit","addFromOtherPage","addNew","updateEntity","focusActiveId","propName","updateSelectedEntity","removeManagedEntity","populateDropdown","entityname","fieldname","fieldvalue","fieldName","fieldValue","getEntitiesWithCallback","onKeyUpDynamicDropdown","populateDropdownValues","currentDropdownValue","getFormDataItem","getSelectedDropdownItem","formDataList","currentValue","handleRemoveImage","handleChangeBase64Image","handleChangeBase64MultipleImage","propNameRaw","removeElementAtPosition","handleRemoveMultipleImage","newArrayValue","selectFromDynamicDropdown","currentDropdownList","selectedOption","displayPropName","handleStaticDropdownChange","entityExist","actionButtons","formFields","parentPropName","valueAsObject","objectPropName","inputComponent","input_InputDropdown","valueSplit","imagesData","_loop","valueSplitItem","input_InputFileMultiple","requested","EntityList","window","confirm","getEntityById","getHeaderNames","headers","headerName","toUpperCase","goToPage","orderObject","entitiesData","totalData","getEntityInPage","setOrderBy","createFilterInputs","inputs","input","handleFilterChange","valueDay","valueMonth","valueYear","inputDay","inputMonth","inputYear","orderButton","fontWeight","rowValues","_loop2","j","fieldItem","entityProp","object","entityValue","href","alt","imgName","dateStr","toDateString","opt","fixButtonData","_loop3","navButtons","paddingTop","entityTable","pages_EntityForm","Management","entityList","loadEntityManagement","gotoMainPage","resetManagementPage","checkIfCurrentMenuName","flag","newRecord","isNewRecord","ref","callbackHandleUpdate","pages_EntityList","action","exacts","contains","App","detailMode","menuCode","loading","loadingPercentage","requestId","enableShopping","mainAppUpdated","setDetailMode","setEnableShopping","performLogout","requestAppId","endLoading","msg","percentage","refreshLogin","additionalMenus","authenticated","header","layout_Header","loginComponent","pages_Login","performLogin","loginAttempt","loadingComponent","setMenus","buttons_Menu","Switch","Route","exact","path","render","renderProps","pages_Home","pages_ChatRoom","pages_About","pages_Dashboard","pages_Management","client_default","topics","onMessage","client","clientRef","layout_Footer","loginKey","cart","user","initState","catalogData","categories","suppliersData","getTime","reducer","arguments","undefined","currentProduct","loadedSupplier","suppliers","referrer","updatedMenus","loggedIn","JSON","stringify","sessionData","Division","removeItem","productFlowStock","productFlowStocks","transactionData","successTransaction","customersData","productsData","cashflowInfoOut","cashflowInfoIn","cashflowDetail","productSalesData","productSalesDetails","transactionYears","entityUtil","rootReducer","combineReducers","shopReducer","userReducer","transactionState","transactionReducer","managementReducer","initialState","commonAuthorizedHeader","Content-Type","getEntitiesWithCallbackMiddleware","store","fetch","method","body","then","json","newAction","assign","catch","err","finally","param","updateEntityMiddleware","debug","getEntityByIdMiddleware","getEntityListMiddleware","entitie","getMessagesMiddleware","sendChatMessageMiddleware","addEventFromTimelineMiddleware","dd","mm","yyyy","eventEntity","storeChatMessageLocallyMiddleware","removeManagedEntityMiddleware","resetManagementPageMiddleware","requestAppIdMiddleware","getEventByDateMiddleware","selectDivisionMiddleware","getDivisionsMiddleware","performLogoutMiddleware","Promise","all","_ref","_ref2","slicedToArray","responseJson","logoutSuccess","performLoginMiddleware","_ref3","_ref4","loginSuccess","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","pair","return","refreshLoginStatusMiddleware","removeEntityMiddleware","configureStore","createStore","applyMiddleware","Root","es","HashRouter","src_App_0","Boolean","hostname","match","ReactDOM","src_Root","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea252b0d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass GridComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let items = [];\r\n        if (this.props.items) {\r\n            items = this.props.items;\r\n        }\r\n        const width = this.props.width?this.props.width : \"auto \";\r\n        const repeat = this.props.cols ? this.props.cols : items.length;\r\n        const gridAutoColumns = width.repeat(repeat);\r\n\r\n       \r\n        return (\r\n            <div style={{ ...this.props.style, display: 'grid',   verticalAlign: 'middle', gridTemplateColumns: gridAutoColumns }} >\r\n                {items.map(item => {\r\n                    return item;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GridComponent;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Button.css'\r\nimport GridComponent from '../layout/GridComponent';\r\n\r\nclass ToggleButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active:false\r\n        }\r\n\r\n        this.onClick = (e) => {\r\n            this.setState({active:!this.state.active})\r\n            if(this.props.onClick){\r\n                this.props.onClick(e);\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let outerClass = \"toggle-outer\";\r\n        let innerClass = \"toggle-inner\";\r\n\r\n        if(!this.props.active || this.props.active==false){\r\n            outerClass+=\" outer-inactive\";\r\n            innerClass+=\" inner-inactive\";\r\n        }\r\n\r\n        return (\r\n            <div style={{fontSize:'13px'}}>\r\n                <GridComponent items={[\r\n                    <div onClick={this.onClick} className={outerClass}>\r\n                        <div  className={innerClass} > \r\n                         \r\n                            </div>\r\n                    </div>,\r\n                    <span>{this.props.text}</span>\r\n                ]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleButton;","export const debugMode = () => {\r\n    console.log(\"localStorage.getItem(\\\"debugMode\\\")\",localStorage.getItem(\"debugMode\"));\r\n    return localStorage.getItem(\"debugMode\") && localStorage.getItem(\"debugMode\") == \"true\";\r\n}","import React, { Component } from 'react';\r\nimport '../../css/Header.css'\r\nimport ToggleButton from '../buttons/ToggleButton';\r\nimport * as config from '../../utils/WebConfig'\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            debugMode:true\r\n        }\r\n        this.handleClick = (e) => {\r\n            this.setState({ debugMode: !this.state.debugMode })\r\n            if (this.state.debugMode == true) {\r\n                localStorage.setItem(\"debugMode\", \"true\");\r\n            } else {\r\n                localStorage.setItem(\"debugMode\", \"false\");\r\n            }\r\n            console.log(\"ccc localStorage.setItem(\\\"debugMode\\\")\", localStorage.getItem(\"debugMode\"));\r\n            this.props.app.componentDidMount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const debugMode =  localStorage.getItem(\"debugMode\");\r\n        const isDebugMode =  localStorage.getItem(\"debugMode\") == \"true\";\r\n        return (\r\n            <div className=\"App-header\">\r\n                {this.props.title}\r\n                <ToggleButton active={isDebugMode} onClick={this.handleClick} text={\"Debug Mode: \"+debugMode} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import * as config from '../utils/WebConfig'\r\n\r\nexport const hostLocal =\"http://localhost:8080\";\r\nexport const hostCloud = \"\";\r\nexport const baseImageUrl = config.debugMode()==true?hostLocal:hostCloud;\r\n ","import React, { Component } from 'react'\r\nimport '../../css/Menu.css'\r\nimport '../../css/Common.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\r\nimport * as url from '../../constant/Url'\r\nconst logoUrl = url.baseImageUrl+\"/organization-management/res/img/transparent.png\";\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n        let userLink = \"\";\r\n        let divisionInfo = null;\r\n        if (this.props.division) {\r\n            divisionInfo = <div className=\"fill\" >{this.props.division.name} </div>;\r\n        }\r\n\r\n        if (this.props.loggedUser != null) {\r\n            userLink = <li id=\"user-link\">\r\n                <div className=\"fill\" >{\"Welcome, \" + this.props.loggedUser.name} </div>\r\n                {divisionInfo}\r\n            </li>\r\n        }\r\n\r\n        let appIcon = <li><img src={logoUrl} style={{ width: '90%' }} /></li>;\r\n\r\n        let renderedMenus = [{\r\n            icon: true,\r\n            url: logoUrl\r\n        }];\r\n\r\n\r\n        if (this.props.menus != null) {\r\n            renderedMenus = this.props.menus;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"side-menu\" >\r\n                < ul className=\"menu-ul \" >\r\n                    {appIcon}\r\n                    {userLink}\r\n                    {\r\n                        renderedMenus.map(\r\n                            e => {\r\n                                if (e.url == \"#\") {\r\n                                    return (<li onClick={() => this.props.handleMenuCLick(e)} className={this.props.activeCode == e.code ? \"active\" : \"\"} key={e.name}\r\n                                        id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                            to=\"#\" ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                    )\r\n                                }\r\n                                return (<li className={this.props.activeCode == e.code ? \"menu-active\" : \"\"} key={e.name}\r\n                                    id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                        to={e.url} ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                )\r\n                            }\r\n                        )\r\n                    } </ul>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","export const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const SUPPLIERLIST = \"supplierlist\";","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Content.css'\r\n\r\nclass ContentTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let title = this.props.title ? this.props.title : \"\";\r\n        let description = this.props.description ? this.props.description : \"\";\r\n        return (\r\n            <div className=\"content-title\">\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentTitle;","import React, { Component } from 'react'\r\nimport '../../css/Home.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nimport * as url from '../../constant/Url'\r\nconst logoUrl = url.baseImageUrl + \"/organization-management/res/img/mpi.png\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Mahasiswa Pencinta Islam\";\r\n        this.props.setMenuCode(menus.HOME);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"Welcome!\" description=\r\n                    {this.props.content} />\r\n                <div className=\"article-content\">\r\n                    <h2 >Admin Console Mahasiswa Pencinta Islam</h2>\r\n                    <img src={logoUrl} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tlet nominal = \"\" + val;\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"...\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\n\r\nexport const dateInputVal = function (dd, mm, yyyy) {\r\n \r\n\tlet month = +mm < 10 ? \"0\" + mm : mm;\r\n\tlet day = +dd < 10 ? \"0\" + dd : dd;\r\n\r\n\treturn yyyy + \"-\" + month + \"-\" + day;\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport '../../css/Button.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ActionButtons extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let className = \"action-button-wrapper\";\r\n        if(this.props.className){\r\n            className += \" \"+this.props.className;\r\n        }\r\n        return (\r\n            <div style={this.props.style ? this.props.style : {}} className={className}  >\r\n                {this.props.buttonsData.map(buttonData => {\r\n                    let className = \"action-button rounded\";\r\n                    if (buttonData.status != null) {\r\n                        className =\r\n                            className.concat(\" \").concat(buttonData.status).concat(\" \").concat(buttonData.className);\r\n                    }\r\n                    return (\r\n                        <button style={{...buttonData.style}} className={className} key={\"btnKey-\" + stringUtil.uniqueId()} onClick={buttonData.onClick}>{buttonData.text}</button>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ActionButtons;","import React, { Component } from 'react'\r\nimport ActionButtons from './buttons/ActionButtons';\r\nimport * as stringUtil from '../utils/StringUtil'\r\n\r\nclass CrudRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleEdit = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleEdit(this.props.identifier);\r\n            }\r\n        }\r\n        this.handleDelete = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleDelete(this.props.identifier);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let values = this.props.values;\r\n        const defaultRowColSpan = 1;\r\n        if (null == values) {\r\n            values = new Array();\r\n        } else {\r\n            let newValues = new Array();\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (this.props.CS || this.props.RS) {\r\n                    let colspan = stringUtil.isNonNullArrayWithIndex(this.props.CS, i) ?\r\n                        this.props.CS[i] : defaultRowColSpan;\r\n                    let rowspan = stringUtil.isNonNullArrayWithIndex(this.props.RS, i) ?\r\n                        this.props.RS[i] : defaultRowColSpan;\r\n                    newValues.push({ value: value, colspan: colspan, rowspan: rowspan });\r\n                } else\r\n                    newValues.push({ value: value });\r\n            }\r\n            values = newValues;\r\n        }\r\n\r\n        let trStyle = this.props.style ? this.props.style : {\r\n            borderTop: 'solid 1px gray',\r\n        };\r\n        let actionButton = <td style={trStyle}>\r\n            <ActionButtons buttonsData={[\r\n                {\r\n                    id: \"k-btn-edit-\" + this.props.identifier,\r\n                    status: 'warning',\r\n                    onClick: this.handleEdit,\r\n                    text: \"Edit\"\r\n                },\r\n                {\r\n                    id: \"k-btn-dlt-\" + this.props.identifier,\r\n                    status: 'danger',\r\n                    onClick: this.handleDelete,\r\n                    text: \"Delete\"\r\n                }\r\n            ]} />\r\n        </td>;\r\n\r\n        if (this.props.disabled == true) {\r\n            actionButton = null;\r\n            trStyle = this.props.style ? this.props.style : {};\r\n        }\r\n      \r\n        return (\r\n            <tr style={trStyle} key={stringUtil.uniqueId()}\r\n                valign={this.props.valign}>\r\n                <Cells values={values} trStyle={trStyle} />\r\n                {actionButton}</tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst Cells = (props) => {\r\n\r\n    return props.values.map(value => {\r\n        return (\r\n            <td key={\"td-key-\" + stringUtil.uniqueId()} id={\"td-\" + stringUtil.uniqueId()} style={props.trStyle} rowSpan={value.rowspan} colSpan={value.colspan}>\r\n                {value.value}\r\n            </td>\r\n        )\r\n    });\r\n}\r\n\r\nexport default CrudRow;","import React, { Component } from 'react'\r\nimport CrudRow from '../CrudRow';\r\nimport '../../css/Common.css'\r\nimport '../../css/InstantTable.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass InstantTable extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let rows = [];\r\n        if (this.props.rows) { rows = this.props.rows; }\r\n        let className = \"table\";\r\n        let tableStyle = this.props.style ? this.props.style : {};\r\n        if (this.props.className) {\r\n            className += \" \" + this.props.className;\r\n        }\r\n        return (\r\n            <table style={tableStyle} className={className}><tbody>\r\n                {rows.map(row => {\r\n                    let disabled = row.disabled == false? false:true;\r\n                  \r\n                    \r\n                    return (\r\n                        <CrudRow\r\n                            style={row.style}\r\n                            valign={this.props.valign ? this.props.valign : \"top\"}\r\n                            RS={row.RS}\r\n                            identifier={row.identifier ? row.identifier : \"0000\"}\r\n                            handleEdit={row.handleEdit}\r\n                            handleDelete={row.handleDelete}\r\n                            CS={row.CS}\r\n                            values={row.values ? row.values : []}\r\n                            key={stringUtil.uniqueId()}\r\n                            disabled={disabled}\r\n                        />\r\n                    )\r\n                })}\r\n            </tbody></table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstantTable;","import React, { Component } from 'react'\r\nimport '../../css/About.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport * as url from '../../constant/Url'\r\nimport '../../css/Common.css'\r\nimport ContentTitle from '../layout/ContentTitle' \r\n\r\nconst logoUrl = url.baseImageUrl + \"/organization-management/res/img/asp.png\";\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n        this.props.setMenuCode(menus.ABOUT);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container about-section  \" >\r\n                <ContentTitle title=\"About Us\" />\r\n                <div className=\" abount-content\" style={{\r\n                    padding: '5px',\r\n                    width: '90%',\r\n                    fontFamily: 'Consolas', margin: '5px'\r\n                }}>\r\n                    <InstantTable\r\n                        rows={[\r\n                            { values: [\"Name\", \"Organization Management Admin\"] },\r\n                            { values: [\"Version\", \"1.0.0\"] },\r\n                            { values: [\"Description\", \"managing your organization activities effectively\"] },\r\n\r\n\r\n                        ]} />\r\n                    <h2>Powered By</h2>\r\n                    <img style={{ width: '50%' }} src={logoUrl} />\r\n                </div></div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import * as types from './types'\r\nimport * as config from '../utils/WebConfig'\r\n\r\nconst hostCloud = \"/organization-management/api/\";\r\nconst hostLocal = \"http://localhost:8080/organization-management/api/\";\r\nconst usedHost = () => {\r\n    if (config.debugMode() == true)\r\n        return hostLocal;\r\n    else\r\n        return hostCloud;\r\n} \r\nconst apiBaseUrl  = () => usedHost() + \"public/\";\r\nconst apiEntityBaseUrl  = () => usedHost() + \"management/\"\r\nconst apiAccount = () => usedHost() + \"account/\"\r\nconst apiAdmin = () => usedHost() + \"admin/\"\r\nconst apiTransaction = usedHost() + \"api/transaction/\";\r\n\r\nexport const addEventFromTimeline = (day,month,year) => {\r\n    return { type: types.ADD_EVENT_FROM_TIMELINE, payload: {\r\n        day:day,\r\n        month:month,\r\n        year:year\r\n    }, meta: { type: types.ADD_EVENT_FROM_TIMELINE } };\r\n}\r\n\r\n\r\nexport const resetProductStocks = () => {\r\n    return { type: types.RESET_PRODUCT_STOCKS, payload: {}, meta: { type: types.RESET_PRODUCT_STOCKS } };\r\n}\r\n\r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n}\r\nexport const resetSuppliers = () => {\r\n    return { type: types.RESET_SUPPLIERS, payload: {}, meta: { type: types.RESET_SUPPLIERS } };\r\n}\r\nexport const resetCustomers = () => {\r\n    return { type: types.RESET_CUSTOMERS, payload: {}, meta: { type: types.RESET_CUSTOMERS } };\r\n}\r\n\r\nexport const resetManagementPage = () => {\r\n    return {\r\n        type: types.RESET_MANAGEMENT_PAGE,\r\n        payload: {},\r\n        meta: { type: types.RESET_MANAGEMENT_PAGE }\r\n    };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl().concat(\"add\") : apiEntityBaseUrl().concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getProductStocks = (name, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_STOCKS,\r\n        payload: { product: { name: name } },\r\n        meta: {\r\n            app: app, type: types.GET_PRODUCT_STOCKS,\r\n            url: apiTransaction().concat(\"stocks\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl().concat(\"generateappid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin().concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const sendChatMessage = (message, username, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SEND_MESSAGE,\r\n        payload: {\r\n            value: message,\r\n            username: username\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.SEND_MESSAGE,\r\n            url: apiAdmin().concat(\"sendmessage\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSalesDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES_DETAIL,\r\n        payload: {\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_PRODUCT_SALES_DETAIL,\r\n            loadMore: request.loadMore == true, url: apiTransaction().concat(\"productsalesdetail/\" + request.productId)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getEventByDate = (month, year, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_EVENTS_BY_DATE,\r\n        payload: { year: year, month: month },\r\n        meta: {\r\n            app: app, type: types.GET_EVENTS_BY_DATE,\r\n            url: apiAdmin().concat(\"event\")\r\n        }\r\n    };\r\n}\r\nexport const selectDivision = (id, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SELECT_DIVISION,\r\n        payload: { divisionId: id },\r\n        meta: {\r\n            app: app, type: types.SELECT_DIVISION, url: apiAccount().concat(\"setdivision\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductListTrx = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_PRODUCT_LIST_TRX,\r\n        payload: {\r\n            entity: \"product\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST, url: apiEntityBaseUrl().concat(\"get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCustomerList = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_CUSTOMER_LIST,\r\n        payload: {\r\n            entity: \"customer\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_CUSTOMER_LIST, url: apiEntityBaseUrl().concat(\"get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetPurchaseTransaction = () => ({\r\n    type: types.RESET_TRX_PURCHASE,\r\n    payload: {},\r\n    meta: { type: types.RESET_TRX_PURCHASE }\r\n})\r\nexport const submitPurchaseTransaction = (request, app) => {\r\n    app.startLoading(true);\r\n    console.log(\"Submit Supply Purchase...\")\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_PURCHASE,\r\n        payload: {\r\n            customer: request.customer,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_PURCHASE, url: apiTransaction().concat(\"purchase\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const submitSupplyTrx = (request, app) => {\r\n    console.log(\"Submit Supply Trx...\")\r\n    app.startLoading(true);\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_SUPPLY,\r\n        payload: {\r\n            supplier: request.supplier,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_SUPPLY, url: apiTransaction().concat(\"supply\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getStockInfo = (stockId, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_STOCK_INFO,\r\n        payload: { productFlow: { id: stockId } },\r\n        meta: {\r\n            app: app, type: types.GET_STOCK_INFO, url: apiTransaction().concat(\"stockinfo\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount().concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n///ok\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {\r\n            user: { username: username, password: password }\r\n        },\r\n        meta: { type: types.DO_LOGIN, url: apiAccount().concat(\"login\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\n//ok\r\nexport const getDivisons = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.GET_DIVISIONS,\r\n        payload: {\r\n\r\n        },\r\n        meta: { type: types.GET_DIVISIONS, url: apiAccount().concat(\"divisions\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getAllProductCategories = () => ({\r\n    type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n    payload: {\r\n        entity: \"category\",\r\n        filter: {\r\n            limit: 0,\r\n            page: 0,\r\n            orderBy: null,\r\n            orderType: null,\r\n            fieldsFilter: {}\r\n        }\r\n    },\r\n    meta: {\r\n        type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n        url: apiEntityBaseUrl().concat(\"get\")\r\n    }\r\n})\r\n\r\nexport const getSupplierList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.FETCH_SUPPLIER_LIST,\r\n        payload: {\r\n            entity: \"supplier\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_SUPPLIER_LIST,\r\n            url: apiBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\nexport const getProductList = (request, app) => {\r\n    app.startLoading(request.withStock == true);\r\n    let requested = {\r\n        type: types.FETCH_PRODUCT_LIST,\r\n        payload: {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name,\r\n                    withStock: request.withStock\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST,\r\n            url: apiBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getProductDetail = (code, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.FETCH_PRODUCT_DETAIL,\r\n        payload: {\r\n\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                exacts: true,\r\n                contains: false,\r\n                fieldsFilter: {\r\n                    code: code,\r\n                    withStock: true,\r\n                    withSupplier: true\r\n                }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_DETAIL,\r\n            url: apiBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const loadMoreSupplier = (page, productId, referrer) => {\r\n    referrer.props.app.startLoading();\r\n    return {\r\n        type: types.LOAD_MORE_SUPPLIER,\r\n        payload: { filter: { page: page, fieldsFilter: { \"productId\": productId } } },\r\n        meta: {\r\n            type: types.LOAD_MORE_SUPPLIER,\r\n            url: apiBaseUrl().concat(\"moresupplier\"),\r\n            referrer: referrer\r\n        }\r\n    }\r\n}\r\n\r\n","export const FETCH_PRODUCT_LIST = \"fetch_product_list\";\r\nexport const FETCH_PRODUCT_DETAIL= \"fetch_product_detail\";\r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\";\r\nexport const FETCH_SUPPLIER_LIST = \"fetch_supplier_list\";\r\nexport const LOAD_MORE_SUPPLIER = \"load_more_supplier\";\r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";\r\nexport const GET_STOCK_INFO = \"get_stock_info\";\r\nexport const SUBMIT_TRX_PURCHASE = \"submit_purchase\";\r\nexport const SUBMIT_TRX_SUPPLY = \"submit_supply\";\r\nexport const RESET_TRX_PURCHASE = \"reset_purchase\";\r\nexport const FETCH_CUSTOMER_LIST = \"fetch_cust_list\";\r\nexport const FETCH_PRODUCT_LIST_TRX = \"fetch_product_list\";\r\nexport const GET_DIVISIONS = \"GET_DIVISIONS\";\r\nexport const SELECT_DIVISION = \"SET_DIVISION\";\r\nexport const GET_EVENTS_BY_DATE = \"GET_EVENTS_BY_DATE\";\r\n\r\nexport const RESET_SUPPLIERS = \"reset_suppliers\";\r\nexport const RESET_PRODUCTS = \"reset_products\";\r\nexport const RESET_PRODUCT_STOCKS = \"RESET_PRODUCT_STOCKS\";\r\nexport const RESET_CUSTOMERS = \"RESET_CUSTOMERS\";\r\nexport const GET_PRODUCT_STOCKS = \"get_product_stocks\";\r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\";\r\nexport const SEND_MESSAGE = \"send_message\";\r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const RESET_MANAGEMENT_PAGE = \"reset_management_page\";\r\n\r\nexport const ADD_EVENT_FROM_TIMELINE = \"add_event_from_timeline\";","export const _byId = (id) => { return document.getElementById(id) }\r\n\r\nexport const clearFields = (...ignore) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n    let withIgnore = ignore != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore)\r\n            for (let y = 0; y < ignore.length; y++)\r\n                if (inputs[i].id == ignore[y]) continue loop;\r\n\r\n        if (inputs[i].type == \"text\") inputs[i].value = \"\";\r\n        if (inputs[i].type == \"number\") inputs[i].value = 0;\r\n    }\r\n}\r\n\r\nexport function toBase64(file, referer, callback){\r\n\tconst reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n    \talert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (_byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array(); \r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton  ? totalButton  : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton  ) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton -1 \r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\n\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyup = (e) => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(e.target.value, this.props.id);\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            if (this.props.type == \"date\") {\r\n                this.handleKeyup(e);\r\n            }\r\n            if (this.props.id && this.props.type == \"checkbox\") {\r\n                this.props.onChange(this.props.id);\r\n            }\r\n            if (this.props.onChange && this.props.id) {\r\n                this.props.onChange();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let type = this.props.type ? this.props.type : \"text\";\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let name = this.props.name ? this.props.name : \"\";\r\n        let style = this.props.style ? this.props.style : {};\r\n\r\n        let inputField = <input style={style}\r\n            className=\"rounded\"\r\n            name={name}\r\n            key={\"KEY-input-\" + this.props.id}\r\n            id={this.props.id}\r\n            type={type}\r\n            onKeyUp={this.handleKeyup}\r\n            placeholder={placeholder}\r\n            checked={this.props.checked}\r\n            onChange={this.onChange}\r\n           \r\n        />;\r\n\r\n        if (this.props.disabled == true) {\r\n            inputField = <input style={style}\r\n                className=\"rounded\"\r\n                onChange={this.onChange}\r\n                name={name} key={\"KEY-input-\" + this.props.id}\r\n                checked={this.props.checked}\r\n                id={this.props.id}\r\n                type={type} onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n               \r\n                disabled />\r\n        }\r\n\r\n        if (type == \"textarea\") {\r\n            inputField = <textarea style={style}\r\n                className=\"rounded\"\r\n                name={name}\r\n                key={\"KEY-input-\" + this.props.id}\r\n                id={this.props.id}\r\n                type={type}\r\n                onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n                onChange={this.onChange}\r\n                checked={this.props.checked} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field \">\r\n                {inputField}\r\n                {this.props.type == \"radio\" || this.props.type == \"checkbox\" ? <span style={{ fontSize: '0.9em' }}>\r\n\r\n                    {this.props.text} </span> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\n\r\nclass ActionButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = () => {\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"action-button rounded\";\r\n        if(this.props.status!= null ){\r\n            className=className.concat(\" \").concat(this.props.status);\r\n        }\r\n        return (\r\n            <div >\r\n                <button style={{...this.props.style}} className={className} id={this.props.id} onClick={this.onClick}>{this.props.text}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ActionButton;","import React, {Component} from 'react'\r\nimport '../css/Input.css'\r\n\r\nclass Label extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onClick = () =>{\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let style = this.props.style?this.props.style:{};\r\n        let className = \"input-field \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n        if(this.props.onClick){\r\n            className+=\" clickable\";\r\n        }\r\n        return(\r\n            <div onClick={this.onClick} style={style} className={className}>\r\n                <label>{this.props.text}</label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react'\r\nimport '../css/Common.css'\r\nimport '../css/Message.css'\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {\r\n            let progress = Math.floor( this.props.progress);\r\n            msgStyle = {\r\n                width:progress + \"%\",\r\n                textAlign: 'left'\r\n            };\r\n            className+=\" rounded\";\r\n            messageText =  <span className=\"loader\">{this.props.progress + \"%\"}</span>          \r\n        }\r\n        return (\r\n            <div style={msgStyle} className={className} >{messageText}</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Message;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Login.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport Label from '../Label';\r\nimport Message from '../Message'\r\nimport { withRouter } from 'react-router';\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            showMessageLoginFailed: false\r\n        }\r\n\r\n\r\n\r\n        this.handleUsername = (value) => {\r\n            this.setState({ username: value });\r\n        }\r\n        this.handlePassword = (value) => {\r\n            this.setState({ password: value });\r\n        }\r\n\r\n        this.doLogin = () => {\r\n\r\n            console.log(\"u:\", this.state.username, \",p:\", this.state.password);\r\n            this.props.doLogin(document.getElementById(\"username-field\").value,\r\n                document.getElementById(\"password-field\").value, this.props.main);\r\n        }\r\n\r\n        this.endMessage = () => {\r\n            this.setState({ showMessageLoginFailed: false })\r\n        }\r\n\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.props.setMenuCode(menus.LOGIN);\r\n        document.title = \"Login\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        // if(this.props.loginAttempt == false && this.state.showMessageLoginFailed == false){\r\n        //     this.setState({showMessageLoginFailed:true})\r\n        // }\r\n    }\r\n\r\n    render() {\r\n\r\n        let message = <p>\r\n            {this.props.loginFailed ? <Message endMessage={this.endMessage} type=\"failed\" text=\"Login Failed\" /> : \"\"}\r\n        </p>\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                < ContentTitle title=\"Login Page\" />\r\n                {message}\r\n                <div className=\"login-container\">\r\n                    <Label text=\"Username\" />\r\n                    <InputField id=\"username-field\" onKeyUp={this.handleUsername} />\r\n                    <Label text=\"Password\" />\r\n                    <InputField id=\"password-field\" type=\"password\" onKeyUp={this.handlePassword} />\r\n                    <ActionButton style={{margin:'5px'}} id=\"btn-login\" status=\"submit\" onClick={this.doLogin} text=\"Login\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport '../../css/Tab.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Tab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let tabsData = this.props.tabsData ? this.props.tabsData : [];\r\n\r\n        let autoColumns = \"5% \"+(\"max-content \".repeat(tabsData.length ))+\" auto\";\r\n        return (\r\n            <div className=\"tab-container\" style={{\r\n                ...this.props.style,\r\n                width:'auto',\r\n                gap:'0px',\r\n                display: 'grid',\r\n                gridTemplateColumns: autoColumns\r\n            }} >\r\n                 <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n                {tabsData.map(tabData => {\r\n                    return <div key={stringUtil.uniqueId()} className={tabData.active ? \"tab-element tab-item-active rounded-top\" : \"tab-element tab-item\"} onClick={tabData.onClick ? tabData.onClick : () => { }}>\r\n                        {tabData.text}\r\n                    </div>\r\n                })}\r\n                <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ComboBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = (e) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(e.target.value); \r\n            }\r\n            else {\r\n                console.log(\"Not supported\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let options = [];\r\n        if (this.props.options) {\r\n            options = this.props.options;\r\n        } \r\n        return (\r\n            <div className=\"input-field \">\r\n                <select value={this.props.defaultValue ? this.props.defaultValue : \"\"} className=\"rounded\" id={this.props.id}\r\n                    onChange={this.handleOnChange} >\r\n                    {options.map(\r\n                        option => {\r\n                            return <option key={\"opt_\" + stringUtil.uniqueId()} value={option.value} >{option.text}</option>\r\n                        }\r\n                    )}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComboBox;","import  React  from 'react'\r\nimport '../../css/Common.css'\r\nimport ComboBox from '../input/ComboBox';\r\n\r\nclass DashboardMain extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            divisionId:null\r\n        }\r\n    }\r\n\r\n    onDivisionListChange = (value) => {\r\n        this.setState({divisionId:value});\r\n        this.props.selectDivision(value);\r\n    }\r\n    \r\n    divionOptions = () => {\r\n        let options = [];\r\n        let divisions = this.props.divisions? this.props.divisions : [];\r\n\r\n        divisions.forEach(division => {\r\n            options.push({\r\n                value: division.id,\r\n                text: division.name\r\n            })\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render(){\r\n \r\n        const division = this.props.division;\r\n        let divisionId = this.state.divisionId;\r\n        if(this.props.division){\r\n            divisionId = this.props.division.id;\r\n        }\r\n\r\n        return(\r\n            <div >\r\n                <p>Login Sebagai</p>\r\n                <ComboBox defaultValue={divisionId} onChange={this.onDivisionListChange} options={this.divionOptions()} />\r\n\r\n                <p>Current Selection:</p>\r\n                <p>{division?division.name:\"\"}</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default DashboardMain;","export  const month = [\r\n    { name: \"Januari\", day: 31, text:\"Januari\",value:\"1\" },\r\n    { name: \"Februari\", day: 28, text:\"Februari\",value:\"2\" },\r\n    { name: \"Maret\", day: 31, text:\"Maret\",value:\"3\" },\r\n    { name: \"April\", day: 30, text:\"April\",value:\"4\" },\r\n    { name: \"Mei\", day: 31 , text:\"Mei\",value:\"5\"},\r\n    { name: \"Juni\", day: 30, text:\"Juni\",value:\"6\" },\r\n    { name: \"Juli\", day: 31 , text:\"Juli\",value:\"7\"},\r\n    { name: \"Agustus\", day: 31 , text:\"Agustus\",value:\"8\"},\r\n    { name: \"September\", day: 30 , text:\"September\",value:\"9\"},\r\n    { name: \"Oktober\", day: 31 , text:\"Oktober\",value:\"10\"},\r\n    { name: \"November\", day: 30 , text:\"November\",value:\"11\"},\r\n    { name: \"Desember\", day: 31 , text:\"Desember\",value:\"12\"},\r\n];","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Card.css'\r\n\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let titleStyle = {height:'auto'}\r\n        if (this.props.icon) {\r\n            titleStyle = {\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundColor: 'white',\r\n                backgroundImage: \"url(\" + this.props.icon + \")\",\r\n                backgroundSize: '200px 160px',\r\n                \r\n            }\r\n        }\r\n\r\n        let className= \"card \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.onClick} style={this.props.style} className={className}>\r\n                <div className=\"card-title  \" style={titleStyle}>\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\n\r\n\r\nclass FullCalendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth(),\r\n            inputYearValue: new Date().getFullYear(),\r\n            activeId: \"\", \r\n            selectedDay: 0\r\n        }\r\n\r\n        this.calendarData = [];\r\n        this.days = [\"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\", \"Ahad\"];\r\n\r\n\r\n        this.month_now = 7;// 0; \r\n        this.begin = { week: 1, day: 3, dayCount: 31, info: \"\" };\r\n        this.begin_old = { week: 0, day: 0, dayCount: 0, info: \"\" };\r\n        this.year_now = 1945; \r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n        this.running_month = 7;\r\n        this.running_year = 1945;\r\n        this.filterDayId = 0;\r\n        this.filterMonthId = 0; this.dateFormId = 0;\r\n        this.entity_Name = 0; this.entity_Prop = 0; this.dateFormId = 0;\r\n\r\n        this.setSelectedMonth = (val) => {\r\n            this.setState({ selectedMonth: val });\r\n            this.props.refresh(val, this.year_now);\r\n        }\r\n        this.changeInputYear = (val, id) => {\r\n            this.setState({ inputYearValue: val, activeId: id });\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => { \r\n            this.props.getEventByDate(month, year );\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            if(this.props.getEventDetail){\r\n                return this.props.getEventDetail(day);\r\n            }\r\n\r\n            return [];\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        } \r\n        this.updateFields();\r\n        if (_byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n         this.loadCalendar();\r\n    }\r\n\r\n    setDateElementId(dateID) { \r\n        this.dateFormId = dateID;\r\n        let filterStr = \"filter-\" + dateID;\r\n        this.filterDayId = (filterStr + \".day\");\r\n        this.filterMonthId = (filterStr + \".month\");\r\n        this.dateFormId = (filterStr + \".year\");\r\n    }\r\n\r\n    updateFields() {\r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n    }\r\n\r\n    loadCalendar() {\r\n        this.updateFields();\r\n        this.createTable();\r\n        this.begin_old = this.begin;\r\n        this.begin = this.fillDay(this.month_now, true, this.begin);\r\n\r\n        this.input_month.value = new Date().getMonth() + 1; \r\n        this.setCalendar();\r\n        this.setState({ updated: new Date(), inputYearValue: new Date().getFullYear() });\r\n    }\r\n    setCalendar() {\r\n        this.doSetCalendar();\r\n    }\r\n\r\n    doSetCalendar() {\r\n        console.log(\"==start==\");\r\n\r\n        this.running_month = this.input_month ? this.input_month.value - 1 : new Date().getMonth();\r\n        this.running_year = this.state.inputYearValue ? this.state.inputYearValue : new Date().getFullYear();\r\n        let diff_year = +Math.abs(this.running_year - this.year_now);\r\n        // alert(\"diff_year year:\" + diff_year);\r\n        let monthCount = 0;\r\n        if (diff_year > 0)\r\n            monthCount = (11 - this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (+this.running_month);\r\n        else\r\n            monthCount = this.running_month - this.month_now;\r\n        let less = false;\r\n        if (this.running_year - this.year_now > 0) {\r\n            less = false;\r\n        } else if (this.running_year - this.year_now < 0) {\r\n            less = true;\r\n        } else {\r\n            if (this.running_month - this.month_now > 0) {\r\n                less = false;\r\n            } else {\r\n                less = true;\r\n            }\r\n        }\r\n        monthCount = Math.abs(monthCount);\r\n        //console.log(\"kurang dari: \", less);\r\n        let current_month = this.month_now;\r\n        let endMonth = (monthCount + this.month_now);\r\n        if (monthCount <= 0)\r\n            return;\r\n        if (!less)\r\n        ////console.log(\"month now\",this.month_now,\"diff_year\",monthCount,\"to\",to);\r\n        {\r\n            for (let m = this.month_now + 1; m <= endMonth + 1; m++) {\r\n                if (current_month > 11) {\r\n                    current_month = 0;\r\n\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.nextMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"month\",current_month,\"this.running_year\",this.year_now);\r\n                current_month++;\r\n            }\r\n        } else if (less) {\r\n            let pastMonthCount = (this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (11 - this.running_month);\r\n            endMonth = (pastMonthCount + this.month_now);\r\n            //console.log(\"month now\", this.month_now, \"diff_year\", monthCount, \"from\", to);\r\n            let begin_month = this.month_now;\r\n            for (let b = endMonth + 1; b >= begin_month + 1; b--) {\r\n                if (current_month < 0) {\r\n                    current_month = 11;\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.prevMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"b\",b,\"month\",current_month);\r\n                current_month--;\r\n            } \r\n        }\r\n\r\n        this.fillInfo();\r\n        console.log(\"==end==\")\r\n    }\r\n\r\n    fillInfo() {\r\n        if (this.date_info)\r\n            this.date_info.value = timeLineConstant.month[this.month_now].name + \" \" + this.year_now;\r\n        this.refresh();\r\n\r\n    } \r\n\r\n    detail(day, month, year) { \r\n        if(this.props.detail){\r\n            this.props.detail(day, month, year);\r\n        } \r\n    }\r\n\r\n    prevMonth() {\r\n\r\n        this.setState({ updated:new Date()})\r\n        return this.doPrevMonth(false);\r\n    }\r\n\r\n    doPrevMonth(prev) {\r\n        this.month_now--;\r\n        if (prev) {\r\n            this.running_month--;\r\n        }\r\n        if (this.month_now < 0) {\r\n            this.month_now = 11;\r\n            this.year_now--;\r\n            if (prev) {\r\n                this.running_month = 11;\r\n                this.running_year--;\r\n            }\r\n        }\r\n        let begin_prev = this.findBegin(this.begin_old, this.begin_old.dayCount);\r\n\r\n        this.begin_old = {\r\n            week: begin_prev.week,\r\n            day: begin_prev.day,\r\n            dayCount: begin_prev.dayCount,\r\n        }\r\n        let switch_ = this.fillDay(this.month_now, false, begin_prev);\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n    }\r\n\r\n    nextMonth() {\r\n        \r\n        return this.doNextMonth(false);\r\n    }\r\n\r\n    refresh() {\r\n        if(this.props.refresh){\r\n            this.props.refresh(this.month_now, this.year_now);\r\n        }\r\n    }\r\n\r\n    doNextMonth(next) {\r\n        console.log(\"NEXT\")\r\n        this.month_now++;\r\n        if (next) {\r\n            this.running_month++;\r\n        }\r\n        if (this.month_now > 11) {\r\n            this.month_now = 0;\r\n            this.year_now++;\r\n            if (next) {\r\n                this.running_month = 0;\r\n                this.running_year++;\r\n            }\r\n        }\r\n\r\n        let switch_ = this.fillDay(this.month_now, true, this.begin);\r\n        this.begin_old = {\r\n            week: this.begin.week,\r\n            day: this.begin.day,\r\n            dayCount: this.begin.dayCount,\r\n        }\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount,\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n\r\n    }\r\n\r\n    findBegin(begin_old_, totalday) {\r\n        let M = this.month_now - 1;\r\n        if (M < 0) {\r\n            M = 11;\r\n        }\r\n        let day = begin_old_.day;\r\n        let week = 6;\r\n        let begin_prev_ = {\r\n            week: 0,\r\n            day: 0,\r\n            dayCount: timeLineConstant.month[M].day\r\n        }\r\n\r\n        for (let D = totalday; D >= 0; D--) {\r\n            if (day <= 0) {\r\n                day = 7;\r\n                week--;\r\n            }\r\n            day--;\r\n        }\r\n        begin_prev_.week = week;\r\n        begin_prev_.day = day + 1;\r\n        return begin_prev_;\r\n    }\r\n\r\n    setElementByAttr(val, val2, day) {\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            let data = this.calendarData[i];\r\n\r\n            if (data.week == val && data.day == val2) {\r\n                if (new Date().getDate() == day &&\r\n                    new Date().getMonth() == this.month_now &&\r\n                    new Date().getYear() + 1900 == this.year_now) {\r\n\r\n                    console.log(\"NOW\", i);\r\n                    this.calendarData[i].now = true;\r\n                } else {\r\n                 //   console.log(\"NOT NOW\", i);\r\n                    this.calendarData[i].now = false;\r\n                }\r\n                this.calendarData[i].text = day;\r\n            }\r\n        }\r\n    }\r\n\r\n    addNewEvent(day, month, year) {\r\n\r\n        let strDate = this.dateAcceptableForHtmlInput(day, month, year);\r\n        document.getElementById(this.dateFormId).value = strDate;\r\n    }\r\n\r\n    dateAcceptableForHtmlInput(day, month, year) {\r\n        return year + \"-\" + this.addZero(month, 10) + \"-\" + this.addZero(day, 10);\r\n    }\r\n\r\n    addZero(Val, Min) {\r\n        let N = new String(Val);\r\n        let MinStr = new String(Min);\r\n\r\n        let ValLength = N.length;\r\n        let MinLength = MinStr.length;\r\n        let Diff = MinLength - ValLength;\r\n        for (let i = 1; i <= Diff; i++) {\r\n            N = new String(\"0\").concat(N);\r\n        }\r\n\r\n        return N;\r\n    }\r\n\r\n    clear() {\r\n\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            this.calendarData[i].text = \"\";\r\n        }\r\n\r\n        timeLineConstant.month[1].day = 28 + (+this.year_now % 4 == 0 ? 1 : 0);\r\n    }\r\n\r\n    fillDay(current_month, next, begin) {\r\n        this.clear();\r\n        let begin_new = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let begin_old_ = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let week_ = begin_new.week;\r\n        let begin_week = week_;\r\n        if (begin_new.week > 1 && begin_new.day > 1) {\r\n            week_ = 1;\r\n            begin_week = 1;\r\n        }\r\n        let day_ = begin_new.day;\r\n        let begin_day = day_;\r\n        let isNow = this.running_month == current_month && this.running_year == this.year_now;\r\n        //  console.log(\"isNow\", isNow,this.running_month,'=',current_month, this.running_month == current_month,this.running_year,'=',this.year_now, this.running_year == this.year_now)\r\n        for (let d = 1; d <= timeLineConstant.month[current_month].day; d++) {\r\n            if (day_ > 7) {\r\n                day_ = 1;\r\n                week_++;\r\n            }\r\n            if (isNow) {\r\n                this.setElementByAttr(week_, day_, d);\r\n            }\r\n            day_++;\r\n        }\r\n        begin_new.week = week_ >= 5 ? 2 : 1;\r\n        begin_new.day = day_;\r\n        begin_new.dayCount = timeLineConstant.month[current_month].day;\r\n        //console.log(\"old\", begin_old_.day, begin_old_.week);\r\n        //console.log(\"   \");\r\n        //console.log(\"new\", begin_new.day, begin_new.week);\r\n        this.fillInfo();\r\n        if (isNow) {\r\n            // this.detail(null, (+this.running_month + 1), this.running_year);\r\n            begin_new.info = \"NOW\";\r\n            this.getEventByDate(this.running_month + 1, this.running_year);\r\n        } else {\r\n            begin_new.info = \"SOME-DAY\";\r\n        }\r\n\r\n\r\n\r\n        return begin_new;\r\n    }\r\n\r\n    render() {\r\n        //validate division\r\n        let selectedYear = this.state.inputYearValue;\r\n\r\n        let totalCalendarData = this.days.map(day => {\r\n            return ({ text: day, title: true })\r\n        })\r\n\r\n        this.calendarData.forEach(element => {\r\n            totalCalendarData.push(element);\r\n        });\r\n\r\n        let calendarData = totalCalendarData.map(\r\n            data => {\r\n\r\n                if (data.text == null || data.text == \"\") {\r\n                    return <div></div>\r\n                }\r\n\r\n                let style = { width: '80%', minHeight: '150px', marginBottom: '15px' };\r\n\r\n                if (data.title == true) {\r\n                    return (<div>{data.text}</div>)\r\n                }\r\n\r\n                if (data.now == true) {\r\n                    style = {\r\n                        ...style,\r\n                        backgroundColor: 'lightgreen'\r\n                    }\r\n                }\r\n\r\n                let events = this.getEventDetail(+data.text);\r\n                let i = 0;\r\n                let eventList = events.map(event => {\r\n                    i++;\r\n                    if (i <= 3) {\r\n\r\n                        return <p key={\"EVT_\" + i}>{event.name}</p>\r\n                    } else if (i == 4) {\r\n                        return <ActionButton onClick={() => { }} text={\"detail \" + i} />\r\n                    } else {\r\n                        return null;\r\n                    }\r\n\r\n\r\n                });\r\n             //   console.log(data.text, \"EVENTS: \", events);\r\n\r\n                return (\r\n                    <Card style={style} title={data.text}\r\n                        onClick={() => this.detail(data.text, this.month_now, this.year_now)}\r\n                        content={eventList}\r\n                    />\r\n                )\r\n            }\r\n        )\r\n\r\n\r\n        let content = <div id=\"calendar-wrapper\">\r\n\r\n            <GridComponent cols={3} style={{\r\n                textAlign: 'center', width: '400px'\r\n            }} items={[\r\n                <ComboBox id=\"input_month\" defaultValue={this.state.selectedMonth} onChange={this.setSelectedMonth}\r\n                    options={timeLineConstant.month} />,\r\n                <InputField type=\"number\" id=\"input_year\" value={selectedYear} onKeyUp={this.changeInputYear} />,\r\n                <ActionButton onClick={(e) => this.setCalendar()} text={\"Go\"} />,\r\n                <ActionButton onClick={(e) => this.doPrevMonth(true)} text={\"Prev\"} />,\r\n                <input disabled className=\"form-control\" id=\"date-info\" />,\r\n                <ActionButton onClick={(e) => this.doNextMonth(true)} text={\"Next\"} />\r\n            ]}\r\n\r\n            />\r\n            <p></p>\r\n            <p></p>\r\n            <GridComponent cols={7} items={calendarData} />\r\n        </div>;\r\n\r\n\r\n        return (\r\n             content  \r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default FullCalendar;","export const divisionConfig = {\r\n    title: \"Badan Pengurus\",\r\n    entityName: \"division\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\", lableName: \"Nama\" },\r\n        { name: \"description\" }, { name: \"institution.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama BPD\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"Deskripsi BPD\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Division Insitusi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"institution.name\",\r\n            reffEntity: \"Institution\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const sectionConfig = {\r\n    title: \"Divisi\",\r\n    entityName: \"section\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"division.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"BPD\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"division.name\",\r\n            reffEntity: \"division\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const programConfig = {\r\n    title: \"Program Kerja\",\r\n    entityName: \"program\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" }\r\n        ,\r\n        { name: \"section.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Proker\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi Proker\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\nexport const eventConfig = {\r\n    title: \"Kegiatan\",\r\n    entityName: \"event\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"info\" },\r\n        { name: \"date\", type: \"date\" },\r\n        { name: \"location\" },\r\n        { name: \"program.name\" },\r\n        { name: \"participant\" },\r\n        {\r\n            name: \"done\", type: \"staticDropdown\", options: [\r\n                { text: \"Done\", value: 1 },\r\n                { text: \"UnDone\", value: 0 }\r\n            ]\r\n        }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Kegiatan\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Waktu Kegiatan\",\r\n            inputType: \"date\",\r\n            name: \"date\"\r\n        },\r\n        {\r\n            lableName: \"Info Kegiatan\",\r\n            inputType: \"textarea\",\r\n            name: \"info\"\r\n        }, {\r\n            lableName: \"Lokasi Kegiatan\",\r\n            inputType: \"text\",\r\n            name: \"location\"\r\n        },\r\n        {\r\n            lableName: \"Nama Program\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"program.name\",\r\n            reffEntity: \"program\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Status Kegiatan\",\r\n            inputType: \"staticDropDown\",\r\n            name: \"done\",\r\n            options: [\r\n                { text: \"Done\", value: 1 },\r\n                { text: \"UnDone\", value: 0 }\r\n            ]\r\n        },\r\n        {\r\n            lableName: \"Peserta\",\r\n            inputType: \"number\",\r\n            name: \"participant\"\r\n        },\r\n    ]\r\n}\r\n\r\nexport const positionConfig = {\r\n    title: \"Posisi\",\r\n    entityName: \"position\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" },\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\nexport const memberConfig = {\r\n    title: \"Anggota\",\r\n    entityName: \"member\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"position\" },\r\n        { name: \"section\" },\r\n        { name: \"description\" }\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Anggota\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"position.name\",\r\n            reffEntity: \"position\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: \"textarea\",\r\n            name: \"name\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==============OLD STUFF==============//\r\n\r\n/**\r\n * SAMPLE\r\n */\r\n\r\nexport const productConfig = {\r\n    title: \"Product\",\r\n    entityName: \"product\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"code\" },\r\n        { name: \"description\" }, { name: \"unit.name\" },\r\n        { name: \"price\", type: \"number\" }, { name: \"category.name\" },\r\n        { name: \"imageUrl\", type: \"imageMultiple\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Product Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Code\",\r\n            inputType: \"text\",\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Product Image(s)\",\r\n            inputType: \"multipleImage\",\r\n            name: \"imageUrl\"\r\n        },\r\n        {\r\n            lableName: \"Product Description\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Product Unit\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"unit.name\",\r\n            reffEntity: \"Unit\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Price\",\r\n            inputType: \"number\",\r\n            name: \"price\"\r\n        },\r\n        {\r\n            lableName: \"Product Category\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"category.name\",\r\n            reffEntity: \"Category\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport const supplierList = {\r\n    title: \"Supplier\",\r\n    entityName: \"supplier\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"address\" }, { name: \"contact\" }, { name: \"website\", type: \"link\" },\r\n        { name: \"iconUrl\", type: \"image\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Supplier Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Address\",\r\n            inputType: \"textarea\",\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Contact\",\r\n            inputType: \"text\",\r\n            name: \"contact\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Icon\",\r\n            inputType: \"singleImage\",\r\n            name: \"iconUrl\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Website\",\r\n            inputType: \"text\",\r\n            name: \"website\"\r\n        }\r\n    ]\r\n}\r\nexport const customerList = {\r\n    title: \"Customer\",\r\n    entityName: \"customer\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"username\" }, { name: \"name\" }, { name: \"address\" }, { name: \"phone\" }, { name: \"email\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Customer Unique Name\",\r\n            inputType: \"text\",\r\n            name: \"username\"\r\n        },\r\n        {\r\n            lableName: \"Customer Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Customer Address\",\r\n            inputType: \"textarea\",\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Customer Phone\",\r\n            inputType: \"text\",\r\n            name: \"phone\"\r\n        },\r\n        {\r\n            lableName: \"Customer Email\",\r\n            inputType: \"email\",\r\n            name: \"email\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const transactionConfig = {\r\n    title: \"Transaction\",\r\n    entityName: \"transaction\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"code\" }, { name: \"transactionDate\", type: \"longDate\" },\r\n        { name: \"type\" }, { name: \"supplier.name\" },\r\n        { name: \"customer.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Transaction Code\",\r\n            inputType: \"text\",\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Date\",\r\n            inputType: \"text\",\r\n            name: \"transactionDate\"\r\n        },\r\n        {\r\n            lableName: \"Transaction Type\",\r\n            inputType: \"text\",\r\n            name: \"type\"\r\n        },\r\n        {\r\n            lableName: \"Supplier\",\r\n            inputType: \"text\",\r\n            name: \"supplier.name\"\r\n        },\r\n        {\r\n            lableName: \"Customer\",\r\n            inputType: \"text\",\r\n            name: \"customer.name\",\r\n        },\r\n\r\n    ]\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport FullCalendar from './FullCalendar';\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth(),\r\n            selectedYear: new Date().getFullYear(),\r\n            detailView: false,\r\n            detailEvents: [],\r\n            selectedDay: 0\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => {\r\n            console.log(\"_________\", month, year);\r\n            this.setState({\r\n                update: new Date(), selectedMonth: month, selectedYear: year\r\n            });\r\n            this.props.getEventByDate(month, year, this.props.app);\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            let events = this.props.events;\r\n            let result = [];\r\n\r\n            events.forEach(event => {\r\n                let date = new Date(event.date);\r\n                if (date.getDate() == day) {\r\n                    result.push(event);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n        this.detail = (day, month, year) => {\r\n            console.log(\"@DETAIL:\", day, month, year);\r\n            let events = this.getEventDetail(+day);\r\n            this.setState({\r\n                detailView: true, detailEvents: events, selectedDay: day,\r\n                selectedMonth: month, selectedYear: year\r\n            })\r\n        }\r\n\r\n        this.refresh = (selectedMonth, selectedYear) => {\r\n            this.setState({\r\n                updated: new Date(),\r\n                selectedMonth: selectedMonth, selectedYear: selectedYear\r\n            })\r\n        }\r\n\r\n        this.addEvent = () => {\r\n            let config = entityConfig.eventConfig;\r\n\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n\r\n            this.props.addEventFromTimeline(\r\n                this.state.selectedDay,\r\n                this.state.selectedMonth+1, /*IMPORTANT*/\r\n                this.state.selectedYear\r\n            );\r\n\r\n            this.props.history.push(\"/management\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n\r\n        //validate division\r\n        if (this.props.division == null) {\r\n            return <h2>Silakan Pilih Badan Pengurus MPI</h2>\r\n        }\r\n        let title = <h2>TimeLine {this.props.division.name + \" \" + this.state.selectedYear}</h2>;\r\n        \r\n        let detailEvents = [];\r\n        if (this.state.detailView == true) {\r\n            this.state.detailEvents.forEach(event => {\r\n\r\n                let content = <div>\r\n                    <p>{\"Date:\" + event.date}</p>\r\n                    <p>{\"Info:\" + event.info}</p>\r\n                    <p>{\"Participant:\" + event.participant}</p>\r\n                    <p>{\"Location:\" + event.location}</p>\r\n                    <p>{\"Status:\" + (event.done ? \"done\" : \"not done\")}</p>\r\n                </div>\r\n\r\n                let eventCard = <Card title={event.name}\r\n                    content={content}\r\n                />\r\n                detailEvents.push(eventCard);\r\n            });\r\n\r\n            if (detailEvents.length == 0) {\r\n                detailEvents = [\r\n                    <div>No Agenda.</div>\r\n                ]\r\n            }\r\n            return <div>\r\n                {title}\r\n                <p>Detail in {this.state.selectedDay + \" \" + stringUtil.monthYearString(\r\n                    this.state.selectedMonth + 1,\r\n                    this.state.selectedYear\r\n                )}</p>\r\n                <ActionButton onClick={() => { this.setState({ detailView: false }) }} text=\"Back\" />\r\n                <GridComponent cols={4} items={detailEvents} />\r\n                <ActionButton status=\"success\" onClick={() => { this.addEvent() }} text=\"Add Event\" />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {title}\r\n                <FullCalendar\r\n                    division={this.props.division}\r\n                    detail={this.detail} getEventByDate={this.getEventByDate}\r\n                    refresh={this.refresh}\r\n                    events={this.props.events} getEventDetail={this.getEventDetail}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        events: state.managementState.events,\r\n        division: state.userState.division\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEventByDate: (m, y, app) => dispatch(actions.getEventByDate(m, y, app)),\r\n    addEventFromTimeline: (d, m, y) => dispatch(actions.addEventFromTimeline(d, m, y))\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Timeline)) ","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Dashboard.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport Tab from '../buttons/Tab';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport DashboardMain from './DashboardMain';\r\nimport Timeline from './Timeline'\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: \"home\"\r\n        }\r\n\r\n        this.setMenuCode = (code) => {\r\n            this.setState({ menu: code });\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n        this.getDivisons = () => {  \r\n            this.props.getDivisons( this.props.app);  \r\n        }\r\n\r\n        this.selectDivision = (divisionId) => {\r\n            this.props.selectDivision(divisionId, this.props.app);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        if (this.props.loginStatus != true)\r\n            return;\r\n        this.props.setMenuCode(menus.DASHBOARD);\r\n        document.title = \"Dashboard\";\r\n\r\n        this.getDivisons();\r\n    }\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                text: \"Home\",\r\n                active: this.state.menu == \"home\",\r\n                onClick: () => {this.setMenuCode('home') }\r\n            },\r\n            {\r\n                text: \"Time Line\",\r\n                active: this.state.menu == \"timeline\", \r\n                onClick: () => {this.setMenuCode('timeline') }\r\n            } \r\n        ];\r\n    }\r\n \r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const buttonsData = this.getButtonsData();\r\n\r\n        let content = null;\r\n        switch (this.state.menu) {\r\n            case 'home':\r\n                content = <DashboardMain  division={this.props.division} \r\n                    selectDivision={this.selectDivision} \r\n                    divisions={this.props.divisions} />\r\n                break;\r\n            case \"timeline\":\r\n                    content = <Timeline app={this.props.app} />\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (<div className=\"section-container\">\r\n            <ContentTitle title={\"Admin Page\"}\r\n                description=\"management organisasi\" />\r\n            <div className=\"management-container\">\r\n                <Tab tabsData={buttonsData} />\r\n                {content}\r\n            </div>\r\n        </div>)\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        divisions: state.userState.divisions,\r\n        division: state.userState.division,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getDivisons: ( app) => dispatch(actions.getDivisons( app)),\r\n    selectDivision: (divisionId, app) => dispatch(actions.selectDivision(divisionId, app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)); ","import React, { Component } from 'react';\r\nimport '../../css/Footer.css'\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let date = new Date().getFullYear();\r\n\r\n        return (\r\n            <div className=\"App-footer\">\r\n               BPP MPI Divisi Media {date+\" powered by React Js \"+React.version}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react' \r\nimport Label from './Label';\r\nimport '../css/Chat.css'\r\nimport GridComponent from './layout/GridComponent';\r\n\r\nclass ChatList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let chats = this.props.messages ? this.props.messages : [];\r\n        let chatRows = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = chats[i];\r\n            chatRows.push(\r\n                <ChatItem message={chat} username={this.props.username} />\r\n            )\r\n        }\r\n        return (\r\n            <GridComponent cols={1} items={chatRows} />)\r\n    }\r\n}\r\n\r\nconst ChatItem = props => {\r\n    let className = \"chat-item rounded paper-shadow  \" + (props.message.admin == 1 ? \" admin \" : \"user\");\r\n    let username = \"\";\r\n    if (props.username) {\r\n        username = \" [\" + props.username + \"]\";\r\n    }\r\n    let sender = props.message.admin == 1 ? \"Admin\" : \"You\" + username;\r\n    let senderComponent = <span>\r\n        {sender}<span style={{ marginLeft: '11px', fontSize: '0.7em', float: 'right' }} >{props.message.date}</span>\r\n    </span>\r\n    return (\r\n        <div className={className}>\r\n            <Label style={{ fontSize: '0.8em', color: 'black' }} text={senderComponent} />\r\n            <Label text={props.message.text} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport SockJsClient from 'react-stomp';\r\nimport ChatList from '../ChatList';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport Label from '../Label';\r\nimport GridComponent from '../layout/GridComponent'\r\n\r\nclass ChatRoom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages: null, username: null, activeId: null }\r\n        this.sendChatMessage = () => {\r\n            if (!_byId(\"input-msg\").value) {\r\n                alert(\"Message must not be null\");\r\n                return;\r\n            }\r\n            this.props.sendChatMessage(_byId(\"input-msg\").value, this.state.username, this.props.app);\r\n            _byId(\"input-msg\").value = \"\";\r\n        }\r\n\r\n        this.handleMessage = (response) => {\r\n            console.log(\"Responses handleMessage: \", response.code);\r\n            console.log(\"LOCAL STORAGE:\", localStorage.getItem(\"requestId\"))\r\n            if (response.code != localStorage.getItem(\"requestId\")) {\r\n                return;\r\n            }\r\n            this.props.storeChatMessageLocally(response.entities);\r\n            // this.setState({ messages: response.entities });\r\n        }\r\n\r\n        this.changeUsername = (value, id) => {\r\n            this.setState({ username: value, activeId: id });\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.setMenuCode('chatroom');\r\n        document.title = \"Chat Room\";\r\n        this.props.getMessages(this.props.app);\r\n        if (this.props.userAlias) {\r\n            this.setState({ username: this.props.userAlias })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.activeId && _byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let userAlias = this.props.userAlias ? this.props.userAlias : \"\";\r\n        let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\r\n        let localHost = \"http://localhost:8080/universal-good-shop/\";\r\n        const usedHost = localHost;\r\n        return (\r\n            // <div className=\"section-container\">\r\n            //     <ContentTitle title=\"What Do You Feel?\" description=\r\n            //         {\"Identified as [\" + this.state.username + \"]\"} />\r\n            //     <InputField\r\n            //         value={userAlias}\r\n            //         onKeyUp={this.changeUsername}\r\n            //         id=\"input-username\"\r\n            //         placeholder=\"identify your name\" />\r\n            //     <div style={{ textAlign: 'left' }} id=\"chat-room\">\r\n\r\n            //         <div className=\"chat-container\"  >\r\n            //             <ChatList username={this.state.username} messages={this.props.messages} />\r\n            //         </div>\r\n\r\n            //         <GridComponent style={{ width: '50%', textAlign: 'right' }} items={[\r\n            //             <InputField style={{ width: '130%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />,\r\n            //             <ActionButton style={{ margin: '5px' }} status=\"success\" onClick={this.sendChatMessage} text=\"send\" />\r\n\r\n            //         ]} />\r\n\r\n            //         <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/messages']}\r\n            //             onMessage={(msg) => { this.handleMessage(msg) }}\r\n            //             ref={(client) => { this.clientRef = client }} />\r\n            //     </div>\r\n            // </div>\r\n            <ContentTitle title=\"under construction\" />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        messages: state.shopState.messages,\r\n        userAlias: state.shopState.userAlias\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    sendChatMessage: (message, username, app) => dispatch(actions.sendChatMessage(message, username, app)),\r\n    storeChatMessageLocally: (messages) => dispatch(actions.storeMessageLocally(messages)),\r\n    getMessages: (app) => dispatch(actions.getMessageList(app))\r\n\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ChatRoom)","import React, { Component } from 'react'\r\n\r\nimport '../../css/Input.css'\r\n\r\nclass DropdownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false\r\n        }\r\n\r\n        this.onHover = (e) => {\r\n            if(this.props.onHover)\r\n                this.props.onHover( this.props.index);\r\n        }\r\n        this.unHover = (e) => { \r\n            this.setState({ hover: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n          return (\r\n            <div onMouseLeave={this.unHover} onMouseOver ={this.onHover}  >\r\n                {this.props.text}</div>\r\n        )\r\n    }\r\n}\r\nexport default DropdownItem;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport DropdownItem from './DropdownItem';\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            focus: true, hover: false, hoverIndex: -1,\r\n\r\n        }\r\n\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(document.getElementById(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onBlur = () => {\r\n            console.log(\"blur\");\r\n            this.setState({ focus: false, hover: false })\r\n        }\r\n\r\n        this.onSelect = (dataValue, text) => {\r\n            console.log(\"select value:\", dataValue);\r\n            if (this.props.onSelect) { this.props.onSelect(dataValue); }\r\n            if (this.props.id) {\r\n                document.getElementById(this.props.id).value = text;\r\n            }\r\n        }\r\n\r\n        this.onHover = (i) => {\r\n            if (this.state.hoverIndex != i)\r\n                this.setState({ hoverIndex: i });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let dropdownList = [];\r\n        let dropdownComponent = \"\";\r\n        if (this.state.focus && this.props.dropdownList && this.props.dropdownList.length > 0) {\r\n            dropdownList = this.props.dropdownList;\r\n            // console.log(\"RENDERD HOVER:\", this.state.hoverIndex);\r\n            dropdownComponent = <div className=\"dropdown\">\r\n                {dropdownList.map(\r\n                    (data, i) => {\r\n                        let className = \"dropdown-item\";\r\n                        if (this.state.hoverIndex == i) className = \"dropdown-item-hovered\";\r\n                        return (\r\n                            <div\r\n                                id={stringUtil.uniqueId()}\r\n                                key={\"dropdown-xx-\" + stringUtil.uniqueId()}\r\n                                onClick={() => this.onSelect(data.value, data.text)}\r\n                                className={className}>\r\n                                <DropdownItem onHover={this.onHover} index={i} text={data.text} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        }\r\n\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let inputClassName = \"rounded\";\r\n        return (\r\n            <div\r\n                onMouseOver={() => this.setState({ focus: true })}\r\n                onMouseLeave={this.onBlur}\r\n                className=\"dropdown-wrapper input-field\">\r\n                <input\r\n                    className={inputClassName}\r\n                    onFocus={() => this.setState({ focus: true })}\r\n                    id={this.props.id}\r\n                    type=\"text\"\r\n                    onKeyUp={this.handleKeyup}\r\n                    placeholder={placeholder} />\r\n                {dropdownComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default InputDropdown;","import React, { Component } from 'react'\r\nimport '../../css/Input.css'\r\nimport '../../css/Common.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport * as url from '../../constant/Url'\r\nimport ActionButton from '../buttons/ActionButton'\r\n\r\nclass InputFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            base64Data: null\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            componentUtil.toBase64(e.target, this, function (result, referer) {\r\n                referer.setState({ base64Data: result });\r\n\r\n            });\r\n        }\r\n\r\n        this.removeImage = () => {\r\n            if(this.props.removeImage){\r\n                this.props.removeImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.base64Data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let displayImage = null;\r\n        if (this.state.base64Data) {\r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.state.base64Data} width=\"60\" height=\"60\" />\r\n            </div>;\r\n        }\r\n        if (this.props.value && this.props.value.trim() != \"\") {\r\n            \r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.props.value} width=\"60\" height=\"60\" />\r\n                <ActionButton text=\"cancel\" status=\"danger\" onClick={this.removeImage} />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field\" >\r\n                <input accept=\"image/*\" onChange={this.onChange} type=\"file\" key={\"input_file_\" + stringUtil.uniqueId()} />\r\n                {displayImage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFile;\r\n\r\n","import React, { Component } from 'react';\r\nimport * as url from '../../constant/Url'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InputFile from './InputFile';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFileMultiple extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAddMoreFile = () => {\r\n            if(this.props.addMoreImage){\r\n                this.props.addMoreImage();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let inputFields = [];\r\n        if (this.props.inputFilesData) {\r\n            inputFields = this.props.inputFilesData;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {inputFields.map(\r\n                    inputFileData => {\r\n                        let value = inputFileData.value;\r\n                        return (\r\n                            <InputFile\r\n                                key={stringUtil.uniqueId() + \"_multiple_file_item\"}\r\n                                onChange={(base64) => {\r\n                                    if (inputFileData.onChange)\r\n                                        inputFileData.onChange(base64)\r\n                                }}\r\n                                value={value && value.includes(\"base64\") ? value : value ?\r\n                                    url.baseImageUrl + value : null}\r\n                                id={inputFileData.inputId}\r\n                                removeImage={() => {\r\n                                    if (inputFileData.removeImage)\r\n                                        inputFileData.removeImage()\r\n                                }\r\n                                }\r\n\r\n                            />\r\n                        )\r\n                    }\r\n                )}\r\n                <ActionButton text=\"add more\" onClick={this.handleAddMoreFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFileMultiple;","import React, { Component } from 'react'\r\nimport '../../css/Entity.css'\r\nimport '../../css/Common.css'\r\nimport Label from '../Label'\r\nimport InputDropdown from '../input/InputDropdown'\r\nimport ComboBox from '../input/ComboBox'\r\nimport InputField from '../input/InputField';\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport InputFile from '../input/InputFile'\r\nimport * as url from '../../constant/Url'\r\nimport InputFileMultiple from '../input/InputFileMultiple'\r\n\r\nclass EntityForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            managedEntity: null,\r\n            activeId: null,\r\n            formValues: {},\r\n            dropdownList: {},\r\n            dropdownValues: {},\r\n            selectedEntities: {},\r\n            base64Data: {},\r\n            base64DataMultiple: {},\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * valudate before submit\r\n         */\r\n        this.validateEntity = (entity) => {\r\n            const result = entity;\r\n            for (let key in entity) {\r\n                console.log(key);\r\n                const formDataItem = this.getFormDataItemStartWith(key);\r\n                if (formDataItem) {\r\n                    if (formDataItem.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle single Image\r\n                         */\r\n                        if (entity[key] && !entity[key].includes(\"base64\")) {\r\n                            result[key] = null;\r\n                        }\r\n                    } else if (formDataItem.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle MULTIPLE Image\r\n                         */\r\n\r\n                        if (entity[key]) {\r\n                            let arrayOfValues = entity[key].split(\"~\");\r\n                            let resultValue = new Array();\r\n                            for (let i = 0; i < arrayOfValues.length; i++) {\r\n                                const element = arrayOfValues[i];\r\n                                /**\r\n                                 * if not modified\r\n                                 */\r\n                                if (!this.state.base64DataMultiple[key] ||\r\n                                    !this.state.base64DataMultiple[key][i]) {\r\n                                    resultValue.push(\"{ORIGINAL>>\" + element + \"}\");\r\n                                } else\r\n                                    /**\r\n                                     * if modified\r\n                                     */\r\n                                    if (this.state.base64DataMultiple[key] &&\r\n                                        this.state.base64DataMultiple[key][i]) {\r\n                                        const updatedValue = this.state.base64DataMultiple[key][i];\r\n                                        resultValue.push(\"{ORIGINAL>>\" + element + \"}\" + updatedValue);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            if (this.state.base64DataMultiple[key] && this.state.base64DataMultiple[key].length > arrayOfValues.length) {\r\n                                for (let i = arrayOfValues.length - 1; i < this.state.base64DataMultiple[key].length; i++) {\r\n                                    const element = this.state.base64DataMultiple[key][i];\r\n                                    if (element && element.includes(\"base64\")) {\r\n                                        resultValue.push(element);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (resultValue.length > 0)\r\n                                result[key] = resultValue.join(\"~\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.setState({ updated: new Date() })\r\n        }\r\n\r\n        this.handleSubmit = () => {\r\n            let addFromOtherPage = false;\r\n\r\n            const updateMode = this.props.managedEntity != null && this.props.addNew == false;\r\n            if (updateMode) {\r\n                console.log(\"WILL UPDATE(props):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"update\");\r\n                }\r\n            }else{\r\n                if( this.props.managedEntity != null && this.props.addNew == true){\r\n                    addFromOtherPage = true;\r\n                }\r\n            }\r\n\r\n            const addNewMod = this.state.managedEntity != null;\r\n            if (addNewMod  ) {\r\n                console.log(\"WILL SUBMIT NEW(state):\", this.state.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.state.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n\r\n            /**\r\n             * SPECIAL CASE\r\n             */\r\n\r\n            if ( addFromOtherPage) {\r\n                console.log(\"WILL SUBMIT NEW(SPECIAL CASE):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n            this.clear();\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.onKeyUp = (value, id, propName) => {\r\n            this.setState({ activeId: id });\r\n            this.updateSelectedEntity(propName, value);\r\n\r\n        }\r\n\r\n        this.clear = () => {\r\n            this.setState({\r\n                managedEntity: null,\r\n                dropdownList: {},\r\n                dropdownValues: {},\r\n                selectedEntities: {},\r\n                base64Data: {},\r\n                base64DataMultiple: {}\r\n            });\r\n            if (this.props.removeManagedEntity) {\r\n                this.props.removeManagedEntity();\r\n            }\r\n        }\r\n\r\n        this.populateDropdown = (entityname, fieldname, fieldvalue) => {\r\n            const request = {\r\n                entityName: entityname,\r\n                fieldName: fieldname.split(\".\")[1],\r\n                fieldValue: fieldvalue\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"DATA FOR DROPDOWN: \", data);\r\n            });\r\n\r\n        }\r\n\r\n        this.onKeyUpDynamicDropdown = (value, id, propName, reffEntity) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            const request = {\r\n                entityName: reffEntity,\r\n                fieldName: 'name',\r\n                fieldValue: value\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"LIST FOR DROPDOWN: \", data.entities)\r\n                referer.populateDropdownValues(data.entities, propName);\r\n            });\r\n            let currentDropdownValue = this.state.dropdownValues;\r\n            currentDropdownValue[propName] = value;\r\n            this.setState({ activeId: id, dropdownValues: currentDropdownValue });\r\n        }\r\n\r\n        this.populateDropdownValues = (entities, propName) => {\r\n            console.log(\"ENTITIES:\", entities)\r\n            let options = new Array();\r\n            const formDataItem = this.getFormDataItem(propName);\r\n            if (null == formDataItem) {\r\n                console.log(\"FORM DATA NOT FOUND\");\r\n                return;\r\n            }\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                options.push({\r\n                    value: entity[formDataItem.idField],\r\n                    text: entity[formDataItem.displayField],\r\n                    entity: entity\r\n                })\r\n            }\r\n            let currentDropdownList = this.state.dropdownList;\r\n            currentDropdownList[propName] = options;\r\n            //  this.setState({ dropdownList: currentDropdownList })\r\n            return options;\r\n        }\r\n\r\n        this.getSelectedDropdownItem = (value, propName) => {\r\n            if (this.state.dropdownList[propName] == null) {\r\n                return null;\r\n            }\r\n            const dropdownList = this.state.dropdownList[propName];\r\n            for (let i = 0; i < dropdownList.length; i++) {\r\n                const option = dropdownList[i];\r\n                if (option.value == value) {\r\n                    return option;\r\n                }\r\n\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getFormDataItem = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.addMoreImage = (propName) => {\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    currentValue = currentValue.trim() + \"~DEFAULT.BMP\";\r\n                    this.updateSelectedEntity(propName, currentValue);\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                let currentValue;\r\n                if (!managedEntity) {\r\n                    managedEntity = {};\r\n                    currentValue = \"\";\r\n                } else\r\n                    currentValue = managedEntity[propName] + \"~\";\r\n                currentValue = currentValue.trim() + \"DEFAULT.BMP\";\r\n                this.updateSelectedEntity(propName, currentValue);\r\n            }\r\n        }\r\n\r\n        this.updateSelectedEntity = (propName, value) => {\r\n            if (this.props.managedEntity) {\r\n                this.props.managedEntity[propName] = value;\r\n                this.refresh();\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) managedEntity = {};\r\n                managedEntity[propName] = value;\r\n                this.setState({ managedEntity: managedEntity });\r\n            }\r\n\r\n        }\r\n\r\n        this.getFormDataItemStartWith = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                    if (formDataItem.name.split(\".\").length > 1) {\r\n                        if (formDataItem.name.split(\".\")[0] == propName) {\r\n                            return formDataItem;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.handleRemoveImage = (propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = null;\r\n\r\n            this.updateSelectedEntity(propName, null);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64Image = (base64, propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = base64;\r\n\r\n            this.updateSelectedEntity(propName, base64);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64MultipleImage = function (base64, propNameRaw, i) {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = base64;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n        }\r\n\r\n        this.removeElementAtPosition = (array, index) => {\r\n            let result = new Array();\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (i != index) {\r\n                    result.push(array[i])\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.handleRemoveMultipleImage = (propNameRaw, i) => {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = null;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity; \r\n                if (!managedEntity) {\r\n                    return;\r\n                }\r\n                let currentValue = managedEntity[propName];\r\n                if(currentValue){\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.selectFromDynamicDropdown = (value, propName) => {\r\n            console.log(propName, \":\", value);\r\n            const currentDropdownList = this.state.dropdownList;\r\n            const dropdownValues = this.state.dropdownValues;\r\n            const selectedEntities = this.state.selectedEntities;\r\n\r\n            const selectedOption = this.getSelectedDropdownItem(value, propName);\r\n            if (null == selectedOption) {\r\n                return;\r\n            }\r\n\r\n            dropdownValues[propName] = selectedOption.text;\r\n            currentDropdownList[propName] = [];\r\n            selectedEntities[propName] = selectedOption.entity;\r\n\r\n            /**\r\n             * time to modify entity\r\n             */\r\n            const displayPropName = propName.split(\".\")[0];\r\n\r\n            this.updateSelectedEntity(displayPropName, selectedOption.entity);\r\n            this.setState({ activeId: null, dropdownList: currentDropdownList, dropdownValues: dropdownValues, selectedEntities: selectedEntities });\r\n        }\r\n\r\n        this.handleStaticDropdownChange = (value, propName) =>{\r\n            this.updateSelectedEntity(propName, value);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        let formData = this.props.entityConfig && this.props.entityConfig.formData ? this.props.entityConfig.formData : [];\r\n\r\n        const entityExist = this.props.managedEntity != null || this.state.managedEntity;\r\n\r\n\r\n        let actionButtons = null;\r\n        if(!this.props.entityConfig.disabled){\r\n            actionButtons  =   <ActionButtons buttonsData={[\r\n                {\r\n                    text: this.props.managedEntity && this.props.addNew == false ? \"Update\" : \"Add Record\",\r\n                    onClick: this.handleSubmit,\r\n                    status:\"success\"\r\n                },\r\n                {\r\n                    text: \"Clear\",\r\n                    status:\"warning\",\r\n                    onClick: this.clear\r\n                }\r\n            ]} />;\r\n        }\r\n\r\n        let formFields = <div className=\"entity-form  \">\r\n            {formData.map(\r\n                data => {\r\n                    const parentPropName = data.name.split(\".\")[0];\r\n                    let value = null;\r\n                    if (entityExist) {\r\n                        const entity = this.props.managedEntity ? this.props.managedEntity : this.state.managedEntity;\r\n                        const propName = data.name;\r\n\r\n                        if (propName.split(\".\").length > 1 && this.state.activeId != \"input-for-\" + data.name) {\r\n                            const valueAsObject = entity[propName.split(\".\")[0]];\r\n                            const objectPropName = propName.split(\".\")[1];\r\n\r\n                            value = valueAsObject ? valueAsObject[objectPropName] : null;\r\n                        } else {\r\n                            value = entity[propName];\r\n                        }\r\n                    }\r\n\r\n                    let inputComponent = null;\r\n                    const inputId = \"input-for-\" + data.name;\r\n\r\n                    if (data.inputType == \"dynamicDropdown\") {\r\n                        /**\r\n                         * if dynamic dropDown\r\n                         */\r\n\r\n                        if (null == value) {\r\n                            value = this.state.dropdownValues[data.name]\r\n                        }\r\n\r\n                        inputComponent = <InputDropdown\r\n                            onSelect={(value) => this.selectFromDynamicDropdown(value, data.name)}\r\n                            id={inputId}\r\n                            placeholder={data.lableName}\r\n                            value={value}\r\n                            dropdownList={this.state.dropdownList[data.name]}\r\n                            onKeyUp={(value, id) => { this.onKeyUpDynamicDropdown(value, id, data.name, data.reffEntity) }} />\r\n\r\n                    } else  if (data.inputType == \"staticDropDown\") {\r\n                        /**\r\n                         * if static drop down\r\n                         */\r\n                        console.log(\"STATIC DROPDOWN VALUE: \",value);\r\n                        inputComponent = <ComboBox \r\n                             defaultValue={new String(value)}\r\n                            onChange={(val)=>this.handleStaticDropdownChange(val,data.name)}\r\n                            options={data.options} id={stringUtil.uniqueId()}\r\n                         />\r\n\r\n                    } else if (data.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle image single\r\n                         */\r\n                        inputComponent = <InputFile\r\n                            onChange={(base64) => this.handleChangeBase64Image(base64, data.name)}\r\n                            value={value && value.includes(\"base64\") ? value : value ? url.baseImageUrl + value : null}\r\n                            id={inputId}\r\n                            removeImage={() => this.handleRemoveImage(data.name)}\r\n\r\n                        />\r\n\r\n                    } else if (data.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle multiple single\r\n                         */\r\n                        let valueSplit = value ? value.split(\"~\") : [];\r\n\r\n                        let imagesData = new Array();\r\n                        for (let i = 0; i < valueSplit.length; i++) {\r\n                            let valueSplitItem = valueSplit[i];\r\n                            if (this.state.base64DataMultiple[parentPropName] &&\r\n                                this.state.base64DataMultiple[parentPropName][i]\r\n                                && this.state.base64DataMultiple[parentPropName][i].includes(\"base64\")) {\r\n                                valueSplitItem = this.state.base64DataMultiple[parentPropName][i];\r\n                            }\r\n                            imagesData.push({\r\n                                value: valueSplitItem,\r\n                                onChange: (base64) => {\r\n                                    this.handleChangeBase64MultipleImage(base64, data.name, i);\r\n                                },\r\n                                removeImage: () => this.handleRemoveMultipleImage(data.name, i)\r\n\r\n                            })\r\n                        }\r\n                        inputComponent = <InputFileMultiple\r\n                            addMoreImage={() => this.addMoreImage(data.name)}\r\n                            inputFilesData={imagesData}\r\n\r\n                        />\r\n                    }\r\n\r\n                    else {\r\n                        /**\r\n                         * regular\r\n                         */\r\n                        inputComponent = <InputField\r\n                            onKeyUp={(value, id) => { this.onKeyUp(value, id, data.name) }}\r\n                            id={inputId} value={value}\r\n                            type={data.inputType} placeholder={data.lableName} />;\r\n                    }\r\n\r\n                    return (\r\n                        <div key={\"FORM-FIELD-\" + stringUtil.uniqueId()}>\r\n                            <Label text={data.lableName} />\r\n                            {inputComponent}\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n\r\n            {actionButtons}                \r\n        </div>\r\n\r\n        return (\r\n            <div className=\"entity-form-wrapper\">\r\n                {formFields}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntitiesWithCallback: (request, referer, callback) => dispatch(actions.getEntitiesWithCallback(request, referer, callback)),\r\n\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EntityForm))","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport '../../css/Management.css'\r\nimport '../../css/Entity.css'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport InputField from '../input/InputField'\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport EntityForm from './EntityForm';\r\nimport * as url from '../../constant/Url'\r\nimport Label from '../Label'\r\nimport GridComponent from '../layout/GridComponent'\r\n\r\nclass EntityList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: {},\r\n            activeId: null,\r\n            orderBy: null,\r\n            orderType: null\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are your sure for deleting this entity?\")) { return; }\r\n            console.log(\"Will DELETE: \", id)\r\n        }\r\n        this.handleEdit = (id) => {\r\n            this.getEntityById(id);\r\n        }\r\n        this.getHeaderNames = (fieldNames) => {\r\n            const headers = [];\r\n            for (let i = 0; i < fieldNames.length; i++) {\r\n                const name = fieldNames[i];\r\n                let headerName = name.name;\r\n                if (headerName.split(\".\").length > 1) {\r\n                    headerName = headerName.split(\".\")[0];\r\n                }\r\n                headers.push(headerName.toUpperCase());\r\n            }\r\n            headers.push(\"OPTION\");\r\n            return headers;\r\n        }\r\n\r\n        this.goToPage = (page, orderObject) => {\r\n            if (page > this.props.entitiesData.totalData / 10) {\r\n                page = 0;\r\n            }\r\n            if (page < 0) {\r\n                page = Math.ceil(this.props.entitiesData.totalData / 10 - 1);\r\n            }\r\n\r\n            let config = this.props.entityConfig;\r\n            config.filter = this.state.filter;\r\n            if (orderObject != null) {\r\n                config.orderBy = orderObject.orderBy;\r\n                config.orderType = orderObject.orderType;\r\n                this.setState({ orderBy: orderObject.orderBy, orderType: orderObject.orderType });\r\n            }\r\n\r\n            this.props.getEntityInPage(config, page);\r\n\r\n        }\r\n\r\n        this.getEntityById = (id) => {\r\n            const config = this.props.entityConfig;\r\n            if (config == null) {\r\n                alert(\"Config Not Found!\");\r\n                return;\r\n            }\r\n\r\n            this.props.getEntityById(config.entityName, id);\r\n        }\r\n\r\n        this.createNavButtons = () => {\r\n            let displayedButtons = componentUtil.createNavButtons(this.props.entitiesData.totalData / 10, this.props.currentPage);\r\n            return displayedButtons;\r\n        }\r\n\r\n        this.setOrderBy = (fieldName, orderType) => {\r\n            this.goToPage(this.props.currentPage, { orderBy: fieldName, orderType: orderType });\r\n        }\r\n\r\n        this.createFilterInputs = (fieldNames) => {\r\n            let inputs = new Array();\r\n            for (let i = 0; i < fieldNames.length; i++) {\r\n                const fieldName = fieldNames[i];\r\n                let headerName = fieldName.name;\r\n                if (headerName.split(\".\").length > 1) {\r\n                    headerName = headerName.split(\".\")[0];\r\n                }\r\n\r\n                let value = \"\";\r\n                \r\n                if (this.state.filter[headerName] != null) {\r\n                    value = this.state.filter[headerName];\r\n                    \r\n                }\r\n\r\n                let input = <InputField value={value} id={headerName + \"_filter_id\"}\r\n                    onKeyUp={this.handleFilterChange} key={\"input_field_\" + stringUtil.uniqueId()}\r\n                    placeholder={headerName} />\r\n\r\n                if (fieldName.type == \"date\") {\r\n                    const valueDay = this.state.filter[headerName + \"-day\"];\r\n                    const valueMonth = this.state.filter[headerName + \"-month\"];\r\n                    const valueYear = this.state.filter[headerName + \"-year\"];\r\n\r\n                    const inputDay = <InputField value={valueDay} id={headerName + \"-day_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_d\" + stringUtil.uniqueId()}\r\n                        placeholder={\"day\"} />;\r\n                    const inputMonth = <InputField value={valueMonth} id={headerName + \"-month_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_m\" + stringUtil.uniqueId()}\r\n                        placeholder={\"month\"} />;\r\n                    const inputYear = <InputField value={valueYear} id={headerName + \"-year_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_y\" + stringUtil.uniqueId()}\r\n                        placeholder={\"year\"} />;\r\n\r\n                    input = <GridComponent width=\"50px\" items={[inputDay, inputMonth, inputYear]} />\r\n                }\r\n\r\n\r\n                let orderType = \"asc\";\r\n                if (this.state.orderBy && this.state.orderBy == headerName) {\r\n                    if (this.state.orderType == \"asc\") {\r\n                        orderType = \"desc\";\r\n                    }\r\n                }\r\n\r\n\r\n                const orderButton = <ActionButton\r\n                    onClick={() => { this.setOrderBy(headerName, orderType) }}\r\n                    text={orderType} />\r\n\r\n                inputs.push(<div className=\"filter-wrapper\">\r\n                    {input}{orderButton}\r\n                </div>);\r\n            }\r\n            inputs.push(\"\");\r\n            return inputs;\r\n        }\r\n\r\n        this.handleFilterChange = (value, id) => {\r\n\r\n            let filter = this.state.filter;\r\n            if (value != null && value.trim() == \"\") {\r\n                filter[id.split(\"_filter_id\")[0]] = null;\r\n\r\n            } else {\r\n                filter[id.split(\"_filter_id\")[0]] = value;\r\n\r\n            }\r\n\r\n            this.setState({ filter: filter, activeId: id });\r\n            this.goToPage(this.props.currentPage);\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        const entitiesData = this.props.entitiesData;\r\n        const entityConfig = this.props.entityConfig;\r\n\r\n        if (null == entitiesData || null == entityConfig || null == entitiesData.entities) {\r\n            return (<h2>Please Select One Of Menu</h2>)\r\n        }\r\n\r\n        const rows = [\r\n            //header\r\n            {\r\n                values: this.getHeaderNames(entityConfig.fieldNames),\r\n                disabled: true,\r\n                style: { textAlign: 'center', fontWeight: 'bold' }\r\n            },\r\n            //filter\r\n            {\r\n                values: this.createFilterInputs(entityConfig.fieldNames),\r\n                disabled: true\r\n            }\r\n        ];\r\n\r\n\r\n        const entities = this.props.entitiesData.entities;\r\n        const idField = entityConfig.id;\r\n\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const entity = entities[i];\r\n            let rowValues = [];\r\n            for (let j = 0; j < entityConfig.fieldNames.length; j++) {\r\n                const fieldItem = entityConfig.fieldNames[j];\r\n                let entityProp = fieldItem.name;\r\n                let object = false\r\n\r\n                if (entityProp.split(\".\").length > 1) {\r\n                    entityProp = entityProp.split(\".\")[0];\r\n                    object = true;\r\n                }\r\n\r\n                let entityValue = entity[entityProp];\r\n                if (fieldItem.type) {\r\n                    if (fieldItem.type == \"number\") {\r\n                        entityValue = stringUtil.beautifyNominal(entityValue);\r\n                    } else if (fieldItem.type == \"link\") {\r\n                        entityValue = <a href={entityValue}><u>{entityValue}</u></a>\r\n                    } else if (fieldItem.type == \"image\") {\r\n                        entityValue = <img width=\"60\" height=\"60\" alt={url.baseImageUrl + entityValue} src={url.baseImageUrl + entityValue} />\r\n                    } else if (fieldItem.type == \"imageMultiple\") {\r\n                        let imgName = entityValue.split(\"~\")[0];\r\n\r\n                        entityValue = <img width=\"60\" height=\"60\" src={url.baseImageUrl + imgName} />\r\n                    } else if (fieldItem.type == \"longDate\") {\r\n                        const dateStr = new Date(entityValue).toDateString();\r\n                        entityValue = <Label text={dateStr} />;\r\n                    } else if (fieldItem.type == \"staticDropdown\") {\r\n                        const options = fieldItem.options;\r\n\r\n                        options.forEach(opt => {\r\n                            if (opt.value == entityValue) {\r\n                                entityValue = opt.text;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                rowValues.push(object && entityValue ? entityValue[fieldItem.name.split(\".\")[1]] : entityValue);\r\n            }\r\n\r\n            rows.push(\r\n                {\r\n                    identifier: entity[idField],\r\n                    values: rowValues,\r\n                    handleDelete: this.handleDelete,\r\n                    handleEdit: this.handleEdit,\r\n                    disabled: entityConfig.disabled == true ? true : false\r\n                }\r\n            )\r\n        }\r\n\r\n        const buttonsData = this.createNavButtons();\r\n        const fixButtonData = new Array();\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + -1) },\r\n            text: 'previous'\r\n        })\r\n\r\n        for (let i = 0; i < buttonsData.length; i++) {\r\n            buttonsData[i].onClick = () => { this.goToPage(buttonsData[i].value) }\r\n            if (buttonsData[i].value == this.props.currentPage) {\r\n                buttonsData[i].status = \" btn-active\";\r\n            }\r\n            buttonsData[i].text = buttonsData[i].text;\r\n\r\n\r\n            fixButtonData.push(buttonsData[i]);\r\n        }\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + 1) },\r\n            text: 'next'\r\n        });\r\n\r\n        let navButtons = <ActionButtons style={{\r\n            backgroundColor: 'white',\r\n            paddingTop: '15px',\r\n            margin: '10px'\r\n        }} buttonsData={fixButtonData} />\r\n\r\n        let entityTable = <div className=\"entity-list-container\">\r\n\r\n            <InstantTable\r\n                style={{\r\n                    width: \"100%\",\r\n                    margin: \"5px\",\r\n                }}\r\n                rows={rows} />\r\n        </div>\r\n\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <div className=\"entity-container\">\r\n                    <div style={{\r\n                        backgroundColor: 'white',\r\n                        margin: '10px'\r\n                    }} > </div>\r\n                    {navButtons}\r\n                    <div className=\"entityForm\">\r\n                        <EntityForm\r\n                            addNew={this.props.addNew}\r\n                            app={this.props.app}\r\n                            updateEntity={this.props.updateEntity}\r\n                            removeManagedEntity={this.props.removeManagedEntity}\r\n                            managedEntity={this.props.managedEntity}\r\n                            entityConfig={entityConfig} />\r\n                    </div>\r\n                    {entityTable}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntityList;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Management.css'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ContentTitle from '../layout/ContentTitle'\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport EntityList from './EntityList';\r\nimport Tab from '../buttons/Tab';\r\n\r\nclass Management extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entityList: [],\r\n            currentPage: 0,\r\n            entityConfig: { entityName: \"main\" }\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.getEntityInPage(this.state.entityConfig, this.state.currentPage);\r\n        }\r\n\r\n        this.loadEntityManagement = (config) => {\r\n            this.props.removeManagedEntity();\r\n            this.setState({ currentPage: 0, entityConfig: config });\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n        }\r\n\r\n        this.gotoMainPage = () => {\r\n            this.props.resetManagementPage();\r\n            this.setState({ currentPage: 0, entityConfig: { entityName: \"main\" } });\r\n        }\r\n\r\n        this.getEntityInPage = (config, page) => {\r\n            this.setState({ currentPage: page });\r\n\r\n            const request = {\r\n                entityName: config.entityName,\r\n                page: page,\r\n                limit: 10,\r\n                entityConfig: config,\r\n                fieldsFilter: config.filter,\r\n                orderBy: config.orderBy,\r\n                orderType: config.orderType,\r\n            };\r\n\r\n            console.log(\"REQUEST: \", request)\r\n\r\n            this.props.getEntities(request, this.props.app);\r\n        }\r\n\r\n        this.checkIfCurrentMenuName = (name) => {\r\n            return this.state.entityConfig.entityName == name;\r\n        }\r\n\r\n        this.getButtonsData = () => {\r\n            return [\r\n                {\r\n                    text: \"#\",\r\n                    active: this.checkIfCurrentMenuName(\"main\"),\r\n                    onClick: () => { this.gotoMainPage() }\r\n                },\r\n                {\r\n                    text: \"Badan Pengurus\",\r\n                    active: this.checkIfCurrentMenuName(\"division\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.divisionConfig) }\r\n                },\r\n                {\r\n                    text: \"Divisi\",\r\n                    active: this.checkIfCurrentMenuName(\"section\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.sectionConfig) }\r\n                },\r\n                {\r\n                    text: \"Program Kerja\",\r\n                    active: this.checkIfCurrentMenuName(\"program\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.programConfig) }\r\n                },\r\n                {\r\n                    text: \"Kegiatan\",\r\n                    active: this.checkIfCurrentMenuName(\"event\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.eventConfig) }\r\n                },\r\n                {\r\n                    text: \"Posisi\",\r\n                    active: this.checkIfCurrentMenuName(\"position\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.positionConfig) }\r\n                },\r\n                {\r\n                    text: \"Anggota\",\r\n                    active: this.checkIfCurrentMenuName(\"member\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.memberConfig) }\r\n                },\r\n            ];\r\n        }\r\n\r\n        this.updateEntity = (name, entity, flag) => {\r\n            if (!window.confirm(\"Are you sure will update \" + name + \"?\")) {\r\n                return;\r\n            }\r\n\r\n            let newRecord = flag == \"addNew\";\r\n\r\n            this.props.updateEntity({ entityName: name, entity: entity, isNewRecord: newRecord }, this, function (ref) {\r\n                console.log(\"WILL CALLBACK\");\r\n                ref.callbackHandleUpdate();\r\n            });\r\n        }\r\n\r\n        this.getEntityById = (name, id) => {\r\n            this.props.getEntityById(name, id, this.props.app);\r\n        }\r\n        this.removeManagedEntity = () => {\r\n            this.props.removeManagedEntity();\r\n        }\r\n\r\n        this.callbackHandleUpdate = () => {\r\n            this.refresh();\r\n            this.removeManagedEntity();\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Management\";\r\n        this.props.setMenuCode(\"management\");\r\n    }\r\n\r\n    render() {\r\n        console.log(\"managedEntity: \", this.props.managedEntity);\r\n        let entityList = this.props.entitiesData ? this.props.entitiesData.entities : [];\r\n        if (null == entityList) { entityList = []; }\r\n\r\n        let buttonsData = this.getButtonsData();\r\n\r\n        let content = <h2>Content</h2>\r\n\r\n        if (this.props.entitiesData.entityConfig == null) {\r\n            content = <div>\r\n                <h2>{\"Management Page\"}\r\n                </h2></div>\r\n        } else {\r\n            content = <EntityList currentPage={this.state.currentPage}\r\n                app={this.props.app}\r\n                getEntityInPage={this.getEntityInPage}\r\n                entityConfig={this.props.entitiesData.entityConfig}\r\n                entitiesData={this.props.entitiesData}\r\n                managedEntity={this.props.managedEntity}\r\n                getEntityById={this.getEntityById}\r\n                removeManagedEntity={this.removeManagedEntity}\r\n                updateEntity={this.updateEntity}\r\n                addNew={this.props.addNew}\r\n            />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title={\"Management \" + (this.state.entityConfig.title ?\r\n                    this.state.entityConfig.title :\r\n                    this.props.entitiesData && this.props.entitiesData.entityConfig ?\r\n                        this.props.entitiesData.entityConfig.title : \"\")}\r\n\r\n                    description=\"manage master data\" />\r\n                <div className=\"management-container\">\r\n                    <Tab tabsData={buttonsData} />\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        entitiesData: state.managementState.entitiesData,\r\n        managedEntity: state.managementState.managedEntity,\r\n        addNew: state.managementState.addNew\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEntityById: (name, id, app) => {\r\n        let action = actions.getEntityById(name, id, app);\r\n        dispatch(action);\r\n    },\r\n    resetManagementPage : () =>dispatch(actions.resetManagementPage()),\r\n    removeManagedEntity: () => dispatch(actions.removeManagedEntity()),\r\n    updateEntity: (request, referer, callback) => dispatch(actions.updateEntity(request, referer, callback))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Management))","\nimport React, { Component } from 'react'; \nimport './App.css';\n\nimport Header from './components/layout/Header'\nimport Menu from './components/buttons/Menu'\nimport Home from './components/pages/Home'\nimport About from './components/pages/About'\nimport {  Route, Link, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'  \nimport Login from './components/pages/Login';\nimport Dashboard from './components/pages/Dashboard';\nimport * as menus from './constant/Menus'\nimport Message from './components/Message';\nimport Footer from './components/layout/Footer';\nimport SockJsClient from 'react-stomp';\nimport ChatRoom from './components/pages/ChatRoom';\nimport Management from './components/pages/Management'; \n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      detailMode: false,\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      enableShopping: false,\n      mainAppUpdated:new Date()\n    };\n\n    this.setDetailMode = (detailMode) => {\n      this.setState({ detailMode: detailMode });\n    }\n\n    this.setMenuCode = (code) => { \n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.setEnableShopping = (val) => {\n      this.setState({ enableShopping: val })\n    }\n\n    this.handleMenuCLick = (menu) => {\n      switch (menu.code) {\n\n        case menus.LOGOUT:\n          if (!window.confirm(\"Are you sure want to logout?\")) {\n            return;\n          }\n          this.props.performLogout(this);\n          break;\n\n        default:\n          break;\n      }\n\n\n    }\n\n\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n\n    this.startLoading = (realtime) => {\n      this.setState({ loading: true, realtime: realtime });\n    }\n    this.endLoading = () => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }\n\n    this.handleMessage = (msg) => {\n      let percentage = Math.floor(msg.percentage);\n      if (msg.percentage < 0 || msg.percentage > 100) {\n        this.endLoading();\n      }\n      this.setState({ loadingPercentage: percentage });\n    }\n  }\n\n\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      localStorage.setItem(\"requestId\", this.props.requestId);\n      this.props.refreshLogin();\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    let additionalMenus = this.props.menus\n    let menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      let menu = additionalMenus[i];\n\n      if(!this.state.enableShopping && menu.code == 'cart')\n        continue;\n\n      if (this.props.loginStatus != true && menu.authenticated == true)\n        continue;\n\n      menus.push(menu);\n\n    }\n \n    return menus;\n\n  }\n\n  render() {\n\n    const header =  <Header app={this} title=\"MPI Monitoring\"   />;\n\n    if (!this.state.requestId) {\n      return (\n        <div>\n          {header}\n          Please wait..\n        </div>\n      )\n    }\n\n    let loginComponent = <Login main={this} setMenuCode={this.setMenuCode}\n      setDetailMode={this.setDetailMode}\n      detailMode={this.state.detailMode}\n      doLogin={this.props.performLogin}\n      loginFailed={this.props.loginFailed}\n      loginAttempt={this.props.loginAttempt}\n      loginStatus={this.props.loginStatus}\n    />;\n\n    let loadingComponent = \"\";\n    if (this.state.loading == true) {\n      loadingComponent = <Message realtime={this.state.realtime} progress={this.state.loadingPercentage} text=\"Please wait...\" type=\"loading\" />;\n    }\n\n    let menus = this.setMenus();\n \n    let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\n    let localHost = \"http://localhost:8080/universal-good-shop/\";\n    const usedHost = localHost;\n    return (\n      <div className=\"App\">\n        {loadingComponent}\n        {header}\n        {/*this.props.loginStatus == true?\"Logged In\":\"Un Logged\"*/}\n      \n        <div id=\"main-layout\">\n          <div id=\"main-menu\">\n            <Menu loggedUser={this.props.loggedUser}\n              division = {this.props.division}\n              handleMenuCLick={this.handleMenuCLick}\n              activeCode={this.state.menuCode}\n              menus={menus} />\n          </div>\n         \n          <div id=\"main-content\" > \n            <Switch>\n              <Route exact path=\"/\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is default page\" />\n              } />\n              <Route exact path=\"/home\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is home page\" />\n              } />\n              \n              <Route exact path=\"/chatroom\" render={\n                (renderProps) =>\n                  <ChatRoom app={this} setMenuCode={this.setMenuCode} />\n              } />\n              <Route exact path=\"/about\" render={\n                (renderProps) =>\n                  <About setMenuCode={this.setMenuCode} />\n              }></Route>\n               \n               <Route exact path=\"/login\" render={\n                (renderProps) => loginComponent\n\n              }></Route>\n\n              {/*\n                     =============================\n                     ======== need login =========\n                     =============================\n                     */}\n              <Route exact path=\"/dashboard\" render={\n                (renderProps) =>\n                  <Dashboard app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n               <Route exact path=\"/management\" render={\n                (renderProps) =>\n                  <Management app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n            </Switch>\n           \n          </div>\n         \n        </div>\n        <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/progress']}\n          onMessage={(msg) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    entities: state.shopState.entities,\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    loginKey: state.userState.loginStatus,\n    loginFailed: state.userState.loginFailed,\n    menus: state.userState.menus,\n    loggedUser: state.userState.loggedUser,\n    loginAttempt: state.userState.loginAttempt,\n    requestId: state.userState.requestId,\n    division: state.userState.division,\n    cart: state.shopState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogin: (username, password, app) => dispatch(actions.performLogin(username, password, app)),\n  performLogout: (app) => dispatch(actions.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus())\n  // getProductCatalog: (page) => dispatch(actions.getProductList(page))\n\n})\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = {\r\n    catalogData: {},\r\n    entities: [],\r\n    entity: {},\r\n    categories: [],\r\n    suppliersData: [], \r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_PRODUCT_LIST:\r\n            return { ...state, catalogData: action.payload };\r\n        case types.FETCH_PRODUCT_DETAIL:\r\n            return { ...state, entity: action.payload.entities[0] };\r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ };\r\n        case types.FETCH_SUPPLIER_LIST:\r\n            return { ...state, suppliersData: action.payload };\r\n        case types.RESET_SUPPLIERS:\r\n            return { ...state, suppliersData: {} };\r\n        case types.LOAD_MORE_SUPPLIER:\r\n            let currentProduct = state.entity;\r\n            let loadedSupplier = action.payload.entities;\r\n            for (let index = 0; index < loadedSupplier.length; index++) {\r\n                currentProduct.suppliers.push(loadedSupplier[index]);\r\n            }\r\n            console.info(\"additinal suppliers: \", currentProduct.suppliers);\r\n            action.referrer.refresh();\r\n            return { ...state, entity: currentProduct };\r\n        case types.FETCH_PRODUCT_CATEGORIES_ALL:\r\n            return { ...state, categories: action.payload.entities };\r\n      \r\n        case types.SEND_MESSAGE:\r\n            return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.UPDATE_CART:\r\n            if (action.payload.app) {\r\n                action.payload.app.refresh();\r\n            }\r\n            return { ...state, cart: action.payload.cart };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nexport const menus = [\r\n  {\r\n    code:\"home\",\r\n    name:\"Home\",\r\n    url:\"home\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"catalog\",\r\n    name:\"Catalog\",\r\n    url:\"catalog\",\r\n    active: false,\r\n     authenticated: false\r\n  } ,\r\n  {\r\n    code:\"about\",\r\n    name:\"About\",\r\n    url:\"about\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"chatroom\",\r\n    name:\"Chat Room\",\r\n    url:\"chatroom\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"login\",\r\n    name:\"Login\",\r\n    url:\"login\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"dashboard\",\r\n    name:\"Dashboard\",\r\n    url:\"dashboard\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"management\",\r\n    name:\"Management\",\r\n    url:\"management\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"logout\",\r\n    name:\"Logout\",\r\n    url:\"#\",\r\n    active: false,\r\n    authenticated: true\r\n  }\r\n];\r\n","import * as types from './types'\r\nimport * as menus from '../utils/HardCodedEntites'\r\nimport * as menuCodes from '../constant/Menus'\r\nimport { initialState } from './reducers';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menus.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    divisions: null,\r\n    division: null,\r\n    requestId: null\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    let updatedMenus = new Array();\r\n    if (action.payload) {\r\n\r\n        let loggedIn = action.payload && action.payload.loginStatus == true;\r\n        for (let index = 0; index < menus.menus.length; index++) {\r\n            const menu = menus.menus[index];\r\n            if (loggedIn && menu.code == menuCodes.LOGIN) { continue; }\r\n\r\n            if (menu.authenticated == false) {\r\n                updatedMenus.push(menu);\r\n            } else {\r\n                if (loggedIn) { updatedMenus.push(menu); }\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case types.DO_LOGIN:\r\n            let result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                localStorage.setItem(\"loginKey\", result.loginKey);\r\n                localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n                result.divisions = action.payload.divisions\r\n            }\r\n\r\n            console.log(\"logged user: \", result.loggedUser);\r\n            return result;\r\n        case types.REQUEST_ID:\r\n            result = { ...state, requestId: action.payload.message };\r\n\r\n            if (!action.payload.loggedIn) {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }else{\r\n                if(action.payload.sessionData){\r\n                    result.division = action.payload.sessionData.Division\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                division:null,\r\n                loggedUser: null\r\n            };\r\n            localStorage.removeItem(\"loginKey\");\r\n            localStorage.removeItem(\"loggedUser\");\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            return result;\r\n        case types.GET_DIVISIONS:\r\n            result = {\r\n                ...state,\r\n                divisions: action.payload.divisions,\r\n            };\r\n            return result;\r\n        case types.SELECT_DIVISION:\r\n            result = {\r\n                ...state,\r\n                division: action.payload.entity,\r\n            };\r\n            return result;\r\n        default:\r\n            if (action.payload && action.payload.loginStatus != null)\r\n                return { ...state, menus: updatedMenus };\r\n            else {\r\n                return { ...state };\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport { nullLiteral } from '@babel/types';\r\n\r\nexport const initState = {\r\n    productFlowStock: null,\r\n    productFlowStocks: null,\r\n    transactionData: null,\r\n    successTransaction: false,\r\n    customersData: null,\r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n\r\n    switch (action.type) { \r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as entityUtil from '../utils/EntityConfigurations'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    events: [],\r\n    addNew: false\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, addNew: false, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, addNew: false, managedEntity: null };\r\n        case types.GET_EVENTS_BY_DATE:\r\n\r\n            if (action.payload.entities)\r\n                return { ...state, events: action.payload.entities };\r\n        case types.ADD_EVENT_FROM_TIMELINE:\r\n\r\n            return { ...state, addNew: true, managedEntity: action.payload.entity, entitiesData: { entityConfig: entityUtil.eventConfig } };\r\n        case types.RESET_MANAGEMENT_PAGE:\r\n\r\n            return initState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\"\r\nimport * as managementReducer from \"./managementReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer,\r\n        managementState: managementReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState,\r\n    managementState: managementReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as actionCreator from './actionCreators';\r\nimport * as types from './types';\r\nimport * as config from '../utils/WebConfig'\r\nimport * as stringUtil from '../utils/StringUtil';\r\n\r\nconst commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\")\r\n    }\r\n};\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware( \r\n            removeEntityMiddleware, \r\n\r\n            //user related\r\n            performLoginMiddleware,\r\n            performLogoutMiddleware,\r\n            refreshLoginStatusMiddleware,\r\n            getDivisionsMiddleware,\r\n\r\n            //transaction   \r\n            selectDivisionMiddleware,\r\n            getEventByDateMiddleware, \r\n            requestAppIdMiddleware,\r\n            \r\n            storeChatMessageLocallyMiddleware,\r\n            getMessagesMiddleware,\r\n            sendChatMessageMiddleware,\r\n\r\n            /*enntity management*/\r\n            getEntityListMiddleware,\r\n            getEntityByIdMiddleware,\r\n            updateEntityMiddleware,\r\n            removeManagedEntityMiddleware,\r\n            addEventFromTimelineMiddleware,\r\n            resetManagementPageMiddleware,\r\n\r\n            getEntitiesWithCallbackMiddleware\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\n\r\n\r\nconst getEntitiesWithCallbackMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_WITH_CALLBACK) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n\r\n            action.meta.callback(data, action.meta.referer);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst updateEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_ENTITY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response updateEntityMiddleware:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error Update Entity!\");\r\n                return;\r\n            }\r\n            alert(\"Update Success!\");\r\n            const callback = action.meta.callback;\r\n            const referer = action.meta.referer;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            callback(referer);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityByIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_BY_ID) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                data.entitie = [];\r\n            }\r\n            data.entityConfig = action.meta.entityConfig;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst sendChatMessageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SEND_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            data.username = action.payload.username;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst addEventFromTimelineMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.ADD_EVENT_FROM_TIMELINE) { return next(action); }\r\n\r\n    let eventEntity = {\r\n        date: stringUtil.dateInputVal(action.payload.day, action.payload.month, action.payload.year)\r\n    };\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entity: eventEntity } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst removeManagedEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_MANAGED_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetManagementPageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_MANAGEMENT_PAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n\r\nconst requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = commonAuthorizedHeader();\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            data = (data);\r\n\r\n\r\n\r\n            console.debug(config.debugMode(), \"requestAppIdMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.error(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\n\r\nconst getEventByDateMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_EVENTS_BY_DATE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            data = (data);\r\n\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst selectDivisionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SELECT_DIVISION) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"selectDivisionMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getDivisionsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_DIVISIONS) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"getDivisionsMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            if (data.divisions == null) {\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n} \r\n\r\n\r\nconst performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => { \r\n            responseJson = (responseJson);\r\n\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            responseJson = (responseJson );\r\n\r\n            let loginKey = \"\";\r\n            let loginSuccess = false;\r\n\r\n            if (responseJson.code != null && responseJson.code == \"00\") {\r\n                for (var pair of response.headers.entries()) {\r\n                    if (pair[0] == \"loginkey\") {\r\n                        loginKey = pair[1];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                loginSuccess = true;\r\n\r\n            }\r\n\r\n            console.log(\"LOGIN SUCCESS: \", loginSuccess);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user,\r\n                    divisions: responseJson.divisions,\r\n                    division: responseJson.sessionData ? responseJson.sessionData.division : null\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    }\r\n\r\n    let loggedUser = null;\r\n    if (localStorage.getItem(\"loggedUser\")) {\r\n        loggedUser = (localStorage.getItem(\"loggedUser\"));\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload: {\r\n            loginStatus: loggedUser ? true : false,\r\n            loginKey: localStorage.getItem(\"loginKey\"),\r\n            loggedUser: loggedUser\r\n        }\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n} \r\n\r\nconst removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}