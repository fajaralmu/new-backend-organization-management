{"version":3,"sources":["components/layout/GridComponent.js","components/buttons/ToggleButton.js","utils/WebConfig.js","components/layout/Header.js","constant/Url.js","components/buttons/Menu.js","constant/Menus.js","components/layout/ContentTitle.js","components/pages/Home.js","utils/StringUtil.js","components/buttons/ActionButtons.js","components/CrudRow.js","components/layout/InstantTable.js","components/pages/About.js","redux/actionCreators.js","redux/types.js","utils/ComponentUtil.js","components/input/InputField.js","components/buttons/ActionButton.js","components/Label.js","components/Message.js","components/pages/Login.js","components/buttons/Tab.js","components/input/ComboBox.js","components/pages/DashboardMain.js","constant/TimelineConstant.js","components/card/Card.js","components/pages/FullCalendar.js","utils/EntityConfigurations.js","components/pages/Timeline.js","components/pages/Dashboard.js","components/layout/Footer.js","components/ChatList.js","components/pages/ChatRoom.js","components/input/DropdownItem.js","components/input/InputDropdown.js","components/input/InputFile.js","components/input/InputFileMultiple.js","components/pages/EntityForm.js","components/pages/EntityList.js","components/pages/Management.js","App.js","redux/shopReducer.js","utils/HardCodedEntites.js","redux/userReducer.js","redux/transactionReducer.js","redux/managementReducer.js","redux/reducers.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["GridComponent","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","items","width","repeat","cols","length","gridAutoColumns","react_default","a","createElement","style","objectSpread","display","verticalAlign","gridTemplateColumns","map","item","Component","ToggleButton","_this","state","active","onClick","e","setState","outerClass","innerClass","fontSize","layout_GridComponent","className","text","debugMode","console","log","localStorage","getItem","Header","handleClick","setItem","app","componentDidMount","title","buttons_ToggleButton","baseImageUrl","config","logoUrl","url","Menu","userLink","divisionInfo","division","name","loggedUser","id","appIcon","src","renderedMenus","icon","menus","handleMenuCLick","activeCode","code","key","Link","to","LOGOUT","ContentTitle","description","Home","document","setMenuCode","layout_ContentTitle","content","index","uniqueId","string","Date","getUTCMilliseconds","beautifyNominal","val","nominal","result","zero","i","isNonNullArrayWithIndex","array","months","ActionButtons","buttonsData","buttonData","status","concat","stringUtil","CrudRow","handleEdit","identifier","handleDelete","values","Array","newValues","value","CS","RS","colspan","rowspan","push","trStyle","borderTop","actionButton","buttons_ActionButtons","disabled","valign","CrudRow_Cells","Cells","rowSpan","colSpan","InstantTable","rows","tableStyle","row","components_CrudRow","About","padding","fontFamily","margin","layout_InstantTable","usedHost","apiBaseUrl","apiEntityBaseUrl","apiAccount","apiAdmin","getEntityList","request","startLoading","type","payload","entity","entityName","filter","limit","page","fieldsFilter","orderBy","orderType","meta","entityConfig","_byId","getElementById","createNavButtons","totalButton","currentPage","Math","ceil","min","max","InputField","handleKeyup","onKeyUp","target","onChange","placeholder","inputField","checked","ActionButton","Label","Message","timer","intervalId","update","clearInterval","endMessage","withTimer","setInterval","messageText","msgStyle","realtime","floor","progress","textAlign","Login","username","password","showMessageLoginFailed","handleUsername","handlePassword","doLogin","main","validateLoginStatus","loginStatus","history","message","loginFailed","components_Message","components_Label","input_InputField","buttons_ActionButton","withRouter","Tab","tabsData","autoColumns","gap","borderBottom","tabData","React","ComboBox","handleOnChange","options","defaultValue","option","DashboardMain","onDivisionListChange","divisionId","selectDivision","divionOptions","divisions","forEach","input_ComboBox","month","day","Card","titleStyle","height","backgroundRepeat","backgroundColor","backgroundImage","backgroundSize","FullCalendar","selectedMonth","getMonth","inputYearValue","getFullYear","activeId","selectedDay","calendarData","days","month_now","begin","week","dayCount","info","begin_old","year_now","input_month","date_info","running_month","running_year","filterDayId","filterMonthId","dateFormId","entity_Name","entity_Prop","setSelectedMonth","refresh","changeInputYear","createTable","r","getEventByDate","year","getEventDetail","updateFields","focus","loadCalendar","dateID","filterStr","fillDay","setCalendar","updated","doSetCalendar","diff_year","abs","monthCount","less","current_month","endMonth","begin_month","b","prevMonth","m","nextMonth","fillInfo","timeLineConstant","detail","doPrevMonth","prev","begin_prev","findBegin","switch_","doNextMonth","next","begin_old_","totalday","M","begin_prev_","D","val2","data","getDate","getYear","now","strDate","dateAcceptableForHtmlInput","addZero","Val","Min","N","String","MinStr","ValLength","Diff","clear","begin_new","week_","day_","isNow","d","setElementByAttr","_this2","selectedYear","totalCalendarData","element","minHeight","marginBottom","events","eventList","event","card_Card","divisionConfig","fieldNames","lableName","formData","inputType","reffEntity","idField","displayField","sectionConfig","programConfig","eventConfig","positionConfig","memberConfig","Timeline","detailView","detailEvents","date","addEvent","getEntities","addEventFromTimeline","y","participant","location","done","eventCard","pages_FullCalendar","connect","managementState","userState","dispatch","actions","Dashboard","getButtonsData","menu","getDivisons","pages_DashboardMain","pages_Timeline","buttons_Tab","Footer","version","ChatItem","admin","sender","senderComponent","marginLeft","float","color","ChatRoom","messages","sendChatMessage","alert","handleMessage","response","storeChatMessageLocally","entities","changeUsername","getMessages","userAlias","shopState","DropdownItem","hover","onHover","unHover","onMouseLeave","onMouseOver","InputDropdown","hoverIndex","onBlur","onSelect","dataValue","dropdownList","dropdownComponent","input_DropdownItem","onFocus","InputFile","base64Data","file","referer","callback","reader","FileReader","readAsDataURL","files","onload","onerror","error","componentUtil","assertThisInitialized","removeImage","displayImage","trim","accept","InputFileMultiple","handleAddMoreFile","addMoreImage","inputFields","inputFilesData","inputFileData","input_InputFile","base64","includes","inputId","EntityForm","managedEntity","formValues","dropdownValues","selectedEntities","base64DataMultiple","validateEntity","formDataItem","getFormDataItemStartWith","arrayOfValues","split","resultValue","updatedValue","join","handleSubmit","addFromOtherPage","addNew","updateEntity","focusActiveId","propName","updateSelectedEntity","removeManagedEntity","populateDropdown","entityname","fieldname","fieldvalue","fieldName","fieldValue","getEntitiesWithCallback","onKeyUpDynamicDropdown","populateDropdownValues","currentDropdownValue","getFormDataItem","getSelectedDropdownItem","formDataList","currentValue","handleRemoveImage","handleChangeBase64Image","handleChangeBase64MultipleImage","propNameRaw","removeElementAtPosition","handleRemoveMultipleImage","newArrayValue","selectFromDynamicDropdown","currentDropdownList","selectedOption","displayPropName","handleStaticDropdownChange","entityExist","actionButtons","formFields","parentPropName","valueAsObject","objectPropName","inputComponent","input_InputDropdown","valueSplit","imagesData","_loop","valueSplitItem","input_InputFileMultiple","requested","EntityList","window","confirm","getEntityById","getHeaderNames","headers","headerName","toUpperCase","goToPage","orderObject","entitiesData","totalData","getEntityInPage","setOrderBy","createFilterInputs","inputs","input","handleFilterChange","valueDay","valueMonth","valueYear","inputDay","inputMonth","inputYear","orderButton","fontWeight","rowValues","_loop2","j","fieldItem","entityProp","object","entityValue","href","alt","imgName","dateStr","toDateString","opt","fixButtonData","_loop3","navButtons","paddingTop","entityTable","pages_EntityForm","Management","entityList","loadEntityManagement","checkIfCurrentMenuName","flag","newRecord","isNewRecord","ref","callbackHandleUpdate","pages_EntityList","action","exacts","contains","App","detailMode","menuCode","loading","loadingPercentage","requestId","enableShopping","mainAppUpdated","setDetailMode","setEnableShopping","performLogout","requestAppId","endLoading","msg","percentage","refreshLogin","additionalMenus","authenticated","header","layout_Header","loginComponent","pages_Login","performLogin","loginAttempt","loadingComponent","setMenus","buttons_Menu","Switch","Route","exact","path","render","renderProps","pages_Home","pages_ChatRoom","pages_About","pages_Dashboard","pages_Management","client_default","topics","onMessage","client","clientRef","layout_Footer","loginKey","cart","user","initState","catalogData","categories","suppliersData","getTime","reducer","arguments","undefined","currentProduct","loadedSupplier","suppliers","referrer","updatedMenus","loggedIn","JSON","stringify","sessionData","Division","removeItem","productFlowStock","productFlowStocks","transactionData","successTransaction","customersData","productsData","cashflowInfoOut","cashflowInfoIn","cashflowDetail","productSalesData","productSalesDetails","transactionYears","entityUtil","rootReducer","combineReducers","shopReducer","userReducer","transactionState","transactionReducer","managementReducer","initialState","commonAuthorizedHeader","Content-Type","getEntitiesWithCallbackMiddleware","store","fetch","method","body","then","json","newAction","assign","catch","err","finally","param","updateEntityMiddleware","debug","getEntityByIdMiddleware","getEntityListMiddleware","entitie","getMessagesMiddleware","sendChatMessageMiddleware","addEventFromTimelineMiddleware","dd","mm","yyyy","eventEntity","updateCartMiddleware","storeChatMessageLocallyMiddleware","removeManagedEntityMiddleware","requestAppIdMiddleware","getProductStocksMiddleware","loadMore","getProductSalesDetailMiddleware","getEventByDateMiddleware","selectDivisionMiddleware","getDivisionsMiddleware","resetProductStocksMiddleware","resetCustomersMiddleware","resetProductsMiddleware","resetSuppliersMiddleware","resetPurchaseTransactionMiddleware","getSupplierListMiddleware","performLogoutMiddleware","Promise","all","_ref","_ref2","slicedToArray","responseJson","logoutSuccess","performLoginMiddleware","_ref3","_ref4","loginSuccess","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","pair","return","refreshLoginStatusMiddleware","getAllProductCategoriesMiddleware","loadMoreSupplierMiddleware","parap","removeEntityMiddleware","getProductDetailMiddleWare","getProductListMiddleware","configureStore","createStore","applyMiddleware","Root","es","HashRouter","src_App_0","Boolean","hostname","match","ReactDOM","src_Root","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eec9474c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass GridComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let items = [];\r\n        if (this.props.items) {\r\n            items = this.props.items;\r\n        }\r\n        const width = this.props.width?this.props.width : \"auto \";\r\n        const repeat = this.props.cols ? this.props.cols : items.length;\r\n        const gridAutoColumns = width.repeat(repeat);\r\n\r\n       \r\n        return (\r\n            <div style={{ ...this.props.style, display: 'grid',   verticalAlign: 'middle', gridTemplateColumns: gridAutoColumns }} >\r\n                {items.map(item => {\r\n                    return item;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GridComponent;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Button.css'\r\nimport GridComponent from '../layout/GridComponent';\r\n\r\nclass ToggleButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active:false\r\n        }\r\n\r\n        this.onClick = (e) => {\r\n            this.setState({active:!this.state.active})\r\n            if(this.props.onClick){\r\n                this.props.onClick(e);\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let outerClass = \"toggle-outer\";\r\n        let innerClass = \"toggle-inner\";\r\n\r\n        if(!this.props.active || this.props.active==false){\r\n            outerClass+=\" outer-inactive\";\r\n            innerClass+=\" inner-inactive\";\r\n        }\r\n\r\n        return (\r\n            <div style={{fontSize:'13px'}}>\r\n                <GridComponent items={[\r\n                    <div onClick={this.onClick} className={outerClass}>\r\n                        <div  className={innerClass} > \r\n                         \r\n                            </div>\r\n                    </div>,\r\n                    <span>{this.props.text}</span>\r\n                ]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleButton;","export const debugMode = () => {\r\n    console.log(\"localStorage.getItem(\\\"debugMode\\\")\",localStorage.getItem(\"debugMode\"));\r\n    return localStorage.getItem(\"debugMode\") && localStorage.getItem(\"debugMode\") == \"true\";\r\n}","import React, { Component } from 'react';\r\nimport '../../css/Header.css'\r\nimport ToggleButton from '../buttons/ToggleButton';\r\nimport * as config from '../../utils/WebConfig'\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            debugMode:true\r\n        }\r\n        this.handleClick = (e) => {\r\n            this.setState({ debugMode: !this.state.debugMode })\r\n            if (this.state.debugMode == true) {\r\n                localStorage.setItem(\"debugMode\", \"true\");\r\n            } else {\r\n                localStorage.setItem(\"debugMode\", \"false\");\r\n            }\r\n            console.log(\"ccc localStorage.setItem(\\\"debugMode\\\")\", localStorage.getItem(\"debugMode\"));\r\n            this.props.app.componentDidMount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const debugMode =  localStorage.getItem(\"debugMode\");\r\n\r\n        return (\r\n            <div className=\"App-header\">\r\n                {this.props.title}\r\n                <ToggleButton active={this.state.debugMode == true} onClick={this.handleClick} text={\"Debug Mode: \"+debugMode} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import * as config from '../utils/WebConfig'\r\n\r\nexport const hostLocal =\"http://localhost:8080\";\r\nexport const hostCloud = \"\";\r\nexport const baseImageUrl = config.debugMode()==true?hostLocal:hostCloud;\r\n ","import React, { Component } from 'react'\r\nimport '../../css/Menu.css'\r\nimport '../../css/Common.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\r\nimport * as url from '../../constant/Url'\r\nconst logoUrl = url.baseImageUrl+\"/organization-management/res/img/transparent.png\";\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n        let userLink = \"\";\r\n        let divisionInfo = null;\r\n        if (this.props.division) {\r\n            divisionInfo = <div className=\"fill\" >{this.props.division.name} </div>;\r\n        }\r\n\r\n        if (this.props.loggedUser != null) {\r\n            userLink = <li id=\"user-link\">\r\n                <div className=\"fill\" >{\"Welcome, \" + this.props.loggedUser.name} </div>\r\n                {divisionInfo}\r\n            </li>\r\n        }\r\n\r\n        let appIcon = <li><img src={logoUrl} style={{ width: '90%' }} /></li>;\r\n\r\n        let renderedMenus = [{\r\n            icon: true,\r\n            url: logoUrl\r\n        }];\r\n\r\n\r\n        if (this.props.menus != null) {\r\n            renderedMenus = this.props.menus;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"side-menu\" >\r\n                < ul className=\"menu-ul \" >\r\n                    {appIcon}\r\n                    {userLink}\r\n                    {\r\n                        renderedMenus.map(\r\n                            e => {\r\n                                if (e.url == \"#\") {\r\n                                    return (<li onClick={() => this.props.handleMenuCLick(e)} className={this.props.activeCode == e.code ? \"active\" : \"\"} key={e.name}\r\n                                        id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                            to=\"#\" ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                    )\r\n                                }\r\n                                return (<li className={this.props.activeCode == e.code ? \"menu-active\" : \"\"} key={e.name}\r\n                                    id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                        to={e.url} ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                )\r\n                            }\r\n                        )\r\n                    } </ul>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","export const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const SUPPLIERLIST = \"supplierlist\";","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Content.css'\r\n\r\nclass ContentTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let title = this.props.title ? this.props.title : \"\";\r\n        let description = this.props.description ? this.props.description : \"\";\r\n        return (\r\n            <div className=\"content-title\">\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentTitle;","import React, { Component } from 'react'\r\nimport '../../css/Home.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nimport * as url from '../../constant/Url'\r\nconst logoUrl = url.baseImageUrl + \"/organization-management/res/img/mpi.png\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Mahasiswa Pencinta Islam\";\r\n        this.props.setMenuCode(menus.HOME);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"Welcome!\" description=\r\n                    {this.props.content} />\r\n                <div className=\"article-content\">\r\n                    <h2 >Admin Console Mahasiswa Pencinta Islam</h2>\r\n                    <img src={logoUrl} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tlet nominal = \"\" + val;\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"...\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\n\r\nexport const dateInputVal = function (dd, mm, yyyy) {\r\n \r\n\tlet month = +mm < 10 ? \"0\" + mm : mm;\r\n\tlet day = +dd < 10 ? \"0\" + dd : dd;\r\n\r\n\treturn yyyy + \"-\" + month + \"-\" + day;\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport '../../css/Button.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ActionButtons extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let className = \"action-button-wrapper\";\r\n        if(this.props.className){\r\n            className += \" \"+this.props.className;\r\n        }\r\n        return (\r\n            <div style={this.props.style ? this.props.style : {}} className={className}  >\r\n                {this.props.buttonsData.map(buttonData => {\r\n                    let className = \"action-button rounded\";\r\n                    if (buttonData.status != null) {\r\n                        className =\r\n                            className.concat(\" \").concat(buttonData.status).concat(\" \").concat(buttonData.className);\r\n                    }\r\n                    return (\r\n                        <button style={{...buttonData.style}} className={className} key={\"btnKey-\" + stringUtil.uniqueId()} onClick={buttonData.onClick}>{buttonData.text}</button>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ActionButtons;","import React, { Component } from 'react'\r\nimport ActionButtons from './buttons/ActionButtons';\r\nimport * as stringUtil from '../utils/StringUtil'\r\n\r\nclass CrudRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleEdit = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleEdit(this.props.identifier);\r\n            }\r\n        }\r\n        this.handleDelete = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleDelete(this.props.identifier);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let values = this.props.values;\r\n        const defaultRowColSpan = 1;\r\n        if (null == values) {\r\n            values = new Array();\r\n        } else {\r\n            let newValues = new Array();\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (this.props.CS || this.props.RS) {\r\n                    let colspan = stringUtil.isNonNullArrayWithIndex(this.props.CS, i) ?\r\n                        this.props.CS[i] : defaultRowColSpan;\r\n                    let rowspan = stringUtil.isNonNullArrayWithIndex(this.props.RS, i) ?\r\n                        this.props.RS[i] : defaultRowColSpan;\r\n                    newValues.push({ value: value, colspan: colspan, rowspan: rowspan });\r\n                } else\r\n                    newValues.push({ value: value });\r\n            }\r\n            values = newValues;\r\n        }\r\n\r\n        let trStyle = this.props.style ? this.props.style : {\r\n            borderTop: 'solid 1px gray',\r\n        };\r\n        let actionButton = <td style={trStyle}>\r\n            <ActionButtons buttonsData={[\r\n                {\r\n                    id: \"k-btn-edit-\" + this.props.identifier,\r\n                    status: 'warning',\r\n                    onClick: this.handleEdit,\r\n                    text: \"Edit\"\r\n                },\r\n                {\r\n                    id: \"k-btn-dlt-\" + this.props.identifier,\r\n                    status: 'danger',\r\n                    onClick: this.handleDelete,\r\n                    text: \"Delete\"\r\n                }\r\n            ]} />\r\n        </td>;\r\n\r\n        if (this.props.disabled == true) {\r\n            actionButton = null;\r\n            trStyle = this.props.style ? this.props.style : {};\r\n        }\r\n      \r\n        return (\r\n            <tr style={trStyle} key={stringUtil.uniqueId()}\r\n                valign={this.props.valign}>\r\n                <Cells values={values} trStyle={trStyle} />\r\n                {actionButton}</tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst Cells = (props) => {\r\n\r\n    return props.values.map(value => {\r\n        return (\r\n            <td key={\"td-key-\" + stringUtil.uniqueId()} id={\"td-\" + stringUtil.uniqueId()} style={props.trStyle} rowSpan={value.rowspan} colSpan={value.colspan}>\r\n                {value.value}\r\n            </td>\r\n        )\r\n    });\r\n}\r\n\r\nexport default CrudRow;","import React, { Component } from 'react'\r\nimport CrudRow from '../CrudRow';\r\nimport '../../css/Common.css'\r\nimport '../../css/InstantTable.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass InstantTable extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let rows = [];\r\n        if (this.props.rows) { rows = this.props.rows; }\r\n        let className = \"table\";\r\n        let tableStyle = this.props.style ? this.props.style : {};\r\n        if (this.props.className) {\r\n            className += \" \" + this.props.className;\r\n        }\r\n        return (\r\n            <table style={tableStyle} className={className}><tbody>\r\n                {rows.map(row => {\r\n                    let disabled = row.disabled == false? false:true;\r\n                  \r\n                    \r\n                    return (\r\n                        <CrudRow\r\n                            style={row.style}\r\n                            valign={this.props.valign ? this.props.valign : \"top\"}\r\n                            RS={row.RS}\r\n                            identifier={row.identifier ? row.identifier : \"0000\"}\r\n                            handleEdit={row.handleEdit}\r\n                            handleDelete={row.handleDelete}\r\n                            CS={row.CS}\r\n                            values={row.values ? row.values : []}\r\n                            key={stringUtil.uniqueId()}\r\n                            disabled={disabled}\r\n                        />\r\n                    )\r\n                })}\r\n            </tbody></table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstantTable;","import React, { Component } from 'react'\r\nimport '../../css/About.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport * as url from '../../constant/Url'\r\nimport '../../css/Common.css'\r\nimport ContentTitle from '../layout/ContentTitle' \r\n\r\nconst logoUrl = url.baseImageUrl + \"/organization-management/res/img/asp.png\";\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n        this.props.setMenuCode(menus.ABOUT);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container about-section  \" >\r\n                <ContentTitle title=\"About Us\" />\r\n                <div className=\" abount-content\" style={{\r\n                    padding: '5px',\r\n                    width: '90%',\r\n                    fontFamily: 'Consolas', margin: '5px'\r\n                }}>\r\n                    <InstantTable\r\n                        rows={[\r\n                            { values: [\"Name\", \"Organization Management Admin\"] },\r\n                            { values: [\"Version\", \"1.0.0\"] },\r\n                            { values: [\"Description\", \"managing your organization activities effectively\"] },\r\n\r\n\r\n                        ]} />\r\n                    <h2>Powered By</h2>\r\n                    <img style={{ width: '50%' }} src={logoUrl} />\r\n                </div></div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import * as types from './types'\r\nimport * as config from '../utils/WebConfig'\r\n\r\nconst hostCloud = \"/organization-management/api/\";\r\nconst hostLocal = \"http://localhost:8080/organization-management/api/\";\r\nconst usedHost = () => {\r\n    if (config.debugMode() == true)\r\n        return hostLocal;\r\n    else\r\n        return hostCloud;\r\n} \r\nconst apiBaseUrl  = () => usedHost() + \"public/\";\r\nconst apiEntityBaseUrl  = () => usedHost() + \"management/\"\r\nconst apiAccount = () => usedHost() + \"account/\"\r\nconst apiAdmin = () => usedHost() + \"admin/\"\r\nconst apiTransaction = usedHost() + \"api/transaction/\";\r\n\r\nexport const addEventFromTimeline = (day,month,year) => {\r\n    return { type: types.ADD_EVENT_FROM_TIMELINE, payload: {\r\n        day:day,\r\n        month:month,\r\n        year:year\r\n    }, meta: { type: types.ADD_EVENT_FROM_TIMELINE } };\r\n}\r\n\r\n\r\nexport const resetProductStocks = () => {\r\n    return { type: types.RESET_PRODUCT_STOCKS, payload: {}, meta: { type: types.RESET_PRODUCT_STOCKS } };\r\n}\r\n\r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n}\r\nexport const resetSuppliers = () => {\r\n    return { type: types.RESET_SUPPLIERS, payload: {}, meta: { type: types.RESET_SUPPLIERS } };\r\n}\r\nexport const resetCustomers = () => {\r\n    return { type: types.RESET_CUSTOMERS, payload: {}, meta: { type: types.RESET_CUSTOMERS } };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl().concat(\"add\") : apiEntityBaseUrl().concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getProductStocks = (name, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_STOCKS,\r\n        payload: { product: { name: name } },\r\n        meta: {\r\n            app: app, type: types.GET_PRODUCT_STOCKS,\r\n            url: apiTransaction().concat(\"stocks\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl().concat(\"generateappid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin().concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const sendChatMessage = (message, username, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SEND_MESSAGE,\r\n        payload: {\r\n            value: message,\r\n            username: username\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.SEND_MESSAGE,\r\n            url: apiAdmin().concat(\"sendmessage\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSalesDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES_DETAIL,\r\n        payload: {\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_PRODUCT_SALES_DETAIL,\r\n            loadMore: request.loadMore == true, url: apiTransaction().concat(\"productsalesdetail/\" + request.productId)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getEventByDate = (month, year, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_EVENTS_BY_DATE,\r\n        payload: { year: year, month: month },\r\n        meta: {\r\n            app: app, type: types.GET_EVENTS_BY_DATE,\r\n            url: apiAdmin().concat(\"event\")\r\n        }\r\n    };\r\n}\r\nexport const selectDivision = (id, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SELECT_DIVISION,\r\n        payload: { divisionId: id },\r\n        meta: {\r\n            app: app, type: types.SELECT_DIVISION, url: apiAccount().concat(\"setdivision\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductListTrx = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_PRODUCT_LIST_TRX,\r\n        payload: {\r\n            entity: \"product\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST, url: apiEntityBaseUrl().concat(\"get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCustomerList = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_CUSTOMER_LIST,\r\n        payload: {\r\n            entity: \"customer\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_CUSTOMER_LIST, url: apiEntityBaseUrl().concat(\"get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetPurchaseTransaction = () => ({\r\n    type: types.RESET_TRX_PURCHASE,\r\n    payload: {},\r\n    meta: { type: types.RESET_TRX_PURCHASE }\r\n})\r\nexport const submitPurchaseTransaction = (request, app) => {\r\n    app.startLoading(true);\r\n    console.log(\"Submit Supply Purchase...\")\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_PURCHASE,\r\n        payload: {\r\n            customer: request.customer,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_PURCHASE, url: apiTransaction().concat(\"purchase\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const submitSupplyTrx = (request, app) => {\r\n    console.log(\"Submit Supply Trx...\")\r\n    app.startLoading(true);\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_SUPPLY,\r\n        payload: {\r\n            supplier: request.supplier,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_SUPPLY, url: apiTransaction().concat(\"supply\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getStockInfo = (stockId, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_STOCK_INFO,\r\n        payload: { productFlow: { id: stockId } },\r\n        meta: {\r\n            app: app, type: types.GET_STOCK_INFO, url: apiTransaction().concat(\"stockinfo\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount().concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n///ok\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {\r\n            user: { username: username, password: password }\r\n        },\r\n        meta: { type: types.DO_LOGIN, url: apiAccount().concat(\"login\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\n//ok\r\nexport const getDivisons = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.GET_DIVISIONS,\r\n        payload: {\r\n\r\n        },\r\n        meta: { type: types.GET_DIVISIONS, url: apiAccount().concat(\"divisions\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getAllProductCategories = () => ({\r\n    type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n    payload: {\r\n        entity: \"category\",\r\n        filter: {\r\n            limit: 0,\r\n            page: 0,\r\n            orderBy: null,\r\n            orderType: null,\r\n            fieldsFilter: {}\r\n        }\r\n    },\r\n    meta: {\r\n        type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n        url: apiEntityBaseUrl().concat(\"get\")\r\n    }\r\n})\r\n\r\nexport const getSupplierList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.FETCH_SUPPLIER_LIST,\r\n        payload: {\r\n            entity: \"supplier\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_SUPPLIER_LIST,\r\n            url: apiBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\nexport const getProductList = (request, app) => {\r\n    app.startLoading(request.withStock == true);\r\n    let requested = {\r\n        type: types.FETCH_PRODUCT_LIST,\r\n        payload: {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name,\r\n                    withStock: request.withStock\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST,\r\n            url: apiBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getProductDetail = (code, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.FETCH_PRODUCT_DETAIL,\r\n        payload: {\r\n\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                exacts: true,\r\n                contains: false,\r\n                fieldsFilter: {\r\n                    code: code,\r\n                    withStock: true,\r\n                    withSupplier: true\r\n                }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_DETAIL,\r\n            url: apiBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const loadMoreSupplier = (page, productId, referrer) => {\r\n    referrer.props.app.startLoading();\r\n    return {\r\n        type: types.LOAD_MORE_SUPPLIER,\r\n        payload: { filter: { page: page, fieldsFilter: { \"productId\": productId } } },\r\n        meta: {\r\n            type: types.LOAD_MORE_SUPPLIER,\r\n            url: apiBaseUrl().concat(\"moresupplier\"),\r\n            referrer: referrer\r\n        }\r\n    }\r\n}\r\n\r\n","export const FETCH_PRODUCT_LIST = \"fetch_product_list\";\r\nexport const FETCH_PRODUCT_DETAIL= \"fetch_product_detail\";\r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\";\r\nexport const FETCH_SUPPLIER_LIST = \"fetch_supplier_list\";\r\nexport const LOAD_MORE_SUPPLIER = \"load_more_supplier\";\r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";\r\nexport const GET_STOCK_INFO = \"get_stock_info\";\r\nexport const SUBMIT_TRX_PURCHASE = \"submit_purchase\";\r\nexport const SUBMIT_TRX_SUPPLY = \"submit_supply\";\r\nexport const RESET_TRX_PURCHASE = \"reset_purchase\";\r\nexport const FETCH_CUSTOMER_LIST = \"fetch_cust_list\";\r\nexport const FETCH_PRODUCT_LIST_TRX = \"fetch_product_list\";\r\nexport const GET_DIVISIONS = \"GET_DIVISIONS\";\r\nexport const SELECT_DIVISION = \"SET_DIVISION\";\r\nexport const GET_EVENTS_BY_DATE = \"GET_EVENTS_BY_DATE\";\r\n\r\nexport const RESET_SUPPLIERS = \"reset_suppliers\";\r\nexport const RESET_PRODUCTS = \"reset_products\";\r\nexport const RESET_PRODUCT_STOCKS = \"RESET_PRODUCT_STOCKS\";\r\nexport const RESET_CUSTOMERS = \"RESET_CUSTOMERS\";\r\nexport const GET_PRODUCT_STOCKS = \"get_product_stocks\";\r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\";\r\nexport const SEND_MESSAGE = \"send_message\";\r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\n\r\nexport const ADD_EVENT_FROM_TIMELINE = \"add_event_from_timeline\";","export const _byId = (id) => { return document.getElementById(id) }\r\n\r\nexport const clearFields = (...ignore) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n    let withIgnore = ignore != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore)\r\n            for (let y = 0; y < ignore.length; y++)\r\n                if (inputs[i].id == ignore[y]) continue loop;\r\n\r\n        if (inputs[i].type == \"text\") inputs[i].value = \"\";\r\n        if (inputs[i].type == \"number\") inputs[i].value = 0;\r\n    }\r\n}\r\n\r\nexport function toBase64(file, referer, callback){\r\n\tconst reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n    \talert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (_byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array(); \r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton  ? totalButton  : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton  ) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton -1 \r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\n\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyup = (e) => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(e.target.value, this.props.id);\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            if (this.props.type == \"date\") {\r\n                this.handleKeyup(e);\r\n            }\r\n            if (this.props.id && this.props.type == \"checkbox\") {\r\n                this.props.onChange(this.props.id);\r\n            }\r\n            if (this.props.onChange && this.props.id) {\r\n                this.props.onChange();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let type = this.props.type ? this.props.type : \"text\";\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let name = this.props.name ? this.props.name : \"\";\r\n        let style = this.props.style ? this.props.style : {};\r\n\r\n        let inputField = <input style={style}\r\n            className=\"rounded\"\r\n            name={name}\r\n            key={\"KEY-input-\" + this.props.id}\r\n            id={this.props.id}\r\n            type={type}\r\n            onKeyUp={this.handleKeyup}\r\n            placeholder={placeholder}\r\n            checked={this.props.checked}\r\n            onChange={this.onChange}\r\n           \r\n        />;\r\n\r\n        if (this.props.disabled == true) {\r\n            inputField = <input style={style}\r\n                className=\"rounded\"\r\n                onChange={this.onChange}\r\n                name={name} key={\"KEY-input-\" + this.props.id}\r\n                checked={this.props.checked}\r\n                id={this.props.id}\r\n                type={type} onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n               \r\n                disabled />\r\n        }\r\n\r\n        if (type == \"textarea\") {\r\n            inputField = <textarea style={style}\r\n                className=\"rounded\"\r\n                name={name}\r\n                key={\"KEY-input-\" + this.props.id}\r\n                id={this.props.id}\r\n                type={type}\r\n                onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n                onChange={this.onChange}\r\n                checked={this.props.checked} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field \">\r\n                {inputField}\r\n                {this.props.type == \"radio\" || this.props.type == \"checkbox\" ? <span style={{ fontSize: '0.9em' }}>\r\n\r\n                    {this.props.text} </span> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\n\r\nclass ActionButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = () => {\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"action-button rounded\";\r\n        if(this.props.status!= null ){\r\n            className=className.concat(\" \").concat(this.props.status);\r\n        }\r\n        return (\r\n            <div >\r\n                <button style={{...this.props.style}} className={className} id={this.props.id} onClick={this.onClick}>{this.props.text}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ActionButton;","import React, {Component} from 'react'\r\nimport '../css/Input.css'\r\n\r\nclass Label extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onClick = () =>{\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let style = this.props.style?this.props.style:{};\r\n        let className = \"input-field \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n        if(this.props.onClick){\r\n            className+=\" clickable\";\r\n        }\r\n        return(\r\n            <div onClick={this.onClick} style={style} className={className}>\r\n                <label>{this.props.text}</label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react'\r\nimport '../css/Common.css'\r\nimport '../css/Message.css'\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {\r\n            let progress = Math.floor( this.props.progress);\r\n            msgStyle = {\r\n                width:progress + \"%\",\r\n                textAlign: 'left'\r\n            };\r\n            className+=\" rounded\";\r\n            messageText =  <span className=\"loader\">{this.props.progress + \"%\"}</span>          \r\n        }\r\n        return (\r\n            <div style={msgStyle} className={className} >{messageText}</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Message;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Login.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport Label from '../Label';\r\nimport Message from '../Message'\r\nimport { withRouter } from 'react-router';\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            showMessageLoginFailed: false\r\n        }\r\n\r\n\r\n\r\n        this.handleUsername = (value) => {\r\n            this.setState({ username: value });\r\n        }\r\n        this.handlePassword = (value) => {\r\n            this.setState({ password: value });\r\n        }\r\n\r\n        this.doLogin = () => {\r\n\r\n            console.log(\"u:\", this.state.username, \",p:\", this.state.password);\r\n            this.props.doLogin(document.getElementById(\"username-field\").value,\r\n                document.getElementById(\"password-field\").value, this.props.main);\r\n        }\r\n\r\n        this.endMessage = () => {\r\n            this.setState({ showMessageLoginFailed: false })\r\n        }\r\n\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.props.setMenuCode(menus.LOGIN);\r\n        document.title = \"Login\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        // if(this.props.loginAttempt == false && this.state.showMessageLoginFailed == false){\r\n        //     this.setState({showMessageLoginFailed:true})\r\n        // }\r\n    }\r\n\r\n    render() {\r\n\r\n        let message = <p>\r\n            {this.props.loginFailed ? <Message endMessage={this.endMessage} type=\"failed\" text=\"Login Failed\" /> : \"\"}\r\n        </p>\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                < ContentTitle title=\"Login Page\" />\r\n                {message}\r\n                <div className=\"login-container\">\r\n                    <Label text=\"Username\" />\r\n                    <InputField id=\"username-field\" onKeyUp={this.handleUsername} />\r\n                    <Label text=\"Password\" />\r\n                    <InputField id=\"password-field\" type=\"password\" onKeyUp={this.handlePassword} />\r\n                    <ActionButton style={{margin:'5px'}} id=\"btn-login\" status=\"submit\" onClick={this.doLogin} text=\"Login\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport '../../css/Tab.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Tab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let tabsData = this.props.tabsData ? this.props.tabsData : [];\r\n\r\n        let autoColumns = \"5% \"+(\"max-content \".repeat(tabsData.length ))+\" auto\";\r\n        return (\r\n            <div className=\"tab-container\" style={{\r\n                ...this.props.style,\r\n                width:'auto',\r\n                gap:'0px',\r\n                display: 'grid',\r\n                gridTemplateColumns: autoColumns\r\n            }} >\r\n                 <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n                {tabsData.map(tabData => {\r\n                    return <div key={stringUtil.uniqueId()} className={tabData.active ? \"tab-element tab-item-active rounded-top\" : \"tab-element tab-item\"} onClick={tabData.onClick ? tabData.onClick : () => { }}>\r\n                        {tabData.text}\r\n                    </div>\r\n                })}\r\n                <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ComboBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = (e) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(e.target.value); \r\n            }\r\n            else {\r\n                console.log(\"Not supported\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let options = [];\r\n        if (this.props.options) {\r\n            options = this.props.options;\r\n        } \r\n        return (\r\n            <div className=\"input-field \">\r\n                <select value={this.props.defaultValue ? this.props.defaultValue : \"\"} className=\"rounded\" id={this.props.id}\r\n                    onChange={this.handleOnChange} >\r\n                    {options.map(\r\n                        option => {\r\n                            return <option key={\"opt_\" + stringUtil.uniqueId()} value={option.value} >{option.text}</option>\r\n                        }\r\n                    )}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComboBox;","import  React  from 'react'\r\nimport '../../css/Common.css'\r\nimport ComboBox from '../input/ComboBox';\r\n\r\nclass DashboardMain extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            divisionId:null\r\n        }\r\n    }\r\n\r\n    onDivisionListChange = (value) => {\r\n        this.setState({divisionId:value});\r\n        this.props.selectDivision(value);\r\n    }\r\n    \r\n    divionOptions = () => {\r\n        let options = [];\r\n        let divisions = this.props.divisions? this.props.divisions : [];\r\n\r\n        divisions.forEach(division => {\r\n            options.push({\r\n                value: division.id,\r\n                text: division.name\r\n            })\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render(){\r\n \r\n        const division = this.props.division;\r\n        let divisionId = this.state.divisionId;\r\n        if(this.props.division){\r\n            divisionId = this.props.division.id;\r\n        }\r\n\r\n        return(\r\n            <div >\r\n                <p>Login Sebagai</p>\r\n                <ComboBox defaultValue={divisionId} onChange={this.onDivisionListChange} options={this.divionOptions()} />\r\n\r\n                <p>Current Selection:</p>\r\n                <p>{division?division.name:\"\"}</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default DashboardMain;","export  const month = [\r\n    { name: \"Januari\", day: 31, text:\"Januari\",value:\"1\" },\r\n    { name: \"Februari\", day: 28, text:\"Februari\",value:\"2\" },\r\n    { name: \"Maret\", day: 31, text:\"Maret\",value:\"3\" },\r\n    { name: \"April\", day: 30, text:\"April\",value:\"4\" },\r\n    { name: \"Mei\", day: 31 , text:\"Mei\",value:\"5\"},\r\n    { name: \"Juni\", day: 30, text:\"Juni\",value:\"6\" },\r\n    { name: \"Juli\", day: 31 , text:\"Juli\",value:\"7\"},\r\n    { name: \"Agustus\", day: 31 , text:\"Agustus\",value:\"8\"},\r\n    { name: \"September\", day: 30 , text:\"September\",value:\"9\"},\r\n    { name: \"Oktober\", day: 31 , text:\"Oktober\",value:\"10\"},\r\n    { name: \"November\", day: 30 , text:\"November\",value:\"11\"},\r\n    { name: \"Desember\", day: 31 , text:\"Desember\",value:\"12\"},\r\n];","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Card.css'\r\n\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let titleStyle = {height:'auto'}\r\n        if (this.props.icon) {\r\n            titleStyle = {\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundColor: 'white',\r\n                backgroundImage: \"url(\" + this.props.icon + \")\",\r\n                backgroundSize: '200px 160px',\r\n                \r\n            }\r\n        }\r\n\r\n        let className= \"card \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.onClick} style={this.props.style} className={className}>\r\n                <div className=\"card-title  \" style={titleStyle}>\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\n\r\n\r\nclass FullCalendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth(),\r\n            inputYearValue: new Date().getFullYear(),\r\n            activeId: \"\", \r\n            selectedDay: 0\r\n        }\r\n\r\n        this.calendarData = [];\r\n        this.days = [\"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\", \"Ahad\"];\r\n\r\n\r\n        this.month_now = 7;// 0; \r\n        this.begin = { week: 1, day: 3, dayCount: 31, info: \"\" };\r\n        this.begin_old = { week: 0, day: 0, dayCount: 0, info: \"\" };\r\n        this.year_now = 1945; \r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n        this.running_month = 7;\r\n        this.running_year = 1945;\r\n        this.filterDayId = 0;\r\n        this.filterMonthId = 0; this.dateFormId = 0;\r\n        this.entity_Name = 0; this.entity_Prop = 0; this.dateFormId = 0;\r\n\r\n        this.setSelectedMonth = (val) => {\r\n            this.setState({ selectedMonth: val });\r\n            this.props.refresh(val, this.year_now);\r\n        }\r\n        this.changeInputYear = (val, id) => {\r\n            this.setState({ inputYearValue: val, activeId: id });\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => { \r\n            this.props.getEventByDate(month, year );\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            if(this.props.getEventDetail){\r\n                return this.props.getEventDetail(day);\r\n            }\r\n\r\n            return [];\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        } \r\n        this.updateFields();\r\n        if (_byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n         this.loadCalendar();\r\n    }\r\n\r\n    setDateElementId(dateID) { \r\n        this.dateFormId = dateID;\r\n        let filterStr = \"filter-\" + dateID;\r\n        this.filterDayId = (filterStr + \".day\");\r\n        this.filterMonthId = (filterStr + \".month\");\r\n        this.dateFormId = (filterStr + \".year\");\r\n    }\r\n\r\n    updateFields() {\r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n    }\r\n\r\n    loadCalendar() {\r\n        this.updateFields();\r\n        this.createTable();\r\n        this.begin_old = this.begin;\r\n        this.begin = this.fillDay(this.month_now, true, this.begin);\r\n\r\n        this.input_month.value = new Date().getMonth() + 1; \r\n        this.setCalendar();\r\n        this.setState({ updated: new Date(), inputYearValue: new Date().getFullYear() });\r\n    }\r\n    setCalendar() {\r\n        this.doSetCalendar();\r\n    }\r\n\r\n    doSetCalendar() {\r\n        console.log(\"==start==\");\r\n\r\n        this.running_month = this.input_month ? this.input_month.value - 1 : new Date().getMonth();\r\n        this.running_year = this.state.inputYearValue ? this.state.inputYearValue : new Date().getFullYear();\r\n        let diff_year = +Math.abs(this.running_year - this.year_now);\r\n        // alert(\"diff_year year:\" + diff_year);\r\n        let monthCount = 0;\r\n        if (diff_year > 0)\r\n            monthCount = (11 - this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (+this.running_month);\r\n        else\r\n            monthCount = this.running_month - this.month_now;\r\n        let less = false;\r\n        if (this.running_year - this.year_now > 0) {\r\n            less = false;\r\n        } else if (this.running_year - this.year_now < 0) {\r\n            less = true;\r\n        } else {\r\n            if (this.running_month - this.month_now > 0) {\r\n                less = false;\r\n            } else {\r\n                less = true;\r\n            }\r\n        }\r\n        monthCount = Math.abs(monthCount);\r\n        //console.log(\"kurang dari: \", less);\r\n        let current_month = this.month_now;\r\n        let endMonth = (monthCount + this.month_now);\r\n        if (monthCount <= 0)\r\n            return;\r\n        if (!less)\r\n        ////console.log(\"month now\",this.month_now,\"diff_year\",monthCount,\"to\",to);\r\n        {\r\n            for (let m = this.month_now + 1; m <= endMonth + 1; m++) {\r\n                if (current_month > 11) {\r\n                    current_month = 0;\r\n\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.nextMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"month\",current_month,\"this.running_year\",this.year_now);\r\n                current_month++;\r\n            }\r\n        } else if (less) {\r\n            let pastMonthCount = (this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (11 - this.running_month);\r\n            endMonth = (pastMonthCount + this.month_now);\r\n            //console.log(\"month now\", this.month_now, \"diff_year\", monthCount, \"from\", to);\r\n            let begin_month = this.month_now;\r\n            for (let b = endMonth + 1; b >= begin_month + 1; b--) {\r\n                if (current_month < 0) {\r\n                    current_month = 11;\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.prevMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"b\",b,\"month\",current_month);\r\n                current_month--;\r\n            } \r\n        }\r\n\r\n        this.fillInfo();\r\n        console.log(\"==end==\")\r\n    }\r\n\r\n    fillInfo() {\r\n        if (this.date_info)\r\n            this.date_info.value = timeLineConstant.month[this.month_now].name + \" \" + this.year_now;\r\n        this.refresh();\r\n\r\n    } \r\n\r\n    detail(day, month, year) { \r\n        if(this.props.detail){\r\n            this.props.detail(day, month, year);\r\n        } \r\n    }\r\n\r\n    prevMonth() {\r\n\r\n        this.setState({ updated:new Date()})\r\n        return this.doPrevMonth(false);\r\n    }\r\n\r\n    doPrevMonth(prev) {\r\n        this.month_now--;\r\n        if (prev) {\r\n            this.running_month--;\r\n        }\r\n        if (this.month_now < 0) {\r\n            this.month_now = 11;\r\n            this.year_now--;\r\n            if (prev) {\r\n                this.running_month = 11;\r\n                this.running_year--;\r\n            }\r\n        }\r\n        let begin_prev = this.findBegin(this.begin_old, this.begin_old.dayCount);\r\n\r\n        this.begin_old = {\r\n            week: begin_prev.week,\r\n            day: begin_prev.day,\r\n            dayCount: begin_prev.dayCount,\r\n        }\r\n        let switch_ = this.fillDay(this.month_now, false, begin_prev);\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n    }\r\n\r\n    nextMonth() {\r\n        \r\n        return this.doNextMonth(false);\r\n    }\r\n\r\n    refresh() {\r\n        if(this.props.refresh){\r\n            this.props.refresh(this.month_now, this.year_now);\r\n        }\r\n    }\r\n\r\n    doNextMonth(next) {\r\n        console.log(\"NEXT\")\r\n        this.month_now++;\r\n        if (next) {\r\n            this.running_month++;\r\n        }\r\n        if (this.month_now > 11) {\r\n            this.month_now = 0;\r\n            this.year_now++;\r\n            if (next) {\r\n                this.running_month = 0;\r\n                this.running_year++;\r\n            }\r\n        }\r\n\r\n        let switch_ = this.fillDay(this.month_now, true, this.begin);\r\n        this.begin_old = {\r\n            week: this.begin.week,\r\n            day: this.begin.day,\r\n            dayCount: this.begin.dayCount,\r\n        }\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount,\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n\r\n    }\r\n\r\n    findBegin(begin_old_, totalday) {\r\n        let M = this.month_now - 1;\r\n        if (M < 0) {\r\n            M = 11;\r\n        }\r\n        let day = begin_old_.day;\r\n        let week = 6;\r\n        let begin_prev_ = {\r\n            week: 0,\r\n            day: 0,\r\n            dayCount: timeLineConstant.month[M].day\r\n        }\r\n\r\n        for (let D = totalday; D >= 0; D--) {\r\n            if (day <= 0) {\r\n                day = 7;\r\n                week--;\r\n            }\r\n            day--;\r\n        }\r\n        begin_prev_.week = week;\r\n        begin_prev_.day = day + 1;\r\n        return begin_prev_;\r\n    }\r\n\r\n    setElementByAttr(val, val2, day) {\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            let data = this.calendarData[i];\r\n\r\n            if (data.week == val && data.day == val2) {\r\n                if (new Date().getDate() == day &&\r\n                    new Date().getMonth() == this.month_now &&\r\n                    new Date().getYear() + 1900 == this.year_now) {\r\n\r\n                    console.log(\"NOW\", i);\r\n                    this.calendarData[i].now = true;\r\n                } else {\r\n                 //   console.log(\"NOT NOW\", i);\r\n                    this.calendarData[i].now = false;\r\n                }\r\n                this.calendarData[i].text = day;\r\n            }\r\n        }\r\n    }\r\n\r\n    addNewEvent(day, month, year) {\r\n\r\n        let strDate = this.dateAcceptableForHtmlInput(day, month, year);\r\n        document.getElementById(this.dateFormId).value = strDate;\r\n    }\r\n\r\n    dateAcceptableForHtmlInput(day, month, year) {\r\n        return year + \"-\" + this.addZero(month, 10) + \"-\" + this.addZero(day, 10);\r\n    }\r\n\r\n    addZero(Val, Min) {\r\n        let N = new String(Val);\r\n        let MinStr = new String(Min);\r\n\r\n        let ValLength = N.length;\r\n        let MinLength = MinStr.length;\r\n        let Diff = MinLength - ValLength;\r\n        for (let i = 1; i <= Diff; i++) {\r\n            N = new String(\"0\").concat(N);\r\n        }\r\n\r\n        return N;\r\n    }\r\n\r\n    clear() {\r\n\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            this.calendarData[i].text = \"\";\r\n        }\r\n\r\n        timeLineConstant.month[1].day = 28 + (+this.year_now % 4 == 0 ? 1 : 0);\r\n    }\r\n\r\n    fillDay(current_month, next, begin) {\r\n        this.clear();\r\n        let begin_new = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let begin_old_ = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let week_ = begin_new.week;\r\n        let begin_week = week_;\r\n        if (begin_new.week > 1 && begin_new.day > 1) {\r\n            week_ = 1;\r\n            begin_week = 1;\r\n        }\r\n        let day_ = begin_new.day;\r\n        let begin_day = day_;\r\n        let isNow = this.running_month == current_month && this.running_year == this.year_now;\r\n        //  console.log(\"isNow\", isNow,this.running_month,'=',current_month, this.running_month == current_month,this.running_year,'=',this.year_now, this.running_year == this.year_now)\r\n        for (let d = 1; d <= timeLineConstant.month[current_month].day; d++) {\r\n            if (day_ > 7) {\r\n                day_ = 1;\r\n                week_++;\r\n            }\r\n            if (isNow) {\r\n                this.setElementByAttr(week_, day_, d);\r\n            }\r\n            day_++;\r\n        }\r\n        begin_new.week = week_ >= 5 ? 2 : 1;\r\n        begin_new.day = day_;\r\n        begin_new.dayCount = timeLineConstant.month[current_month].day;\r\n        //console.log(\"old\", begin_old_.day, begin_old_.week);\r\n        //console.log(\"   \");\r\n        //console.log(\"new\", begin_new.day, begin_new.week);\r\n        this.fillInfo();\r\n        if (isNow) {\r\n            // this.detail(null, (+this.running_month + 1), this.running_year);\r\n            begin_new.info = \"NOW\";\r\n            this.getEventByDate(this.running_month + 1, this.running_year);\r\n        } else {\r\n            begin_new.info = \"SOME-DAY\";\r\n        }\r\n\r\n\r\n\r\n        return begin_new;\r\n    }\r\n\r\n    render() {\r\n        //validate division\r\n        let selectedYear = this.state.inputYearValue;\r\n\r\n        let totalCalendarData = this.days.map(day => {\r\n            return ({ text: day, title: true })\r\n        })\r\n\r\n        this.calendarData.forEach(element => {\r\n            totalCalendarData.push(element);\r\n        });\r\n\r\n        let calendarData = totalCalendarData.map(\r\n            data => {\r\n\r\n                if (data.text == null || data.text == \"\") {\r\n                    return <div></div>\r\n                }\r\n\r\n                let style = { width: '80%', minHeight: '150px', marginBottom: '15px' };\r\n\r\n                if (data.title == true) {\r\n                    return (<div>{data.text}</div>)\r\n                }\r\n\r\n                if (data.now == true) {\r\n                    style = {\r\n                        ...style,\r\n                        backgroundColor: 'lightgreen'\r\n                    }\r\n                }\r\n\r\n                let events = this.getEventDetail(+data.text);\r\n                let i = 0;\r\n                let eventList = events.map(event => {\r\n                    i++;\r\n                    if (i <= 3) {\r\n\r\n                        return <p key={\"EVT_\" + i}>{event.name}</p>\r\n                    } else if (i == 4) {\r\n                        return <ActionButton onClick={() => { }} text={\"detail \" + i} />\r\n                    } else {\r\n                        return null;\r\n                    }\r\n\r\n\r\n                });\r\n             //   console.log(data.text, \"EVENTS: \", events);\r\n\r\n                return (\r\n                    <Card style={style} title={data.text}\r\n                        onClick={() => this.detail(data.text, this.month_now, this.year_now)}\r\n                        content={eventList}\r\n                    />\r\n                )\r\n            }\r\n        )\r\n\r\n\r\n        let content = <div id=\"calendar-wrapper\">\r\n\r\n            <GridComponent cols={3} style={{\r\n                textAlign: 'center', width: '400px'\r\n            }} items={[\r\n                <ComboBox id=\"input_month\" defaultValue={this.state.selectedMonth} onChange={this.setSelectedMonth}\r\n                    options={timeLineConstant.month} />,\r\n                <InputField type=\"number\" id=\"input_year\" value={selectedYear} onKeyUp={this.changeInputYear} />,\r\n                <ActionButton onClick={(e) => this.setCalendar()} text={\"Go\"} />,\r\n                <ActionButton onClick={(e) => this.doPrevMonth(true)} text={\"Prev\"} />,\r\n                <input disabled className=\"form-control\" id=\"date-info\" />,\r\n                <ActionButton onClick={(e) => this.doNextMonth(true)} text={\"Next\"} />\r\n            ]}\r\n\r\n            />\r\n            <p></p>\r\n            <p></p>\r\n            <GridComponent cols={7} items={calendarData} />\r\n        </div>;\r\n\r\n\r\n        return (\r\n             content  \r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default FullCalendar;","export const divisionConfig = {\r\n    title: \"Badan Pengurus\",\r\n    entityName: \"division\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\", lableName: \"Nama\" },\r\n        { name: \"description\" }, { name: \"institution.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama BPD\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"Deskripsi BPD\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Division Insitusi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"institution.name\",\r\n            reffEntity: \"Institution\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const sectionConfig = {\r\n    title: \"Divisi\",\r\n    entityName: \"section\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"division.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"BPD\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"division.name\",\r\n            reffEntity: \"division\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const programConfig = {\r\n    title: \"Program Kerja\",\r\n    entityName: \"program\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" }\r\n        ,\r\n        { name: \"section.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Proker\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi Proker\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\nexport const eventConfig = {\r\n    title: \"Kegiatan\",\r\n    entityName: \"event\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"info\" },\r\n        { name: \"date\", type: \"date\" },\r\n        { name: \"location\" },\r\n        { name: \"program.name\" },\r\n        { name: \"participant\" },\r\n        {\r\n            name: \"done\", type: \"staticDropdown\", options: [\r\n                { text: \"Done\", value: 1 },\r\n                { text: \"UnDone\", value: 0 }\r\n            ]\r\n        }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Kegiatan\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Waktu Kegiatan\",\r\n            inputType: \"date\",\r\n            name: \"date\"\r\n        },\r\n        {\r\n            lableName: \"Info Kegiatan\",\r\n            inputType: \"textarea\",\r\n            name: \"info\"\r\n        }, {\r\n            lableName: \"Lokasi Kegiatan\",\r\n            inputType: \"text\",\r\n            name: \"location\"\r\n        },\r\n        {\r\n            lableName: \"Nama Program\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"program.name\",\r\n            reffEntity: \"program\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Status Kegiatan\",\r\n            inputType: \"staticDropDown\",\r\n            name: \"done\",\r\n            options: [\r\n                { text: \"Done\", value: 1 },\r\n                { text: \"UnDone\", value: 0 }\r\n            ]\r\n        },\r\n        {\r\n            lableName: \"Peserta\",\r\n            inputType: \"number\",\r\n            name: \"participant\"\r\n        },\r\n    ]\r\n}\r\n\r\nexport const positionConfig = {\r\n    title: \"Posisi\",\r\n    entityName: \"position\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" },\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\nexport const memberConfig = {\r\n    title: \"Anggota\",\r\n    entityName: \"member\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"position\" },\r\n        { name: \"section\" },\r\n        { name: \"description\" }\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Anggota\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"position.name\",\r\n            reffEntity: \"position\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: \"textarea\",\r\n            name: \"name\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==============OLD STUFF==============//\r\n\r\n/**\r\n * SAMPLE\r\n */\r\n\r\nexport const productConfig = {\r\n    title: \"Product\",\r\n    entityName: \"product\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"code\" },\r\n        { name: \"description\" }, { name: \"unit.name\" },\r\n        { name: \"price\", type: \"number\" }, { name: \"category.name\" },\r\n        { name: \"imageUrl\", type: \"imageMultiple\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Product Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Code\",\r\n            inputType: \"text\",\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Product Image(s)\",\r\n            inputType: \"multipleImage\",\r\n            name: \"imageUrl\"\r\n        },\r\n        {\r\n            lableName: \"Product Description\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Product Unit\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"unit.name\",\r\n            reffEntity: \"Unit\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Price\",\r\n            inputType: \"number\",\r\n            name: \"price\"\r\n        },\r\n        {\r\n            lableName: \"Product Category\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"category.name\",\r\n            reffEntity: \"Category\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport const supplierList = {\r\n    title: \"Supplier\",\r\n    entityName: \"supplier\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"address\" }, { name: \"contact\" }, { name: \"website\", type: \"link\" },\r\n        { name: \"iconUrl\", type: \"image\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Supplier Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Address\",\r\n            inputType: \"textarea\",\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Contact\",\r\n            inputType: \"text\",\r\n            name: \"contact\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Icon\",\r\n            inputType: \"singleImage\",\r\n            name: \"iconUrl\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Website\",\r\n            inputType: \"text\",\r\n            name: \"website\"\r\n        }\r\n    ]\r\n}\r\nexport const customerList = {\r\n    title: \"Customer\",\r\n    entityName: \"customer\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"username\" }, { name: \"name\" }, { name: \"address\" }, { name: \"phone\" }, { name: \"email\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Customer Unique Name\",\r\n            inputType: \"text\",\r\n            name: \"username\"\r\n        },\r\n        {\r\n            lableName: \"Customer Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Customer Address\",\r\n            inputType: \"textarea\",\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Customer Phone\",\r\n            inputType: \"text\",\r\n            name: \"phone\"\r\n        },\r\n        {\r\n            lableName: \"Customer Email\",\r\n            inputType: \"email\",\r\n            name: \"email\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const transactionConfig = {\r\n    title: \"Transaction\",\r\n    entityName: \"transaction\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"code\" }, { name: \"transactionDate\", type: \"longDate\" },\r\n        { name: \"type\" }, { name: \"supplier.name\" },\r\n        { name: \"customer.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Transaction Code\",\r\n            inputType: \"text\",\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Date\",\r\n            inputType: \"text\",\r\n            name: \"transactionDate\"\r\n        },\r\n        {\r\n            lableName: \"Transaction Type\",\r\n            inputType: \"text\",\r\n            name: \"type\"\r\n        },\r\n        {\r\n            lableName: \"Supplier\",\r\n            inputType: \"text\",\r\n            name: \"supplier.name\"\r\n        },\r\n        {\r\n            lableName: \"Customer\",\r\n            inputType: \"text\",\r\n            name: \"customer.name\",\r\n        },\r\n\r\n    ]\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport FullCalendar from './FullCalendar';\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth(),\r\n            selectedYear: new Date().getFullYear(),\r\n            detailView: false,\r\n            detailEvents: [],\r\n            selectedDay: 0\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => {\r\n            console.log(\"_________\", month, year);\r\n            this.setState({\r\n                update: new Date(), selectedMonth: month, selectedYear: year\r\n            });\r\n            this.props.getEventByDate(month, year, this.props.app);\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            let events = this.props.events;\r\n            let result = [];\r\n\r\n            events.forEach(event => {\r\n                let date = new Date(event.date);\r\n                if (date.getDate() == day) {\r\n                    result.push(event);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n        this.detail = (day, month, year) => {\r\n            console.log(\"@DETAIL:\", day, month, year);\r\n            let events = this.getEventDetail(+day);\r\n            this.setState({\r\n                detailView: true, detailEvents: events, selectedDay: day,\r\n                selectedMonth: month, selectedYear: year\r\n            })\r\n        }\r\n\r\n        this.refresh = (selectedMonth, selectedYear) => {\r\n            this.setState({\r\n                updated: new Date(),\r\n                selectedMonth: selectedMonth, selectedYear: selectedYear\r\n            })\r\n        }\r\n\r\n        this.addEvent = () => {\r\n            let config = entityConfig.eventConfig;\r\n\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n\r\n            this.props.addEventFromTimeline(\r\n                this.state.selectedDay,\r\n                this.state.selectedMonth+1, /*IMPORTANT*/\r\n                this.state.selectedYear\r\n            );\r\n\r\n            this.props.history.push(\"/management\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n\r\n        //validate division\r\n        if (this.props.division == null) {\r\n            return <h2>Silakan Pilih Badan Pengurus MPI</h2>\r\n        }\r\n        let title = <h2>TimeLine {this.props.division.name + \" \" + this.state.selectedYear}</h2>;\r\n        \r\n        let detailEvents = [];\r\n        if (this.state.detailView == true) {\r\n            this.state.detailEvents.forEach(event => {\r\n\r\n                let content = <div>\r\n                    <p>{\"Date:\" + event.date}</p>\r\n                    <p>{\"Info:\" + event.info}</p>\r\n                    <p>{\"Participant:\" + event.participant}</p>\r\n                    <p>{\"Location:\" + event.location}</p>\r\n                    <p>{\"Status:\" + (event.done ? \"done\" : \"not done\")}</p>\r\n                </div>\r\n\r\n                let eventCard = <Card title={event.name}\r\n                    content={content}\r\n                />\r\n                detailEvents.push(eventCard);\r\n            });\r\n\r\n            if (detailEvents.length == 0) {\r\n                detailEvents = [\r\n                    <div>No Agenda.</div>\r\n                ]\r\n            }\r\n            return <div>\r\n                {title}\r\n                <p>Detail in {this.state.selectedDay + \" \" + stringUtil.monthYearString(\r\n                    this.state.selectedMonth + 1,\r\n                    this.state.selectedYear\r\n                )}</p>\r\n                <ActionButton onClick={() => { this.setState({ detailView: false }) }} text=\"Back\" />\r\n                <GridComponent cols={4} items={detailEvents} />\r\n                <ActionButton status=\"success\" onClick={() => { this.addEvent() }} text=\"Add Event\" />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {title}\r\n                <FullCalendar\r\n                    division={this.props.division}\r\n                    detail={this.detail} getEventByDate={this.getEventByDate}\r\n                    refresh={this.refresh}\r\n                    events={this.props.events} getEventDetail={this.getEventDetail}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        events: state.managementState.events,\r\n        division: state.userState.division\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEventByDate: (m, y, app) => dispatch(actions.getEventByDate(m, y, app)),\r\n    addEventFromTimeline: (d, m, y) => dispatch(actions.addEventFromTimeline(d, m, y))\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Timeline)) ","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Dashboard.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport Tab from '../buttons/Tab';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport DashboardMain from './DashboardMain';\r\nimport Timeline from './Timeline'\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: \"home\"\r\n        }\r\n\r\n        this.setMenuCode = (code) => {\r\n            this.setState({ menu: code });\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n        this.getDivisons = () => {  \r\n            this.props.getDivisons( this.props.app);  \r\n        }\r\n\r\n        this.selectDivision = (divisionId) => {\r\n            this.props.selectDivision(divisionId, this.props.app);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        if (this.props.loginStatus != true)\r\n            return;\r\n        this.props.setMenuCode(menus.DASHBOARD);\r\n        document.title = \"Dashboard\";\r\n\r\n        this.getDivisons();\r\n    }\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                text: \"Home\",\r\n                active: this.state.menu == \"home\",\r\n                onClick: () => {this.setMenuCode('home') }\r\n            },\r\n            {\r\n                text: \"Time Line\",\r\n                active: this.state.menu == \"timeline\", \r\n                onClick: () => {this.setMenuCode('timeline') }\r\n            } \r\n        ];\r\n    }\r\n \r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const buttonsData = this.getButtonsData();\r\n\r\n        let content = null;\r\n        switch (this.state.menu) {\r\n            case 'home':\r\n                content = <DashboardMain  division={this.props.division} \r\n                    selectDivision={this.selectDivision} \r\n                    divisions={this.props.divisions} />\r\n                break;\r\n            case \"timeline\":\r\n                    content = <Timeline app={this.props.app} />\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (<div className=\"section-container\">\r\n            <ContentTitle title={\"Admin Page\"}\r\n                description=\"management organisasi\" />\r\n            <div className=\"management-container\">\r\n                <Tab tabsData={buttonsData} />\r\n                {content}\r\n            </div>\r\n        </div>)\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        divisions: state.userState.divisions,\r\n        division: state.userState.division,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getDivisons: ( app) => dispatch(actions.getDivisons( app)),\r\n    selectDivision: (divisionId, app) => dispatch(actions.selectDivision(divisionId, app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)); ","import React, { Component } from 'react';\r\nimport '../../css/Footer.css'\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let date = new Date().getFullYear();\r\n\r\n        return (\r\n            <div className=\"App-footer\">\r\n               BPP MPI Divisi Media {date+\" powered by React Js \"+React.version}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react' \r\nimport Label from './Label';\r\nimport '../css/Chat.css'\r\nimport GridComponent from './layout/GridComponent';\r\n\r\nclass ChatList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let chats = this.props.messages ? this.props.messages : [];\r\n        let chatRows = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = chats[i];\r\n            chatRows.push(\r\n                <ChatItem message={chat} username={this.props.username} />\r\n            )\r\n        }\r\n        return (\r\n            <GridComponent cols={1} items={chatRows} />)\r\n    }\r\n}\r\n\r\nconst ChatItem = props => {\r\n    let className = \"chat-item rounded paper-shadow  \" + (props.message.admin == 1 ? \" admin \" : \"user\");\r\n    let username = \"\";\r\n    if (props.username) {\r\n        username = \" [\" + props.username + \"]\";\r\n    }\r\n    let sender = props.message.admin == 1 ? \"Admin\" : \"You\" + username;\r\n    let senderComponent = <span>\r\n        {sender}<span style={{ marginLeft: '11px', fontSize: '0.7em', float: 'right' }} >{props.message.date}</span>\r\n    </span>\r\n    return (\r\n        <div className={className}>\r\n            <Label style={{ fontSize: '0.8em', color: 'black' }} text={senderComponent} />\r\n            <Label text={props.message.text} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport SockJsClient from 'react-stomp';\r\nimport ChatList from '../ChatList';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport Label from '../Label';\r\nimport GridComponent from '../layout/GridComponent'\r\n\r\nclass ChatRoom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages: null, username: null, activeId: null }\r\n        this.sendChatMessage = () => {\r\n            if (!_byId(\"input-msg\").value) {\r\n                alert(\"Message must not be null\");\r\n                return;\r\n            }\r\n            this.props.sendChatMessage(_byId(\"input-msg\").value, this.state.username, this.props.app);\r\n            _byId(\"input-msg\").value = \"\";\r\n        }\r\n\r\n        this.handleMessage = (response) => {\r\n            console.log(\"Responses handleMessage: \", response.code);\r\n            console.log(\"LOCAL STORAGE:\", localStorage.getItem(\"requestId\"))\r\n            if (response.code != localStorage.getItem(\"requestId\")) {\r\n                return;\r\n            }\r\n            this.props.storeChatMessageLocally(response.entities);\r\n            // this.setState({ messages: response.entities });\r\n        }\r\n\r\n        this.changeUsername = (value, id) => {\r\n            this.setState({ username: value, activeId: id });\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.setMenuCode('chatroom');\r\n        document.title = \"Chat Room\";\r\n        this.props.getMessages(this.props.app);\r\n        if (this.props.userAlias) {\r\n            this.setState({ username: this.props.userAlias })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.activeId && _byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let userAlias = this.props.userAlias ? this.props.userAlias : \"\";\r\n        let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\r\n        let localHost = \"http://localhost:8080/universal-good-shop/\";\r\n        const usedHost = localHost;\r\n        return (\r\n            // <div className=\"section-container\">\r\n            //     <ContentTitle title=\"What Do You Feel?\" description=\r\n            //         {\"Identified as [\" + this.state.username + \"]\"} />\r\n            //     <InputField\r\n            //         value={userAlias}\r\n            //         onKeyUp={this.changeUsername}\r\n            //         id=\"input-username\"\r\n            //         placeholder=\"identify your name\" />\r\n            //     <div style={{ textAlign: 'left' }} id=\"chat-room\">\r\n\r\n            //         <div className=\"chat-container\"  >\r\n            //             <ChatList username={this.state.username} messages={this.props.messages} />\r\n            //         </div>\r\n\r\n            //         <GridComponent style={{ width: '50%', textAlign: 'right' }} items={[\r\n            //             <InputField style={{ width: '130%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />,\r\n            //             <ActionButton style={{ margin: '5px' }} status=\"success\" onClick={this.sendChatMessage} text=\"send\" />\r\n\r\n            //         ]} />\r\n\r\n            //         <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/messages']}\r\n            //             onMessage={(msg) => { this.handleMessage(msg) }}\r\n            //             ref={(client) => { this.clientRef = client }} />\r\n            //     </div>\r\n            // </div>\r\n            <ContentTitle title=\"under construction\" />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        messages: state.shopState.messages,\r\n        userAlias: state.shopState.userAlias\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    sendChatMessage: (message, username, app) => dispatch(actions.sendChatMessage(message, username, app)),\r\n    storeChatMessageLocally: (messages) => dispatch(actions.storeMessageLocally(messages)),\r\n    getMessages: (app) => dispatch(actions.getMessageList(app))\r\n\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ChatRoom)","import React, { Component } from 'react'\r\n\r\nimport '../../css/Input.css'\r\n\r\nclass DropdownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false\r\n        }\r\n\r\n        this.onHover = (e) => {\r\n            if(this.props.onHover)\r\n                this.props.onHover( this.props.index);\r\n        }\r\n        this.unHover = (e) => { \r\n            this.setState({ hover: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n          return (\r\n            <div onMouseLeave={this.unHover} onMouseOver ={this.onHover}  >\r\n                {this.props.text}</div>\r\n        )\r\n    }\r\n}\r\nexport default DropdownItem;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport DropdownItem from './DropdownItem';\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            focus: true, hover: false, hoverIndex: -1,\r\n\r\n        }\r\n\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(document.getElementById(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onBlur = () => {\r\n            console.log(\"blur\");\r\n            this.setState({ focus: false, hover: false })\r\n        }\r\n\r\n        this.onSelect = (dataValue, text) => {\r\n            console.log(\"select value:\", dataValue);\r\n            if (this.props.onSelect) { this.props.onSelect(dataValue); }\r\n            if (this.props.id) {\r\n                document.getElementById(this.props.id).value = text;\r\n            }\r\n        }\r\n\r\n        this.onHover = (i) => {\r\n            if (this.state.hoverIndex != i)\r\n                this.setState({ hoverIndex: i });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let dropdownList = [];\r\n        let dropdownComponent = \"\";\r\n        if (this.state.focus && this.props.dropdownList && this.props.dropdownList.length > 0) {\r\n            dropdownList = this.props.dropdownList;\r\n            // console.log(\"RENDERD HOVER:\", this.state.hoverIndex);\r\n            dropdownComponent = <div className=\"dropdown\">\r\n                {dropdownList.map(\r\n                    (data, i) => {\r\n                        let className = \"dropdown-item\";\r\n                        if (this.state.hoverIndex == i) className = \"dropdown-item-hovered\";\r\n                        return (\r\n                            <div\r\n                                id={stringUtil.uniqueId()}\r\n                                key={\"dropdown-xx-\" + stringUtil.uniqueId()}\r\n                                onClick={() => this.onSelect(data.value, data.text)}\r\n                                className={className}>\r\n                                <DropdownItem onHover={this.onHover} index={i} text={data.text} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        }\r\n\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let inputClassName = \"rounded\";\r\n        return (\r\n            <div\r\n                onMouseOver={() => this.setState({ focus: true })}\r\n                onMouseLeave={this.onBlur}\r\n                className=\"dropdown-wrapper input-field\">\r\n                <input\r\n                    className={inputClassName}\r\n                    onFocus={() => this.setState({ focus: true })}\r\n                    id={this.props.id}\r\n                    type=\"text\"\r\n                    onKeyUp={this.handleKeyup}\r\n                    placeholder={placeholder} />\r\n                {dropdownComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default InputDropdown;","import React, { Component } from 'react'\r\nimport '../../css/Input.css'\r\nimport '../../css/Common.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport * as url from '../../constant/Url'\r\nimport ActionButton from '../buttons/ActionButton'\r\n\r\nclass InputFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            base64Data: null\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            componentUtil.toBase64(e.target, this, function (result, referer) {\r\n                referer.setState({ base64Data: result });\r\n\r\n            });\r\n        }\r\n\r\n        this.removeImage = () => {\r\n            if(this.props.removeImage){\r\n                this.props.removeImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.base64Data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let displayImage = null;\r\n        if (this.state.base64Data) {\r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.state.base64Data} width=\"60\" height=\"60\" />\r\n            </div>;\r\n        }\r\n        if (this.props.value && this.props.value.trim() != \"\") {\r\n            \r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.props.value} width=\"60\" height=\"60\" />\r\n                <ActionButton text=\"cancel\" status=\"danger\" onClick={this.removeImage} />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field\" >\r\n                <input accept=\"image/*\" onChange={this.onChange} type=\"file\" key={\"input_file_\" + stringUtil.uniqueId()} />\r\n                {displayImage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFile;\r\n\r\n","import React, { Component } from 'react';\r\nimport * as url from '../../constant/Url'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InputFile from './InputFile';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFileMultiple extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAddMoreFile = () => {\r\n            if(this.props.addMoreImage){\r\n                this.props.addMoreImage();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let inputFields = [];\r\n        if (this.props.inputFilesData) {\r\n            inputFields = this.props.inputFilesData;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {inputFields.map(\r\n                    inputFileData => {\r\n                        let value = inputFileData.value;\r\n                        return (\r\n                            <InputFile\r\n                                key={stringUtil.uniqueId() + \"_multiple_file_item\"}\r\n                                onChange={(base64) => {\r\n                                    if (inputFileData.onChange)\r\n                                        inputFileData.onChange(base64)\r\n                                }}\r\n                                value={value && value.includes(\"base64\") ? value : value ?\r\n                                    url.baseImageUrl + value : null}\r\n                                id={inputFileData.inputId}\r\n                                removeImage={() => {\r\n                                    if (inputFileData.removeImage)\r\n                                        inputFileData.removeImage()\r\n                                }\r\n                                }\r\n\r\n                            />\r\n                        )\r\n                    }\r\n                )}\r\n                <ActionButton text=\"add more\" onClick={this.handleAddMoreFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFileMultiple;","import React, { Component } from 'react'\r\nimport '../../css/Entity.css'\r\nimport '../../css/Common.css'\r\nimport Label from '../Label'\r\nimport InputDropdown from '../input/InputDropdown'\r\nimport ComboBox from '../input/ComboBox'\r\nimport InputField from '../input/InputField';\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport InputFile from '../input/InputFile'\r\nimport * as url from '../../constant/Url'\r\nimport InputFileMultiple from '../input/InputFileMultiple'\r\n\r\nclass EntityForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            managedEntity: null,\r\n            activeId: null,\r\n            formValues: {},\r\n            dropdownList: {},\r\n            dropdownValues: {},\r\n            selectedEntities: {},\r\n            base64Data: {},\r\n            base64DataMultiple: {},\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * valudate before submit\r\n         */\r\n        this.validateEntity = (entity) => {\r\n            const result = entity;\r\n            for (let key in entity) {\r\n                console.log(key);\r\n                const formDataItem = this.getFormDataItemStartWith(key);\r\n                if (formDataItem) {\r\n                    if (formDataItem.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle single Image\r\n                         */\r\n                        if (entity[key] && !entity[key].includes(\"base64\")) {\r\n                            result[key] = null;\r\n                        }\r\n                    } else if (formDataItem.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle MULTIPLE Image\r\n                         */\r\n\r\n                        if (entity[key]) {\r\n                            let arrayOfValues = entity[key].split(\"~\");\r\n                            let resultValue = new Array();\r\n                            for (let i = 0; i < arrayOfValues.length; i++) {\r\n                                const element = arrayOfValues[i];\r\n                                /**\r\n                                 * if not modified\r\n                                 */\r\n                                if (!this.state.base64DataMultiple[key] ||\r\n                                    !this.state.base64DataMultiple[key][i]) {\r\n                                    resultValue.push(\"{ORIGINAL>>\" + element + \"}\");\r\n                                } else\r\n                                    /**\r\n                                     * if modified\r\n                                     */\r\n                                    if (this.state.base64DataMultiple[key] &&\r\n                                        this.state.base64DataMultiple[key][i]) {\r\n                                        const updatedValue = this.state.base64DataMultiple[key][i];\r\n                                        resultValue.push(\"{ORIGINAL>>\" + element + \"}\" + updatedValue);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            if (this.state.base64DataMultiple[key] && this.state.base64DataMultiple[key].length > arrayOfValues.length) {\r\n                                for (let i = arrayOfValues.length - 1; i < this.state.base64DataMultiple[key].length; i++) {\r\n                                    const element = this.state.base64DataMultiple[key][i];\r\n                                    if (element && element.includes(\"base64\")) {\r\n                                        resultValue.push(element);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (resultValue.length > 0)\r\n                                result[key] = resultValue.join(\"~\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.setState({ updated: new Date() })\r\n        }\r\n\r\n        this.handleSubmit = () => {\r\n            let addFromOtherPage = false;\r\n\r\n            const updateMode = this.props.managedEntity != null && this.props.addNew == false;\r\n            if (updateMode) {\r\n                console.log(\"WILL UPDATE(props):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"update\");\r\n                }\r\n            }else{\r\n                if( this.props.managedEntity != null && this.props.addNew == true){\r\n                    addFromOtherPage = true;\r\n                }\r\n            }\r\n\r\n            const addNewMod = this.state.managedEntity != null;\r\n            if (addNewMod  ) {\r\n                console.log(\"WILL SUBMIT NEW(state):\", this.state.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.state.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n\r\n            /**\r\n             * SPECIAL CASE\r\n             */\r\n\r\n            if ( addFromOtherPage) {\r\n                console.log(\"WILL SUBMIT NEW(SPECIAL CASE):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n            this.clear();\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.onKeyUp = (value, id, propName) => {\r\n            this.setState({ activeId: id });\r\n            this.updateSelectedEntity(propName, value);\r\n\r\n        }\r\n\r\n        this.clear = () => {\r\n            this.setState({\r\n                managedEntity: null,\r\n                dropdownList: {},\r\n                dropdownValues: {},\r\n                selectedEntities: {},\r\n                base64Data: {},\r\n                base64DataMultiple: {}\r\n            });\r\n            if (this.props.removeManagedEntity) {\r\n                this.props.removeManagedEntity();\r\n            }\r\n        }\r\n\r\n        this.populateDropdown = (entityname, fieldname, fieldvalue) => {\r\n            const request = {\r\n                entityName: entityname,\r\n                fieldName: fieldname.split(\".\")[1],\r\n                fieldValue: fieldvalue\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"DATA FOR DROPDOWN: \", data);\r\n            });\r\n\r\n        }\r\n\r\n        this.onKeyUpDynamicDropdown = (value, id, propName, reffEntity) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            const request = {\r\n                entityName: reffEntity,\r\n                fieldName: 'name',\r\n                fieldValue: value\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"LIST FOR DROPDOWN: \", data.entities)\r\n                referer.populateDropdownValues(data.entities, propName);\r\n            });\r\n            let currentDropdownValue = this.state.dropdownValues;\r\n            currentDropdownValue[propName] = value;\r\n            this.setState({ activeId: id, dropdownValues: currentDropdownValue });\r\n        }\r\n\r\n        this.populateDropdownValues = (entities, propName) => {\r\n            console.log(\"ENTITIES:\", entities)\r\n            let options = new Array();\r\n            const formDataItem = this.getFormDataItem(propName);\r\n            if (null == formDataItem) {\r\n                console.log(\"FORM DATA NOT FOUND\");\r\n                return;\r\n            }\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                options.push({\r\n                    value: entity[formDataItem.idField],\r\n                    text: entity[formDataItem.displayField],\r\n                    entity: entity\r\n                })\r\n            }\r\n            let currentDropdownList = this.state.dropdownList;\r\n            currentDropdownList[propName] = options;\r\n            //  this.setState({ dropdownList: currentDropdownList })\r\n            return options;\r\n        }\r\n\r\n        this.getSelectedDropdownItem = (value, propName) => {\r\n            if (this.state.dropdownList[propName] == null) {\r\n                return null;\r\n            }\r\n            const dropdownList = this.state.dropdownList[propName];\r\n            for (let i = 0; i < dropdownList.length; i++) {\r\n                const option = dropdownList[i];\r\n                if (option.value == value) {\r\n                    return option;\r\n                }\r\n\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getFormDataItem = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.addMoreImage = (propName) => {\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    currentValue = currentValue.trim() + \"~DEFAULT.BMP\";\r\n                    this.updateSelectedEntity(propName, currentValue);\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                let currentValue;\r\n                if (!managedEntity) {\r\n                    managedEntity = {};\r\n                    currentValue = \"\";\r\n                } else\r\n                    currentValue = managedEntity[propName] + \"~\";\r\n                currentValue = currentValue.trim() + \"DEFAULT.BMP\";\r\n                this.updateSelectedEntity(propName, currentValue);\r\n            }\r\n        }\r\n\r\n        this.updateSelectedEntity = (propName, value) => {\r\n            if (this.props.managedEntity) {\r\n                this.props.managedEntity[propName] = value;\r\n                this.refresh();\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) managedEntity = {};\r\n                managedEntity[propName] = value;\r\n                this.setState({ managedEntity: managedEntity });\r\n            }\r\n\r\n        }\r\n\r\n        this.getFormDataItemStartWith = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                    if (formDataItem.name.split(\".\").length > 1) {\r\n                        if (formDataItem.name.split(\".\")[0] == propName) {\r\n                            return formDataItem;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.handleRemoveImage = (propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = null;\r\n\r\n            this.updateSelectedEntity(propName, null);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64Image = (base64, propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = base64;\r\n\r\n            this.updateSelectedEntity(propName, base64);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64MultipleImage = function (base64, propNameRaw, i) {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = base64;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n        }\r\n\r\n        this.removeElementAtPosition = (array, index) => {\r\n            let result = new Array();\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (i != index) {\r\n                    result.push(array[i])\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.handleRemoveMultipleImage = (propNameRaw, i) => {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = null;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity; \r\n                if (!managedEntity) {\r\n                    return;\r\n                }\r\n                let currentValue = managedEntity[propName];\r\n                if(currentValue){\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.selectFromDynamicDropdown = (value, propName) => {\r\n            console.log(propName, \":\", value);\r\n            const currentDropdownList = this.state.dropdownList;\r\n            const dropdownValues = this.state.dropdownValues;\r\n            const selectedEntities = this.state.selectedEntities;\r\n\r\n            const selectedOption = this.getSelectedDropdownItem(value, propName);\r\n            if (null == selectedOption) {\r\n                return;\r\n            }\r\n\r\n            dropdownValues[propName] = selectedOption.text;\r\n            currentDropdownList[propName] = [];\r\n            selectedEntities[propName] = selectedOption.entity;\r\n\r\n            /**\r\n             * time to modify entity\r\n             */\r\n            const displayPropName = propName.split(\".\")[0];\r\n\r\n            this.updateSelectedEntity(displayPropName, selectedOption.entity);\r\n            this.setState({ activeId: null, dropdownList: currentDropdownList, dropdownValues: dropdownValues, selectedEntities: selectedEntities });\r\n        }\r\n\r\n        this.handleStaticDropdownChange = (value, propName) =>{\r\n            this.updateSelectedEntity(propName, value);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        let formData = this.props.entityConfig && this.props.entityConfig.formData ? this.props.entityConfig.formData : [];\r\n\r\n        const entityExist = this.props.managedEntity != null || this.state.managedEntity;\r\n\r\n\r\n        let actionButtons = null;\r\n        if(!this.props.entityConfig.disabled){\r\n            actionButtons  =   <ActionButtons buttonsData={[\r\n                {\r\n                    text: this.props.managedEntity && this.props.addNew == false ? \"Update\" : \"Add Record\",\r\n                    onClick: this.handleSubmit,\r\n                    status:\"success\"\r\n                },\r\n                {\r\n                    text: \"Clear\",\r\n                    status:\"warning\",\r\n                    onClick: this.clear\r\n                }\r\n            ]} />;\r\n        }\r\n\r\n        let formFields = <div className=\"entity-form  \">\r\n            {formData.map(\r\n                data => {\r\n                    const parentPropName = data.name.split(\".\")[0];\r\n                    let value = null;\r\n                    if (entityExist) {\r\n                        const entity = this.props.managedEntity ? this.props.managedEntity : this.state.managedEntity;\r\n                        const propName = data.name;\r\n\r\n                        if (propName.split(\".\").length > 1 && this.state.activeId != \"input-for-\" + data.name) {\r\n                            const valueAsObject = entity[propName.split(\".\")[0]];\r\n                            const objectPropName = propName.split(\".\")[1];\r\n\r\n                            value = valueAsObject ? valueAsObject[objectPropName] : null;\r\n                        } else {\r\n                            value = entity[propName];\r\n                        }\r\n                    }\r\n\r\n                    let inputComponent = null;\r\n                    const inputId = \"input-for-\" + data.name;\r\n\r\n                    if (data.inputType == \"dynamicDropdown\") {\r\n                        /**\r\n                         * if dynamic dropDown\r\n                         */\r\n\r\n                        if (null == value) {\r\n                            value = this.state.dropdownValues[data.name]\r\n                        }\r\n\r\n                        inputComponent = <InputDropdown\r\n                            onSelect={(value) => this.selectFromDynamicDropdown(value, data.name)}\r\n                            id={inputId}\r\n                            placeholder={data.lableName}\r\n                            value={value}\r\n                            dropdownList={this.state.dropdownList[data.name]}\r\n                            onKeyUp={(value, id) => { this.onKeyUpDynamicDropdown(value, id, data.name, data.reffEntity) }} />\r\n\r\n                    } else  if (data.inputType == \"staticDropDown\") {\r\n                        /**\r\n                         * if static drop down\r\n                         */\r\n                        console.log(\"STATIC DROPDOWN VALUE: \",value);\r\n                        inputComponent = <ComboBox \r\n                             defaultValue={new String(value)}\r\n                            onChange={(val)=>this.handleStaticDropdownChange(val,data.name)}\r\n                            options={data.options} id={stringUtil.uniqueId()}\r\n                         />\r\n\r\n                    } else if (data.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle image single\r\n                         */\r\n                        inputComponent = <InputFile\r\n                            onChange={(base64) => this.handleChangeBase64Image(base64, data.name)}\r\n                            value={value && value.includes(\"base64\") ? value : value ? url.baseImageUrl + value : null}\r\n                            id={inputId}\r\n                            removeImage={() => this.handleRemoveImage(data.name)}\r\n\r\n                        />\r\n\r\n                    } else if (data.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle multiple single\r\n                         */\r\n                        let valueSplit = value ? value.split(\"~\") : [];\r\n\r\n                        let imagesData = new Array();\r\n                        for (let i = 0; i < valueSplit.length; i++) {\r\n                            let valueSplitItem = valueSplit[i];\r\n                            if (this.state.base64DataMultiple[parentPropName] &&\r\n                                this.state.base64DataMultiple[parentPropName][i]\r\n                                && this.state.base64DataMultiple[parentPropName][i].includes(\"base64\")) {\r\n                                valueSplitItem = this.state.base64DataMultiple[parentPropName][i];\r\n                            }\r\n                            imagesData.push({\r\n                                value: valueSplitItem,\r\n                                onChange: (base64) => {\r\n                                    this.handleChangeBase64MultipleImage(base64, data.name, i);\r\n                                },\r\n                                removeImage: () => this.handleRemoveMultipleImage(data.name, i)\r\n\r\n                            })\r\n                        }\r\n                        inputComponent = <InputFileMultiple\r\n                            addMoreImage={() => this.addMoreImage(data.name)}\r\n                            inputFilesData={imagesData}\r\n\r\n                        />\r\n                    }\r\n\r\n                    else {\r\n                        /**\r\n                         * regular\r\n                         */\r\n                        inputComponent = <InputField\r\n                            onKeyUp={(value, id) => { this.onKeyUp(value, id, data.name) }}\r\n                            id={inputId} value={value}\r\n                            type={data.inputType} placeholder={data.lableName} />;\r\n                    }\r\n\r\n                    return (\r\n                        <div key={\"FORM-FIELD-\" + stringUtil.uniqueId()}>\r\n                            <Label text={data.lableName} />\r\n                            {inputComponent}\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n\r\n            {actionButtons}                \r\n        </div>\r\n\r\n        return (\r\n            <div className=\"entity-form-wrapper\">\r\n                {formFields}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntitiesWithCallback: (request, referer, callback) => dispatch(actions.getEntitiesWithCallback(request, referer, callback)),\r\n\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EntityForm))","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport '../../css/Management.css'\r\nimport '../../css/Entity.css'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport InputField from '../input/InputField'\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport EntityForm from './EntityForm';\r\nimport * as url from '../../constant/Url'\r\nimport Label from '../Label'\r\nimport GridComponent from '../layout/GridComponent'\r\n\r\nclass EntityList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: {},\r\n            activeId: null,\r\n            orderBy: null,\r\n            orderType: null\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are your sure for deleting this entity?\")) { return; }\r\n            console.log(\"Will DELETE: \", id)\r\n        }\r\n        this.handleEdit = (id) => {\r\n            this.getEntityById(id);\r\n        }\r\n        this.getHeaderNames = (fieldNames) => {\r\n            const headers = [];\r\n            for (let i = 0; i < fieldNames.length; i++) {\r\n                const name = fieldNames[i];\r\n                let headerName = name.name;\r\n                if (headerName.split(\".\").length > 1) {\r\n                    headerName = headerName.split(\".\")[0];\r\n                }\r\n                headers.push(headerName.toUpperCase());\r\n            }\r\n            headers.push(\"OPTION\");\r\n            return headers;\r\n        }\r\n\r\n        this.goToPage = (page, orderObject) => {\r\n            if (page > this.props.entitiesData.totalData / 10) {\r\n                page = 0;\r\n            }\r\n            if (page < 0) {\r\n                page = Math.ceil(this.props.entitiesData.totalData / 10 - 1);\r\n            }\r\n\r\n            let config = this.props.entityConfig;\r\n            config.filter = this.state.filter;\r\n            if (orderObject != null) {\r\n                config.orderBy = orderObject.orderBy;\r\n                config.orderType = orderObject.orderType;\r\n                this.setState({ orderBy: orderObject.orderBy, orderType: orderObject.orderType });\r\n            }\r\n\r\n            this.props.getEntityInPage(config, page);\r\n\r\n        }\r\n\r\n        this.getEntityById = (id) => {\r\n            const config = this.props.entityConfig;\r\n            if (config == null) {\r\n                alert(\"Config Not Found!\");\r\n                return;\r\n            }\r\n\r\n            this.props.getEntityById(config.entityName, id);\r\n        }\r\n\r\n        this.createNavButtons = () => {\r\n            let displayedButtons = componentUtil.createNavButtons(this.props.entitiesData.totalData / 10, this.props.currentPage);\r\n            return displayedButtons;\r\n        }\r\n\r\n        this.setOrderBy = (fieldName, orderType) => {\r\n            this.goToPage(this.props.currentPage, { orderBy: fieldName, orderType: orderType });\r\n        }\r\n\r\n        this.createFilterInputs = (fieldNames) => {\r\n            let inputs = new Array();\r\n            for (let i = 0; i < fieldNames.length; i++) {\r\n                const fieldName = fieldNames[i];\r\n                let headerName = fieldName.name;\r\n                if (headerName.split(\".\").length > 1) {\r\n                    headerName = headerName.split(\".\")[0];\r\n                }\r\n\r\n                let value = \"\";\r\n                \r\n                if (this.state.filter[headerName] != null) {\r\n                    value = this.state.filter[headerName];\r\n                    \r\n                }\r\n\r\n                let input = <InputField value={value} id={headerName + \"_filter_id\"}\r\n                    onKeyUp={this.handleFilterChange} key={\"input_field_\" + stringUtil.uniqueId()}\r\n                    placeholder={headerName} />\r\n\r\n                if (fieldName.type == \"date\") {\r\n                    const valueDay = this.state.filter[headerName + \"-day\"];\r\n                    const valueMonth = this.state.filter[headerName + \"-month\"];\r\n                    const valueYear = this.state.filter[headerName + \"-year\"];\r\n\r\n                    const inputDay = <InputField value={valueDay} id={headerName + \"-day_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_d\" + stringUtil.uniqueId()}\r\n                        placeholder={\"day\"} />;\r\n                    const inputMonth = <InputField value={valueMonth} id={headerName + \"-month_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_m\" + stringUtil.uniqueId()}\r\n                        placeholder={\"month\"} />;\r\n                    const inputYear = <InputField value={valueYear} id={headerName + \"-year_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_y\" + stringUtil.uniqueId()}\r\n                        placeholder={\"year\"} />;\r\n\r\n                    input = <GridComponent width=\"50px\" items={[inputDay, inputMonth, inputYear]} />\r\n                }\r\n\r\n\r\n                let orderType = \"asc\";\r\n                if (this.state.orderBy && this.state.orderBy == headerName) {\r\n                    if (this.state.orderType == \"asc\") {\r\n                        orderType = \"desc\";\r\n                    }\r\n                }\r\n\r\n\r\n                const orderButton = <ActionButton\r\n                    onClick={() => { this.setOrderBy(headerName, orderType) }}\r\n                    text={orderType} />\r\n\r\n                inputs.push(<div className=\"filter-wrapper\">\r\n                    {input}{orderButton}\r\n                </div>);\r\n            }\r\n            inputs.push(\"\");\r\n            return inputs;\r\n        }\r\n\r\n        this.handleFilterChange = (value, id) => {\r\n\r\n            let filter = this.state.filter;\r\n            if (value != null && value.trim() == \"\") {\r\n                filter[id.split(\"_filter_id\")[0]] = null;\r\n\r\n            } else {\r\n                filter[id.split(\"_filter_id\")[0]] = value;\r\n\r\n            }\r\n\r\n            this.setState({ filter: filter, activeId: id });\r\n            this.goToPage(this.props.currentPage);\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        const entitiesData = this.props.entitiesData;\r\n        const entityConfig = this.props.entityConfig;\r\n\r\n        if (null == entitiesData || null == entityConfig || null == entitiesData.entities) {\r\n            return (<h2>Entity Not Found</h2>)\r\n        }\r\n\r\n        const rows = [\r\n            //header\r\n            {\r\n                values: this.getHeaderNames(entityConfig.fieldNames),\r\n                disabled: true,\r\n                style: { textAlign: 'center', fontWeight: 'bold' }\r\n            },\r\n            //filter\r\n            {\r\n                values: this.createFilterInputs(entityConfig.fieldNames),\r\n                disabled: true\r\n            }\r\n        ];\r\n\r\n\r\n        const entities = this.props.entitiesData.entities;\r\n        const idField = entityConfig.id;\r\n\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const entity = entities[i];\r\n            let rowValues = [];\r\n            for (let j = 0; j < entityConfig.fieldNames.length; j++) {\r\n                const fieldItem = entityConfig.fieldNames[j];\r\n                let entityProp = fieldItem.name;\r\n                let object = false\r\n\r\n                if (entityProp.split(\".\").length > 1) {\r\n                    entityProp = entityProp.split(\".\")[0];\r\n                    object = true;\r\n                }\r\n\r\n                let entityValue = entity[entityProp];\r\n                if (fieldItem.type) {\r\n                    if (fieldItem.type == \"number\") {\r\n                        entityValue = stringUtil.beautifyNominal(entityValue);\r\n                    } else if (fieldItem.type == \"link\") {\r\n                        entityValue = <a href={entityValue}><u>{entityValue}</u></a>\r\n                    } else if (fieldItem.type == \"image\") {\r\n                        entityValue = <img width=\"60\" height=\"60\" alt={url.baseImageUrl + entityValue} src={url.baseImageUrl + entityValue} />\r\n                    } else if (fieldItem.type == \"imageMultiple\") {\r\n                        let imgName = entityValue.split(\"~\")[0];\r\n\r\n                        entityValue = <img width=\"60\" height=\"60\" src={url.baseImageUrl + imgName} />\r\n                    } else if (fieldItem.type == \"longDate\") {\r\n                        const dateStr = new Date(entityValue).toDateString();\r\n                        entityValue = <Label text={dateStr} />;\r\n                    } else if (fieldItem.type == \"staticDropdown\") {\r\n                        const options = fieldItem.options;\r\n\r\n                        options.forEach(opt => {\r\n                            if (opt.value == entityValue) {\r\n                                entityValue = opt.text;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                rowValues.push(object && entityValue ? entityValue[fieldItem.name.split(\".\")[1]] : entityValue);\r\n            }\r\n\r\n            rows.push(\r\n                {\r\n                    identifier: entity[idField],\r\n                    values: rowValues,\r\n                    handleDelete: this.handleDelete,\r\n                    handleEdit: this.handleEdit,\r\n                    disabled: entityConfig.disabled == true ? true : false\r\n                }\r\n            )\r\n        }\r\n\r\n        const buttonsData = this.createNavButtons();\r\n        const fixButtonData = new Array();\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + -1) },\r\n            text: 'previous'\r\n        })\r\n\r\n        for (let i = 0; i < buttonsData.length; i++) {\r\n            buttonsData[i].onClick = () => { this.goToPage(buttonsData[i].value) }\r\n            if (buttonsData[i].value == this.props.currentPage) {\r\n                buttonsData[i].status = \" btn-active\";\r\n            }\r\n            buttonsData[i].text = buttonsData[i].text;\r\n\r\n\r\n            fixButtonData.push(buttonsData[i]);\r\n        }\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + 1) },\r\n            text: 'next'\r\n        });\r\n\r\n        let navButtons = <ActionButtons style={{\r\n            backgroundColor: 'white',\r\n            paddingTop: '15px',\r\n            margin: '10px'\r\n        }} buttonsData={fixButtonData} />\r\n\r\n        let entityTable = <div className=\"entity-list-container\">\r\n\r\n            <InstantTable\r\n                style={{\r\n                    width: \"100%\",\r\n                    margin: \"5px\",\r\n                }}\r\n                rows={rows} />\r\n        </div>\r\n\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <div className=\"entity-container\">\r\n                    <div style={{\r\n                        backgroundColor: 'white',\r\n                        margin: '10px'\r\n                    }} > </div>\r\n                    {navButtons}\r\n                    <div className=\"entityForm\">\r\n                        <EntityForm\r\n                            addNew={this.props.addNew}\r\n                            app={this.props.app}\r\n                            updateEntity={this.props.updateEntity}\r\n                            removeManagedEntity={this.props.removeManagedEntity}\r\n                            managedEntity={this.props.managedEntity}\r\n                            entityConfig={entityConfig} />\r\n                    </div>\r\n                    {entityTable}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntityList;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Management.css'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ContentTitle from '../layout/ContentTitle' \r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport EntityList from './EntityList';\r\nimport Tab from '../buttons/Tab';\r\n\r\nclass Management extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entityList: [],\r\n            currentPage: 0,\r\n            entityConfig: { name: \"\" }\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.getEntityInPage(this.state.entityConfig, this.state.currentPage);\r\n        }\r\n\r\n        this.loadEntityManagement = (config) => {\r\n            this.props.removeManagedEntity();\r\n            this.setState({ currentPage: 0, entityConfig: config });\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n        }\r\n\r\n        this.getEntityInPage = (config, page) => {\r\n            this.setState({ currentPage: page });\r\n\r\n            const request = {\r\n                entityName: config.entityName,\r\n                page: page,\r\n                limit: 10,\r\n                entityConfig: config,\r\n                fieldsFilter: config.filter,\r\n                orderBy: config.orderBy,\r\n                orderType: config.orderType,\r\n            };\r\n\r\n            console.log(\"REQUEST: \", request)\r\n\r\n            this.props.getEntities(request, this.props.app);\r\n        }\r\n\r\n        this.checkIfCurrentMenuName = (name) => {\r\n            return this.state.entityConfig.entityName == name || (this.props.entitiesData.entityConfig && this.props.entitiesData.entityConfig.entityName == name);\r\n        }\r\n\r\n        this.getButtonsData = () => {\r\n            return [\r\n                {\r\n                    text: \"Badan Pengurus\",\r\n                    active: this.checkIfCurrentMenuName(\"division\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.divisionConfig) }\r\n                },\r\n                {\r\n                    text: \"Divisi\",\r\n                    active: this.checkIfCurrentMenuName(\"section\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.sectionConfig) }\r\n                },\r\n                {\r\n                    text: \"Program Kerja\",\r\n                    active: this.checkIfCurrentMenuName(\"program\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.programConfig) }\r\n                },\r\n                {\r\n                    text: \"Kegiatan\",\r\n                    active: this.checkIfCurrentMenuName(\"event\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.eventConfig) }\r\n                },\r\n                {\r\n                    text: \"Posisi\",\r\n                    active: this.checkIfCurrentMenuName(\"position\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.positionConfig) }\r\n                },\r\n                {\r\n                    text: \"Anggota\",\r\n                    active: this.checkIfCurrentMenuName(\"member\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.memberConfig) }\r\n                },  \r\n            ];\r\n        }\r\n\r\n        this.updateEntity = (name, entity, flag) => {\r\n            if (!window.confirm(\"Are you sure will update \" + name + \"?\")) {\r\n                return;\r\n            }\r\n\r\n            let newRecord = flag == \"addNew\";\r\n\r\n            this.props.updateEntity({ entityName: name, entity: entity, isNewRecord: newRecord }, this, function (ref) {\r\n                console.log(\"WILL CALLBACK\");\r\n                ref.callbackHandleUpdate();\r\n            });\r\n        }\r\n\r\n        this.getEntityById = (name, id) => {\r\n            this.props.getEntityById(name, id, this.props.app);\r\n        }\r\n        this.removeManagedEntity = () => {\r\n            this.props.removeManagedEntity();\r\n        }\r\n\r\n        this.callbackHandleUpdate = () => {\r\n            this.refresh();\r\n            this.removeManagedEntity();\r\n           \r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Management\";\r\n        this.props.setMenuCode(\"management\");\r\n    }\r\n\r\n    render() {\r\n        console.log(\"managedEntity: \",this.props.managedEntity);\r\n        let entityList = this.props.entitiesData ? this.props.entitiesData.entities : [];\r\n        if (null == entityList) { entityList = []; }\r\n\r\n        let buttonsData = this.getButtonsData();\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title={\"Management \" + (this.state.entityConfig.title ?\r\n                    this.state.entityConfig.title :\r\n                    this.props.entitiesData && this.props.entitiesData.entityConfig ?\r\n                        this.props.entitiesData.entityConfig.title : \"\")}\r\n                        \r\n                        description=\"manage master data\"/>\r\n                <div className=\"management-container\">\r\n                    <Tab tabsData={buttonsData} />\r\n                    <EntityList currentPage={this.state.currentPage}\r\n                        app={this.props.app}\r\n                        getEntityInPage={this.getEntityInPage}\r\n                        entityConfig={this.props.entitiesData.entityConfig}\r\n                        entitiesData={this.props.entitiesData}\r\n                        managedEntity={this.props.managedEntity}\r\n                        getEntityById={this.getEntityById}\r\n                        removeManagedEntity={this.removeManagedEntity}\r\n                        updateEntity={this.updateEntity}\r\n                        addNew={this.props.addNew}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        entitiesData: state.managementState.entitiesData,\r\n        managedEntity: state.managementState.managedEntity,\r\n        addNew: state.managementState.addNew\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEntityById: (name, id, app) => {\r\n        let action = actions.getEntityById(name, id, app);\r\n        dispatch(action);\r\n    },\r\n    removeManagedEntity: () => dispatch(actions.removeManagedEntity()),\r\n    updateEntity: (request, referer, callback) => dispatch(actions.updateEntity(request, referer, callback))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Management))","\nimport React, { Component } from 'react'; \nimport './App.css';\n\nimport Header from './components/layout/Header'\nimport Menu from './components/buttons/Menu'\nimport Home from './components/pages/Home'\nimport About from './components/pages/About'\nimport {  Route, Link, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'  \nimport Login from './components/pages/Login';\nimport Dashboard from './components/pages/Dashboard';\nimport * as menus from './constant/Menus'\nimport Message from './components/Message';\nimport Footer from './components/layout/Footer';\nimport SockJsClient from 'react-stomp';\nimport ChatRoom from './components/pages/ChatRoom';\nimport Management from './components/pages/Management'; \n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      detailMode: false,\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      enableShopping: false,\n      mainAppUpdated:new Date()\n    };\n\n    this.setDetailMode = (detailMode) => {\n      this.setState({ detailMode: detailMode });\n    }\n\n    this.setMenuCode = (code) => { \n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.setEnableShopping = (val) => {\n      this.setState({ enableShopping: val })\n    }\n\n    this.handleMenuCLick = (menu) => {\n      switch (menu.code) {\n\n        case menus.LOGOUT:\n          if (!window.confirm(\"Are you sure want to logout?\")) {\n            return;\n          }\n          this.props.performLogout(this);\n          break;\n\n        default:\n          break;\n      }\n\n\n    }\n\n\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n\n    this.startLoading = (realtime) => {\n      this.setState({ loading: true, realtime: realtime });\n    }\n    this.endLoading = () => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }\n\n    this.handleMessage = (msg) => {\n      let percentage = Math.floor(msg.percentage);\n      if (msg.percentage < 0 || msg.percentage > 100) {\n        this.endLoading();\n      }\n      this.setState({ loadingPercentage: percentage });\n    }\n  }\n\n\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      localStorage.setItem(\"requestId\", this.props.requestId);\n      this.props.refreshLogin();\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    let additionalMenus = this.props.menus\n    let menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      let menu = additionalMenus[i];\n\n      if(!this.state.enableShopping && menu.code == 'cart')\n        continue;\n\n      if (this.props.loginStatus != true && menu.authenticated == true)\n        continue;\n\n      menus.push(menu);\n\n    }\n \n    return menus;\n\n  }\n\n  render() {\n\n    const header =  <Header app={this} title=\"MPI Monitoring\"   />;\n\n    if (!this.state.requestId) {\n      return (\n        <div>\n          {header}\n          Please wait..\n        </div>\n      )\n    }\n\n    let loginComponent = <Login main={this} setMenuCode={this.setMenuCode}\n      setDetailMode={this.setDetailMode}\n      detailMode={this.state.detailMode}\n      doLogin={this.props.performLogin}\n      loginFailed={this.props.loginFailed}\n      loginAttempt={this.props.loginAttempt}\n      loginStatus={this.props.loginStatus}\n    />;\n\n    let loadingComponent = \"\";\n    if (this.state.loading == true) {\n      loadingComponent = <Message realtime={this.state.realtime} progress={this.state.loadingPercentage} text=\"Please wait...\" type=\"loading\" />;\n    }\n\n    let menus = this.setMenus();\n \n    let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\n    let localHost = \"http://localhost:8080/universal-good-shop/\";\n    const usedHost = localHost;\n    return (\n      <div className=\"App\">\n        {loadingComponent}\n        {header}\n        {/*this.props.loginStatus == true?\"Logged In\":\"Un Logged\"*/}\n      \n        <div id=\"main-layout\">\n          <div id=\"main-menu\">\n            <Menu loggedUser={this.props.loggedUser}\n              division = {this.props.division}\n              handleMenuCLick={this.handleMenuCLick}\n              activeCode={this.state.menuCode}\n              menus={menus} />\n          </div>\n         \n          <div id=\"main-content\" > \n            <Switch>\n              <Route exact path=\"/\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is default page\" />\n              } />\n              <Route exact path=\"/home\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is home page\" />\n              } />\n              \n              <Route exact path=\"/chatroom\" render={\n                (renderProps) =>\n                  <ChatRoom app={this} setMenuCode={this.setMenuCode} />\n              } />\n              <Route exact path=\"/about\" render={\n                (renderProps) =>\n                  <About setMenuCode={this.setMenuCode} />\n              }></Route>\n               \n               <Route exact path=\"/login\" render={\n                (renderProps) => loginComponent\n\n              }></Route>\n\n              {/*\n                     =============================\n                     ======== need login =========\n                     =============================\n                     */}\n              <Route exact path=\"/dashboard\" render={\n                (renderProps) =>\n                  <Dashboard app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n               <Route exact path=\"/management\" render={\n                (renderProps) =>\n                  <Management app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n            </Switch>\n           \n          </div>\n         \n        </div>\n        <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/progress']}\n          onMessage={(msg) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    entities: state.shopState.entities,\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    loginKey: state.userState.loginStatus,\n    loginFailed: state.userState.loginFailed,\n    menus: state.userState.menus,\n    loggedUser: state.userState.loggedUser,\n    loginAttempt: state.userState.loginAttempt,\n    requestId: state.userState.requestId,\n    division: state.userState.division,\n    cart: state.shopState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogin: (username, password, app) => dispatch(actions.performLogin(username, password, app)),\n  performLogout: (app) => dispatch(actions.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus())\n  // getProductCatalog: (page) => dispatch(actions.getProductList(page))\n\n})\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = {\r\n    catalogData: {},\r\n    entities: [],\r\n    entity: {},\r\n    categories: [],\r\n    suppliersData: [], \r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_PRODUCT_LIST:\r\n            return { ...state, catalogData: action.payload };\r\n        case types.FETCH_PRODUCT_DETAIL:\r\n            return { ...state, entity: action.payload.entities[0] };\r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ };\r\n        case types.FETCH_SUPPLIER_LIST:\r\n            return { ...state, suppliersData: action.payload };\r\n        case types.RESET_SUPPLIERS:\r\n            return { ...state, suppliersData: {} };\r\n        case types.LOAD_MORE_SUPPLIER:\r\n            let currentProduct = state.entity;\r\n            let loadedSupplier = action.payload.entities;\r\n            for (let index = 0; index < loadedSupplier.length; index++) {\r\n                currentProduct.suppliers.push(loadedSupplier[index]);\r\n            }\r\n            console.info(\"additinal suppliers: \", currentProduct.suppliers);\r\n            action.referrer.refresh();\r\n            return { ...state, entity: currentProduct };\r\n        case types.FETCH_PRODUCT_CATEGORIES_ALL:\r\n            return { ...state, categories: action.payload.entities };\r\n      \r\n        case types.SEND_MESSAGE:\r\n            return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.UPDATE_CART:\r\n            if (action.payload.app) {\r\n                action.payload.app.refresh();\r\n            }\r\n            return { ...state, cart: action.payload.cart };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nexport const menus = [\r\n  {\r\n    code:\"home\",\r\n    name:\"Home\",\r\n    url:\"home\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"catalog\",\r\n    name:\"Catalog\",\r\n    url:\"catalog\",\r\n    active: false,\r\n     authenticated: false\r\n  } ,\r\n  {\r\n    code:\"about\",\r\n    name:\"About\",\r\n    url:\"about\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"chatroom\",\r\n    name:\"Chat Room\",\r\n    url:\"chatroom\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"login\",\r\n    name:\"Login\",\r\n    url:\"login\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"dashboard\",\r\n    name:\"Dashboard\",\r\n    url:\"dashboard\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"management\",\r\n    name:\"Management\",\r\n    url:\"management\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"logout\",\r\n    name:\"Logout\",\r\n    url:\"#\",\r\n    active: false,\r\n    authenticated: true\r\n  }\r\n];\r\n","import * as types from './types'\r\nimport * as menus from '../utils/HardCodedEntites'\r\nimport * as menuCodes from '../constant/Menus'\r\nimport { initialState } from './reducers';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menus.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    divisions: null,\r\n    division: null,\r\n    requestId: null\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    let updatedMenus = new Array();\r\n    if (action.payload) {\r\n\r\n        let loggedIn = action.payload && action.payload.loginStatus == true;\r\n        for (let index = 0; index < menus.menus.length; index++) {\r\n            const menu = menus.menus[index];\r\n            if (loggedIn && menu.code == menuCodes.LOGIN) { continue; }\r\n\r\n            if (menu.authenticated == false) {\r\n                updatedMenus.push(menu);\r\n            } else {\r\n                if (loggedIn) { updatedMenus.push(menu); }\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case types.DO_LOGIN:\r\n            let result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                localStorage.setItem(\"loginKey\", result.loginKey);\r\n                localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n                result.divisions = action.payload.divisions\r\n            }\r\n\r\n            console.log(\"logged user: \", result.loggedUser);\r\n            return result;\r\n        case types.REQUEST_ID:\r\n            result = { ...state, requestId: action.payload.message };\r\n\r\n            if (!action.payload.loggedIn) {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }else{\r\n                if(action.payload.sessionData){\r\n                    result.division = action.payload.sessionData.Division\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                division:null,\r\n                loggedUser: null\r\n            };\r\n            localStorage.removeItem(\"loginKey\");\r\n            localStorage.removeItem(\"loggedUser\");\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            return result;\r\n        case types.GET_DIVISIONS:\r\n            result = {\r\n                ...state,\r\n                divisions: action.payload.divisions,\r\n            };\r\n            return result;\r\n        case types.SELECT_DIVISION:\r\n            result = {\r\n                ...state,\r\n                division: action.payload.entity,\r\n            };\r\n            return result;\r\n        default:\r\n            if (action.payload && action.payload.loginStatus != null)\r\n                return { ...state, menus: updatedMenus };\r\n            else {\r\n                return { ...state };\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport { nullLiteral } from '@babel/types';\r\n\r\nexport const initState = {\r\n    productFlowStock: null,\r\n    productFlowStocks: null,\r\n    transactionData: null,\r\n    successTransaction: false,\r\n    customersData: null,\r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n\r\n    switch (action.type) { \r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as entityUtil from '../utils/EntityConfigurations'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    events: [],\r\n    addNew: false\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, addNew: false, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, addNew: false, managedEntity: null };\r\n        case types.GET_EVENTS_BY_DATE:\r\n\r\n            if (action.payload.entities)\r\n                return { ...state, events: action.payload.entities };\r\n        case types.ADD_EVENT_FROM_TIMELINE:\r\n\r\n            console.log(\"PAYLOAD:\", action.payload);\r\n            return { ...state, addNew: true, managedEntity: action.payload.entity, entitiesData: { entityConfig: entityUtil.eventConfig } };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\"\r\nimport * as managementReducer from \"./managementReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer,\r\n        managementState: managementReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState,\r\n    managementState: managementReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as actionCreator from './actionCreators';\r\nimport * as types from './types';\r\nimport * as config from '../utils/WebConfig'\r\nimport * as stringUtil from '../utils/StringUtil';\r\n\r\nconst commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\")\r\n    }\r\n};\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            getProductListMiddleware,\r\n            getProductDetailMiddleWare,\r\n            removeEntityMiddleware,\r\n            loadMoreSupplierMiddleware,\r\n            getAllProductCategoriesMiddleware,\r\n            getSupplierListMiddleware,\r\n\r\n            //user related\r\n            performLoginMiddleware,\r\n            performLogoutMiddleware,\r\n            refreshLoginStatusMiddleware,\r\n            getDivisionsMiddleware,\r\n\r\n            //transaction  \r\n            resetPurchaseTransactionMiddleware,\r\n            selectDivisionMiddleware,\r\n            getEventByDateMiddleware,\r\n            resetProductsMiddleware,\r\n            resetSuppliersMiddleware,\r\n            resetCustomersMiddleware,\r\n            getProductStocksMiddleware,\r\n            resetProductStocksMiddleware,\r\n            getProductSalesDetailMiddleware,\r\n            requestAppIdMiddleware,\r\n            sendChatMessageMiddleware,\r\n            storeChatMessageLocallyMiddleware,\r\n            getMessagesMiddleware,\r\n            updateCartMiddleware,\r\n\r\n            /*enntity management*/\r\n            getEntityListMiddleware,\r\n            getEntityByIdMiddleware,\r\n            updateEntityMiddleware,\r\n            removeManagedEntityMiddleware,\r\n            addEventFromTimelineMiddleware,\r\n\r\n            getEntitiesWithCallbackMiddleware\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\nconst getEntitiesWithCallbackMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_WITH_CALLBACK) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n\r\n            action.meta.callback(data, action.meta.referer);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst updateEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_ENTITY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response updateEntityMiddleware:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error Update Entity!\");\r\n                return;\r\n            }\r\n            alert(\"Update Success!\");\r\n            const callback = action.meta.callback;\r\n            const referer = action.meta.referer;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            callback(referer);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityByIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_BY_ID) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                data.entitie = [];\r\n            }\r\n            data.entityConfig = action.meta.entityConfig;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst sendChatMessageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SEND_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            data.username = action.payload.username;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst addEventFromTimelineMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.ADD_EVENT_FROM_TIMELINE) { return next(action); }\r\n\r\n    let eventEntity = {\r\n        date: stringUtil.dateInputVal(action.payload.day, action.payload.month, action.payload.year)\r\n    };\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entity: eventEntity } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst removeManagedEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_MANAGED_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = commonAuthorizedHeader();\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            data = (data);\r\n\r\n\r\n\r\n            console.debug(config.debugMode(), \"requestAppIdMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.error(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductStocksMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_STOCKS) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'requestId': localStorage.getItem(\"requestId\"),\r\n            'loginKey': localStorage.getItem(\"loginKey\")\r\n        }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getEventByDateMiddleware Response:\", data, \"load more:\", action.meta.loadMore);\r\n            if (data.code != \"00\") {\r\n                alert(\"Data not found\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductSalesDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductSalesDetailMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEventByDateMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_EVENTS_BY_DATE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            data = (data);\r\n\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst selectDivisionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SELECT_DIVISION) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"selectDivisionMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getDivisionsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_DIVISIONS) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"getDivisionsMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            if (data.divisions == null) {\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductListTrxMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_LIST_TRX) { return next(action); }\r\n\r\n    if (action.payload.filter.fieldsFilter.name == null || action.payload.filter.fieldsFilter.name.trim() == \"\") {\r\n        let newAction = Object.assign({}, action, {\r\n            payload: { entities: [] }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    } else\r\n        fetch(action.meta.url, {\r\n            method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.debug(\"getProductListTrxMiddleware Response:\", data);\r\n                if (data.entities == null || data.entities.length == 0) {\r\n                    alert(\"Data not found!\");\r\n                    return;\r\n                }\r\n                let newAction = Object.assign({}, action, { payload: data });\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n            .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getCustomerListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_CUSTOMER_LIST) { return next(action); }\r\n\r\n    if (action.payload.filter.fieldsFilter.name == null || action.payload.filter.fieldsFilter.name.trim() == \"\") {\r\n        let newAction = Object.assign({}, action, {\r\n            payload: { entities: [] }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    } else\r\n        fetch(action.meta.url, {\r\n            method: POST_METHOD,\r\n            body: JSON.stringify(action.payload),\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.debug(\"Response:\", data);\r\n                if (data.entities == null || data.entities.length == 0) {\r\n                    alert(\"Data not found!\");\r\n                    return;\r\n                }\r\n                let newAction = Object.assign({}, action, { payload: data });\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n            .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst resetProductStocksMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCT_STOCKS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetCustomersMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_CUSTOMERS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetProductsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCTS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\nconst resetSuppliersMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_SUPPLIERS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetPurchaseTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_TRX_PURCHASE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst submitSupplyTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SUBMIT_TRX_SUPPLY) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Transaction Failed!\");\r\n                return;\r\n            }\r\n            alert(\"Transaction Success!\")\r\n            data.transaction.productFlows = action.payload.productFlows;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst submitPurchaseTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SUBMIT_TRX_PURCHASE) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Transaction Failed!\");\r\n                return;\r\n            }\r\n            alert(\"Transaction Success!\")\r\n            data.transaction.productFlows = action.payload.productFlows;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getStockInfoMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_STOCK_INFO) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.productFlowStock == null) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data.productFlowStock\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getSupplierListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_SUPPLIER_LIST) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => { \r\n            responseJson = (responseJson);\r\n\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            responseJson = (responseJson );\r\n\r\n            let loginKey = \"\";\r\n            let loginSuccess = false;\r\n\r\n            if (responseJson.code != null && responseJson.code == \"00\") {\r\n                for (var pair of response.headers.entries()) {\r\n                    if (pair[0] == \"loginkey\") {\r\n                        loginKey = pair[1];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                loginSuccess = true;\r\n\r\n            }\r\n\r\n            console.log(\"LOGIN SUCCESS: \", loginSuccess);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user,\r\n                    divisions: responseJson.divisions,\r\n                    division: responseJson.sessionData ? responseJson.sessionData.division : null\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    }\r\n\r\n    let loggedUser = null;\r\n    if (localStorage.getItem(\"loggedUser\")) {\r\n        loggedUser = (localStorage.getItem(\"loggedUser\"));\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload: {\r\n            loginStatus: loggedUser ? true : false,\r\n            loginKey: localStorage.getItem(\"loginKey\"),\r\n            loggedUser: loggedUser\r\n        }\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst getAllProductCategoriesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_CATEGORIES_ALL) {\r\n        return next(action);\r\n    }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n}\r\n\r\nconst loadMoreSupplierMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.LOAD_MORE_SUPPLIER) {\r\n        return next(action);\r\n    }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data, referrer: action.meta.referrer\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(parap => action.meta.referrer.props.app.endLoading());\r\n\r\n}\r\n\r\nconst removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst getProductDetailMiddleWare = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_DETAIL) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => app.endLoading());\r\n}\r\n\r\nconst getProductListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_LIST) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}