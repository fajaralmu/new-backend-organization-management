{"version":3,"sources":["components/layout/GridComponent.js","utils/StringUtil.js","components/buttons/ToggleButton.js","utils/WebConfig.js","components/layout/Header.js","constant/Url.js","components/buttons/Menu.js","constant/Menus.js","components/layout/ContentTitle.js","components/pages/Home.js","components/buttons/ActionButtons.js","components/CrudRow.js","components/layout/InstantTable.js","components/pages/About.js","redux/actionCreators.js","redux/types.js","utils/ComponentUtil.js","components/input/InputField.js","components/buttons/ActionButton.js","components/Label.js","components/Message.js","components/pages/Login.js","components/buttons/Tab.js","components/input/ComboBox.js","components/pages/DashboardMain.js","constant/TimelineConstant.js","components/card/Card.js","components/pages/FullCalendar.js","utils/EntityConfigurations.js","components/pages/Timeline.js","components/pages/Dashboard.js","components/layout/Footer.js","components/ChatList.js","components/pages/ChatRoom.js","components/input/DropdownItem.js","components/input/InputDropdown.js","components/input/InputFile.js","components/input/InputFileMultiple.js","components/pages/EntityForm.js","components/pages/EntityList.js","components/pages/Management.js","App.js","redux/shopReducer.js","utils/HardCodedEntites.js","redux/userReducer.js","redux/transactionReducer.js","redux/managementReducer.js","redux/reducers.js","redux/configureStore.js","constant/ResponseCode.js","Root.js","serviceWorker.js","index.js"],"names":["GridComponent","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","items","width","repeat","cols","length","gridAutoColumns","react_default","a","createElement","style","objectSpread","display","verticalAlign","gridTemplateColumns","map","item","Component","index","uniqueId","string","Date","getUTCMilliseconds","beautifyNominal","val","nominal","result","zero","i","isNonNullArrayWithIndex","array","months","ToggleButton","_this","state","active","onClick","e","setState","outerClass","innerClass","fontSize","layout_GridComponent","key","className","text","debugMode","console","log","localStorage","getItem","Header","handleClick","setItem","app","componentDidMount","isDebugMode","title","buttons_ToggleButton","rootValue","document","getElementById","value","hostLocal","concat","hostCloud","baseImageUrl","config","logoUrl","url","Menu","userLink","divisionInfo","division","name","loggedUser","id","appIcon","src","renderedMenus","icon","menus","handleMenuCLick","activeCode","code","Link","to","LOGOUT","ContentTitle","description","Home","setMenuCode","layout_ContentTitle","content","ActionButtons","buttonsData","buttonData","status","stringUtil","CrudRow","handleEdit","identifier","handleDelete","values","Array","newValues","CS","RS","colspan","rowspan","push","trStyle","borderTop","actionButton","buttons_ActionButtons","disabled","valign","CrudRow_Cells","Cells","rowSpan","colSpan","InstantTable","rows","tableStyle","row","components_CrudRow","About","padding","fontFamily","margin","layout_InstantTable","usedHost","apiEntityBaseUrl","apiAccount","apiAdmin","getEntityList","request","startLoading","type","payload","entity","entityName","filter","limit","page","fieldsFilter","orderBy","orderType","meta","entityConfig","_byId","createNavButtons","totalButton","currentPage","Math","ceil","min","max","InputField","handleKeyup","onKeyUp","target","onChange","placeholder","inputField","checked","ActionButton","Label","Message","timer","intervalId","update","clearInterval","endMessage","withTimer","setInterval","messageText","msgStyle","realtime","floor","progress","textAlign","Login","username","password","showMessageLoginFailed","handleUsername","handlePassword","doLogin","main","validateLoginStatus","loginStatus","history","message","loginFailed","components_Message","components_Label","input_InputField","buttons_ActionButton","withRouter","Tab","tabsData","autoColumns","gap","borderBottom","tabData","React","ComboBox","handleOnChange","options","defaultValue","option","DashboardMain","onDivisionListChange","divisionId","selectDivision","divionOptions","divisions","forEach","input_ComboBox","month","day","Card","titleStyle","height","backgroundRepeat","backgroundColor","backgroundImage","backgroundSize","FullCalendar","selectedMonth","getMonth","inputYearValue","getFullYear","activeId","selectedDay","calendarData","days","month_now","begin","week","dayCount","info","begin_old","year_now","input_month","date_info","running_month","running_year","filterDayId","filterMonthId","dateFormId","entity_Name","entity_Prop","setSelectedMonth","refresh","changeInputYear","createTable","r","getEventByDate","year","getEventDetail","updateFields","focus","loadCalendar","dateID","filterStr","fillDay","setCalendar","updated","doSetCalendar","diff_year","abs","monthCount","less","current_month","endMonth","begin_month","b","prevMonth","m","nextMonth","fillInfo","timeLineConstant","detail","doPrevMonth","prev","begin_prev","findBegin","switch_","doNextMonth","next","begin_old_","totalday","M","begin_prev_","D","val2","data","getDate","getYear","now","strDate","dateAcceptableForHtmlInput","addZero","Val","Min","N","String","MinStr","ValLength","Diff","clear","begin_new","week_","day_","isNow","d","setElementByAttr","_this2","selectedYear","totalCalendarData","element","minHeight","marginBottom","events","eventList","event","card_Card","TYPE_LONG_DATE","TYPE_DATE","divisionConfig","fieldNames","lableName","formData","inputType","reffEntity","idField","displayField","sectionConfig","programConfig","eventStatus","eventConfig","positionConfig","memberConfig","Timeline","detailView","detailEvents","date","addEvent","getEntities","addEventFromTimeline","y","eventDate","toString","done","location","participant","eventCard","pages_FullCalendar","connect","managementState","userState","dispatch","actions","Dashboard","getButtonsData","menu","getDivisons","pages_DashboardMain","pages_Timeline","buttons_Tab","Footer","version","ChatItem","admin","sender","senderComponent","marginLeft","float","color","ChatRoom","messages","sendChatMessage","alert","handleMessage","response","storeChatMessageLocally","entities","changeUsername","getMessages","userAlias","shopState","DropdownItem","hover","innerHTML","onHover","unHover","onMouseLeave","onMouseOver","InputDropdown","hoverIndex","onBlur","onSelect","dataValue","dropdownList","dropdownComponent","input_DropdownItem","onFocus","InputFile","base64Data","file","referer","callback","reader","FileReader","readAsDataURL","files","onload","onerror","error","componentUtil","assertThisInitialized","removeImage","displayImage","trim","accept","InputFileMultiple","handleAddMoreFile","addMoreImage","inputFields","inputFilesData","inputFileData","input_InputFile","base64","includes","inputId","EntityForm","managedEntity","formValues","dropdownValues","selectedEntities","base64DataMultiple","validateEntity","formDataItem","getFormDataItemStartWith","arrayOfValues","split","resultValue","updatedValue","join","handleSubmit","addFromOtherPage","addNew","updateEntity","focusActiveId","propName","updateSelectedEntity","removeManagedEntity","populateDropdown","entityname","fieldname","fieldvalue","fieldName","fieldValue","getEntitiesWithCallback","onKeyUpDynamicDropdown","populateDropdownValues","currentDropdownValue","getFormDataItem","getSelectedDropdownItem","formDataList","currentValue","handleRemoveImage","handleChangeBase64Image","handleChangeBase64MultipleImage","propNameRaw","removeElementAtPosition","handleRemoveMultipleImage","newArrayValue","selectFromDynamicDropdown","currentDropdownList","selectedOption","displayPropName","handleStaticDropdownChange","entityExist","actionButtons","formFields","parentPropName","valueAsObject","objectPropName","inputComponent","input_InputDropdown","valueSplit","imagesData","_loop","valueSplitItem","input_InputFileMultiple","requested","entryPoint","EntityList","window","confirm","getEntityById","getHeaderNames","headers","backToDashboard","headerName","toUpperCase","goToPage","orderObject","entitiesData","totalData","getEntityInPage","setOrderBy","createFilterInputs","inputs","input","handleFilterChange","valueDay","valueMonth","valueYear","inputDay","inputMonth","inputYear","orderButton","fontWeight","rowValues","_loop2","j","fieldItem","entityProp","object","entityValue","href","alt","imgName","dateStr","toDateString","opt","fixButtonData","_loop3","navButtons","paddingTop","entityTable","pages_EntityForm","Management","entityList","loadEntityManagement","setEntityConfig","gotoMainPage","resetManagementPage","checkIfCurrentMenuName","flag","newRecord","isNewRecord","ref","callbackHandleUpdate","pages_EntityList","action","exacts","contains","App","detailMode","menuCode","loading","loadingPercentage","requestId","enableShopping","mainAppUpdated","setDetailMode","setEnableShopping","performLogout","requestAppId","endLoading","msg","percentage","refreshLogin","additionalMenus","authenticated","header","layout_Header","loginComponent","pages_Login","performLogin","loginAttempt","loadingComponent","setMenus","buttons_Menu","Switch","Route","exact","path","render","renderProps","pages_Home","pages_ChatRoom","pages_About","pages_Dashboard","pages_Management","client_default","topics","onMessage","client","clientRef","layout_Footer","loginKey","cart","user","initState","catalogData","categories","suppliersData","getTime","reducer","arguments","undefined","updatedMenus","loggedIn","JSON","stringify","sessionData","removeItem","invalidSession","productFlowStock","productFlowStocks","transactionData","successTransaction","customersData","productsData","cashflowInfoOut","cashflowInfoIn","cashflowDetail","productSalesData","productSalesDetails","transactionYears","eventsData","entityUtil","rootReducer","combineReducers","shopReducer","userReducer","transactionState","transactionReducer","managementReducer","initialState","commonAuthorizedHeader","Content-Type","timeout","ms","promise","Promise","resolve","reject","setTimeout","Error","then","getEntitiesWithCallbackMiddleware","store","fetch","method","body","json","newAction","assign","catch","err","finally","param","updateEntityMiddleware","debug","getEntityByIdMiddleware","getEntityListMiddleware","entitie","getMessagesMiddleware","sendChatMessageMiddleware","addEventFromTimelineMiddleware","dd","mm","yyyy","eventEntity","setEntityConfigMiddleware","storeChatMessageLocallyMiddleware","removeManagedEntityMiddleware","resetManagementPageMiddleware","requestAppIdMiddleware","getEventByDateMiddleware","selectDivisionMiddleware","getDivisionsMiddleware","performLogoutMiddleware","all","_ref","_ref2","slicedToArray","responseJson","logoutSuccess","performLoginMiddleware","_ref3","_ref4","loginSuccess","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","pair","return","refreshLoginStatusMiddleware","parse","removeEntityMiddleware","configureStore","createStore","applyMiddleware","Root","es","HashRouter","src_App_0","Boolean","hostname","match","ReactDOM","src_Root","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7a120aa.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass GridComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let items = [];\r\n        if (this.props.items) {\r\n            items = this.props.items;\r\n        }\r\n        const width = this.props.width?this.props.width : \"auto \";\r\n        const repeat = this.props.cols ? this.props.cols : items.length;\r\n        const gridAutoColumns = width.repeat(repeat);\r\n\r\n       \r\n        return (\r\n            <div style={{ ...this.props.style, display: 'grid',   verticalAlign: 'middle', gridTemplateColumns: gridAutoColumns }} >\r\n                {items.map(item => {\r\n                    return item;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GridComponent;","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tlet nominal = \"\" + val;\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"...\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\n\r\nexport const dateInputVal = function (dd, mm, yyyy) {\r\n \r\n\tlet month = +mm < 10 ? \"0\" + mm : mm;\r\n\tlet day = +dd < 10 ? \"0\" + dd : dd;\r\n\r\n\treturn yyyy + \"-\" + month + \"-\" + day;\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Button.css'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\nclass ToggleButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active:false\r\n        }\r\n\r\n        this.onClick = (e) => {\r\n            this.setState({active:!this.state.active})\r\n            if(this.props.onClick){\r\n                this.props.onClick(e);\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let outerClass = \"toggle-outer\";\r\n        let innerClass = \"toggle-inner\";\r\n\r\n        if(!this.props.active || this.props.active==false){\r\n            outerClass+=\" outer-inactive\";\r\n            innerClass+=\" inner-inactive\";\r\n        }\r\n\r\n        return (\r\n            <div style={{fontSize:'13px'}}>\r\n                <GridComponent items={[\r\n                    <div key={uniqueId()} onClick={this.onClick} className={outerClass}>\r\n                        <div  className={innerClass} ></div></div>,\r\n                    <span  key={uniqueId()}>{this.props.text}</span>\r\n                ]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleButton;","export const debugMode = () => {\r\n    console.log(\"localStorage.getItem(\\\"debugMode\\\")\",localStorage.getItem(\"debugMode\"));\r\n    return localStorage.getItem(\"debugMode\") && localStorage.getItem(\"debugMode\") == \"true\";\r\n}","import React, { Component } from 'react';\r\nimport '../../css/Header.css'\r\nimport ToggleButton from '../buttons/ToggleButton';\r\nimport * as config from '../../utils/WebConfig'\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            debugMode:true\r\n        }\r\n        this.handleClick = (e) => {\r\n            this.setState({ debugMode: !this.state.debugMode })\r\n            if (this.state.debugMode == true) {\r\n                localStorage.setItem(\"debugMode\", \"true\");\r\n            } else {\r\n                localStorage.setItem(\"debugMode\", \"false\");\r\n            }\r\n            console.log(\"ccc localStorage.setItem(\\\"debugMode\\\")\", localStorage.getItem(\"debugMode\"));\r\n            this.props.app.componentDidMount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const debugMode =  localStorage.getItem(\"debugMode\");\r\n        const isDebugMode =  localStorage.getItem(\"debugMode\") == \"true\";\r\n        return (\r\n            <div key={uniqueId()} className=\"App-header\">\r\n                {this.props.title}\r\n                <ToggleButton active={isDebugMode} onClick={this.handleClick} text={\"Debug Mode: \"+debugMode} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import * as config from '../utils/WebConfig'\r\n \r\nconst rootValue = document.getElementById(\"rootPath\").value == \"${basePath}\" ?\r\n     \"/organization-management\" : document.getElementById(\"rootPath\").value;\r\n\r\nexport const hostLocal =\"http://localhost:8080\".concat(rootValue);\r\nexport const hostCloud = (rootValue);\r\nexport const baseImageUrl = config.debugMode()==true?hostLocal:hostCloud;\r\n ","import React, { Component } from 'react'\r\nimport '../../css/Menu.css'\r\nimport '../../css/Common.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst logoUrl = url.baseImageUrl+\"/res/img/transparent.png\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n        let userLink = \"\";\r\n        let divisionInfo = null;\r\n        if (this.props.division) {\r\n            divisionInfo = <div className=\"fill\" >{this.props.division.name} </div>;\r\n        }\r\n\r\n        if (this.props.loggedUser != null) {\r\n            userLink = <li id=\"user-link\">\r\n                <div className=\"fill\" >{\"Welcome, \" + this.props.loggedUser.name} </div>\r\n                {divisionInfo}\r\n            </li>\r\n        }\r\n\r\n        let appIcon = <li><img src={logoUrl} style={{ width: '90%' }} /></li>;\r\n\r\n        let renderedMenus = [{\r\n            icon: true,\r\n            url: logoUrl\r\n        }];\r\n\r\n\r\n        if (this.props.menus != null) {\r\n            renderedMenus = this.props.menus;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"side-menu\" >\r\n                < ul className=\"menu-ul \" >\r\n                    {appIcon}\r\n                    {userLink}\r\n                    {\r\n                        renderedMenus.map(\r\n                            e => {\r\n                                if (e.url == \"#\") {\r\n                                    return (<li onClick={() => this.props.handleMenuCLick(e)} className={this.props.activeCode == e.code ? \"active\" : \"\"} key={e.name}\r\n                                        id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                            to=\"#\" ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                    )\r\n                                }\r\n                                return (<li className={this.props.activeCode == e.code ? \"menu-active\" : \"\"} key={e.name}\r\n                                    id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                        to={e.url} ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                )\r\n                            }\r\n                        )\r\n                    } </ul>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","export const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const SUPPLIERLIST = \"supplierlist\";","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Content.css'\r\n\r\nclass ContentTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let title = this.props.title ? this.props.title : \"\";\r\n        let description = this.props.description ? this.props.description : \"\";\r\n        return (\r\n            <div className=\"content-title\">\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentTitle;","import React, { Component } from 'react'\r\nimport '../../css/Home.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nimport * as url from '../../constant/Url'\r\nconst logoUrl = url.baseImageUrl + \"/res/img/mpi.png\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Mahasiswa Pencinta Islam\";\r\n        this.props.setMenuCode(menus.HOME);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"Welcome!\" description=\r\n                    {this.props.content} />\r\n                <div className=\"article-content\">\r\n                    <h2 >Admin Console Mahasiswa Pencinta Islam</h2>\r\n                    <img src={logoUrl} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport '../../css/Button.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ActionButtons extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let className = \"action-button-wrapper\";\r\n        if(this.props.className){\r\n            className += \" \"+this.props.className;\r\n        }\r\n        return (\r\n            <div style={this.props.style ? this.props.style : {}} className={className}  >\r\n                {this.props.buttonsData.map(buttonData => {\r\n                    let className = \"action-button rounded\";\r\n                    if (buttonData.status != null) {\r\n                        className =\r\n                            className.concat(\" \").concat(buttonData.status).concat(\" \").concat(buttonData.className);\r\n                    }\r\n                    return (\r\n                        <button style={{...buttonData.style}} \r\n                        className={className} key={\"btnKey-\" + stringUtil.uniqueId()}\r\n                         onClick={buttonData.onClick}>{buttonData.text?buttonData.text:\"\"}</button>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ActionButtons;","import React, { Component } from 'react'\r\nimport ActionButtons from './buttons/ActionButtons';\r\nimport * as stringUtil from '../utils/StringUtil'\r\n\r\nclass CrudRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleEdit = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleEdit(this.props.identifier);\r\n            }\r\n        }\r\n        this.handleDelete = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleDelete(this.props.identifier);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let values = this.props.values;\r\n        const defaultRowColSpan = 1;\r\n        if (null == values) {\r\n            values = new Array();\r\n        } else {\r\n            let newValues = new Array();\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (this.props.CS || this.props.RS) {\r\n                    let colspan = stringUtil.isNonNullArrayWithIndex(this.props.CS, i) ?\r\n                        this.props.CS[i] : defaultRowColSpan;\r\n                    let rowspan = stringUtil.isNonNullArrayWithIndex(this.props.RS, i) ?\r\n                        this.props.RS[i] : defaultRowColSpan;\r\n                    newValues.push({ value: value, colspan: colspan, rowspan: rowspan });\r\n                } else\r\n                    newValues.push({ value: value });\r\n            }\r\n            values = newValues;\r\n        }\r\n\r\n        let trStyle = this.props.style ? this.props.style : {\r\n            borderTop: 'solid 1px gray',\r\n        };\r\n        let actionButton = <td style={trStyle}>\r\n            <ActionButtons buttonsData={[\r\n                {\r\n                    id: \"k-btn-edit-\" + this.props.identifier,\r\n                    status: 'warning',\r\n                    onClick: this.handleEdit,\r\n                    text: \"Edit\"\r\n                },\r\n                {\r\n                    id: \"k-btn-dlt-\" + this.props.identifier,\r\n                    status: 'danger',\r\n                    onClick: this.handleDelete,\r\n                    text: \"Delete\"\r\n                }\r\n            ]} />\r\n        </td>;\r\n\r\n        if (this.props.disabled == true) {\r\n            actionButton = null;\r\n            trStyle = this.props.style ? this.props.style : {};\r\n        }\r\n      \r\n        return (\r\n            <tr style={trStyle} key={stringUtil.uniqueId()}\r\n                valign={this.props.valign}>\r\n                <Cells values={values} trStyle={trStyle} />\r\n                {actionButton}</tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst Cells = (props) => { \r\n\r\n    let values = props.values;\r\n\r\n    return  values.map(value => { \r\n        \r\n        return (\r\n            <td key={ stringUtil.uniqueId()} id={ stringUtil.uniqueId()} \r\n                style={props.trStyle} rowSpan={value.rowspan} \r\n                colSpan={value.colspan}>\r\n                {value.value}\r\n            </td>\r\n        )\r\n    });\r\n}\r\n\r\nexport default CrudRow;","import React, { Component } from 'react'\r\nimport CrudRow from '../CrudRow';\r\nimport '../../css/Common.css'\r\nimport '../../css/InstantTable.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass InstantTable extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let rows = [];\r\n        if (this.props.rows) { rows = this.props.rows; }\r\n        let className = \"table\";\r\n        let tableStyle = this.props.style ? this.props.style : {};\r\n        if (this.props.className) {\r\n            className += \" \" + this.props.className;\r\n        }\r\n        return (\r\n            <table style={tableStyle} className={className}><tbody>\r\n                {rows.map(row => {\r\n                    let disabled = row.disabled == false? false:true;\r\n                  \r\n                    \r\n                    return (\r\n                        <CrudRow\r\n                            style={row.style}\r\n                            valign={this.props.valign ? this.props.valign : \"top\"}\r\n                            RS={row.RS}\r\n                            identifier={row.identifier ? row.identifier : \"0000\"}\r\n                            handleEdit={row.handleEdit}\r\n                            handleDelete={row.handleDelete}\r\n                            CS={row.CS}\r\n                            values={row.values ? row.values : []}\r\n                            key={stringUtil.uniqueId()}\r\n                            disabled={disabled}\r\n                        />\r\n                    )\r\n                })}\r\n            </tbody></table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstantTable;","import React, { Component } from 'react'\r\nimport '../../css/About.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport * as url from '../../constant/Url'\r\nimport '../../css/Common.css'\r\nimport ContentTitle from '../layout/ContentTitle' \r\n\r\nconst logoUrl = url.baseImageUrl + \"/res/img/asp.png\";\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n        this.props.setMenuCode(menus.ABOUT);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container about-section  \" >\r\n                <ContentTitle title=\"About Us\" />\r\n                <div className=\" abount-content\" style={{\r\n                    padding: '5px',\r\n                    width: '90%',\r\n                    fontFamily: 'Consolas', margin: '5px'\r\n                }}>\r\n                    <InstantTable\r\n                        rows={[\r\n                            { values: [\"Name\", \"Organization Management Admin\"] },\r\n                            { values: [\"Version\", \"1.0.0\"] },\r\n                            { values: [\"Description\", \"managing your organization activities effectively\"] },\r\n\r\n\r\n                        ]} />\r\n                    <h2>Powered By</h2>\r\n                    <img style={{ width: '50%' }} src={logoUrl} />\r\n                </div></div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import * as types from './types'\r\nimport * as config from '../utils/WebConfig'\r\nimport * as url from '../constant/Url'\r\n\r\nconst hostCloud = url.hostCloud+\"/api/\";\r\nconst hostLocal = url.hostLocal+\"/api/\";\r\n\r\nconst usedHost = () => {\r\n    if (config.debugMode() == true)\r\n        return hostLocal;\r\n    else\r\n        return hostCloud;\r\n} \r\nconst apiBaseUrl  = () => usedHost() + \"public/\";\r\nconst apiEntityBaseUrl  = () => usedHost() + \"management/\"\r\nconst apiAccount = () => usedHost() + \"account/\"\r\nconst apiAdmin = () => usedHost() + \"admin/\" \r\n\r\nexport const addEventFromTimeline = (day,month,year) => {\r\n    return { type: types.ADD_EVENT_FROM_TIMELINE, payload: {\r\n        day:day,\r\n        month:month,\r\n        year:year\r\n    }, meta: { type: types.ADD_EVENT_FROM_TIMELINE } };\r\n}\r\n\r\nexport const setEntityConfig = (entityConfig) => {\r\n    return { type: types.SET_ENTITY_CONFIG, payload: {\r\n        entityConfig:entityConfig\r\n    }, meta: { type: types.SET_ENTITY_CONFIG } };\r\n}\r\n \r\nexport const resetManagementPage = () => {\r\n    return {\r\n        type: types.RESET_MANAGEMENT_PAGE,\r\n        payload: {},\r\n        meta: { type: types.RESET_MANAGEMENT_PAGE }\r\n    };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl().concat(\"add\") : apiEntityBaseUrl().concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {},\r\n                \"entryPoint\":\"inputField\"\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n \r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl().concat(\"generateappid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin().concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const sendChatMessage = (message, username, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SEND_MESSAGE,\r\n        payload: {\r\n            value: message,\r\n            username: username\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.SEND_MESSAGE,\r\n            url: apiAdmin().concat(\"sendmessage\")\r\n        }\r\n    };\r\n}\r\n\r\n \r\n\r\nexport const getEventByDate = (month, year, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_EVENTS_BY_DATE,\r\n        payload: { year: year, month: month },\r\n        meta: {\r\n            app: app, type: types.GET_EVENTS_BY_DATE,\r\n            url: apiAdmin().concat(\"event\")\r\n        }\r\n    };\r\n}\r\nexport const selectDivision = (id, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SELECT_DIVISION,\r\n        payload: { divisionId: id },\r\n        meta: {\r\n            app: app, type: types.SELECT_DIVISION, url: apiAccount().concat(\"setdivision\")\r\n        }\r\n    };\r\n}\r\n \r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount().concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n///ok\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {\r\n            user: { username: username, password: password }\r\n        },\r\n        meta: { type: types.DO_LOGIN, url: apiAccount().concat(\"login\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const refreshLoginStatus = (loginStatus) => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {loginStatus:loginStatus},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\n//ok\r\nexport const getDivisons = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.GET_DIVISIONS,\r\n        payload: {\r\n\r\n        },\r\n        meta: { type: types.GET_DIVISIONS, url: apiAccount().concat(\"divisions\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n \r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n \r\n\r\n"," \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const GET_DIVISIONS = \"GET_DIVISIONS\";\r\nexport const SELECT_DIVISION = \"SET_DIVISION\";\r\nexport const GET_EVENTS_BY_DATE = \"GET_EVENTS_BY_DATE\";\r\n     \r\nexport const REQUEST_ID = \"req_ID\";\r\nexport const SEND_MESSAGE = \"send_message\";\r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\"; \r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const RESET_MANAGEMENT_PAGE = \"reset_management_page\";\r\n\r\nexport const ADD_EVENT_FROM_TIMELINE = \"add_event_from_timeline\";\r\nexport const SET_ENTITY_CONFIG = \"set-entity-config\";","export const _byId = (id) => { return document.getElementById(id) }\r\n\r\nexport const clearFields = (...ignore) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n    let withIgnore = ignore != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore)\r\n            for (let y = 0; y < ignore.length; y++)\r\n                if (inputs[i].id == ignore[y]) continue loop;\r\n\r\n        if (inputs[i].type == \"text\") inputs[i].value = \"\";\r\n        if (inputs[i].type == \"number\") inputs[i].value = 0;\r\n    }\r\n}\r\n\r\nexport function toBase64(file, referer, callback){\r\n\tconst reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n    \talert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (_byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array(); \r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton  ? totalButton  : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton  ) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton -1 \r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\n\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyup = (e) => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(e.target.value, this.props.id);\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            if (this.props.type == \"date\") {\r\n                this.handleKeyup(e);\r\n            }\r\n            if (this.props.id && this.props.type == \"checkbox\") {\r\n                this.props.onChange(this.props.id);\r\n            }\r\n            if (this.props.onChange && this.props.id) {\r\n                this.props.onChange();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let type = this.props.type ? this.props.type : \"text\";\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let name = this.props.name ? this.props.name : \"\";\r\n        let style = this.props.style ? this.props.style : {};\r\n\r\n        let inputField = <input style={style}\r\n            className=\"rounded\"\r\n            name={name}\r\n            key={\"KEY-input-\" + this.props.id}\r\n            id={this.props.id}\r\n            type={type}\r\n            onKeyUp={this.handleKeyup}\r\n            placeholder={placeholder}\r\n            checked={this.props.checked}\r\n            onChange={this.onChange}\r\n           \r\n        />;\r\n\r\n        if (this.props.disabled == true) {\r\n            inputField = <input style={style}\r\n                className=\"rounded\"\r\n                onChange={this.onChange}\r\n                name={name} key={\"KEY-input-\" + this.props.id}\r\n                checked={this.props.checked}\r\n                id={this.props.id}\r\n                type={type} onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n               \r\n                disabled />\r\n        }\r\n\r\n        if (type == \"textarea\") {\r\n            inputField = <textarea style={style}\r\n                className=\"rounded\"\r\n                name={name}\r\n                key={\"KEY-input-\" + this.props.id}\r\n                id={this.props.id}\r\n                type={type}\r\n                onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n                onChange={this.onChange}\r\n                checked={this.props.checked} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field \">\r\n                {inputField}\r\n                {this.props.type == \"radio\" || this.props.type == \"checkbox\" ? <span style={{ fontSize: '0.9em' }}>\r\n\r\n                    {this.props.text} </span> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\n\r\nclass ActionButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = () => {\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"action-button rounded\";\r\n        if(this.props.status!= null ){\r\n            className=className.concat(\" \").concat(this.props.status);\r\n        }\r\n        return (\r\n            <div >\r\n                <button style={{...this.props.style}} className={className} id={this.props.id} onClick={this.onClick}>{this.props.text}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ActionButton;","import React, {Component} from 'react'\r\nimport '../css/Input.css'\r\n\r\nclass Label extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onClick = () =>{\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let style = this.props.style?this.props.style:{};\r\n        let className = \"input-field \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n        if(this.props.onClick){\r\n            className+=\" clickable\";\r\n        }\r\n        return(\r\n            <div onClick={this.onClick} style={style} className={className}>\r\n                <label>{this.props.text}</label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react'\r\nimport '../css/Common.css'\r\nimport '../css/Message.css'\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {\r\n            let progress = Math.floor( this.props.progress);\r\n            msgStyle = {\r\n                width:progress + \"%\",\r\n                textAlign: 'left'\r\n            };\r\n            className+=\" rounded\";\r\n            messageText =  <span className=\"loader\">{this.props.progress + \"%\"}</span>          \r\n        }\r\n        return (\r\n            <div style={msgStyle} className={className} >{messageText}</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Message;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Login.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport Label from '../Label';\r\nimport Message from '../Message'\r\nimport { withRouter } from 'react-router';\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            showMessageLoginFailed: false\r\n        }\r\n\r\n\r\n\r\n        this.handleUsername = (value) => {\r\n            this.setState({ username: value });\r\n        }\r\n        this.handlePassword = (value) => {\r\n            this.setState({ password: value });\r\n        }\r\n\r\n        this.doLogin = () => {\r\n\r\n            console.log(\"u:\", this.state.username, \",p:\", this.state.password);\r\n            this.props.doLogin(document.getElementById(\"username-field\").value,\r\n                document.getElementById(\"password-field\").value, this.props.main);\r\n        }\r\n\r\n        this.endMessage = () => {\r\n            this.setState({ showMessageLoginFailed: false })\r\n        }\r\n\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.props.setMenuCode(menus.LOGIN);\r\n        document.title = \"Login\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        // if(this.props.loginAttempt == false && this.state.showMessageLoginFailed == false){\r\n        //     this.setState({showMessageLoginFailed:true})\r\n        // }\r\n    }\r\n\r\n    render() {\r\n\r\n        let message = <p>\r\n            {this.props.loginFailed ? <Message endMessage={this.endMessage} type=\"failed\" text=\"Login Failed\" /> : \"\"}\r\n        </p>\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                < ContentTitle title=\"Login Page\" />\r\n                {message}\r\n                <div className=\"login-container\">\r\n                    <Label text=\"Username\" />\r\n                    <InputField id=\"username-field\" onKeyUp={this.handleUsername} />\r\n                    <Label text=\"Password\" />\r\n                    <InputField id=\"password-field\" type=\"password\" onKeyUp={this.handlePassword} />\r\n                    <ActionButton style={{margin:'5px'}} id=\"btn-login\" status=\"submit\" onClick={this.doLogin} text=\"Login\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport '../../css/Tab.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Tab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let tabsData = this.props.tabsData ? this.props.tabsData : [];\r\n\r\n        let autoColumns = \"5% \"+(\"max-content \".repeat(tabsData.length ))+\" auto\";\r\n        return (\r\n            <div className=\"tab-container\" style={{\r\n                ...this.props.style,\r\n                width:'auto',\r\n                gap:'0px',\r\n                display: 'grid',\r\n                gridTemplateColumns: autoColumns\r\n            }} >\r\n                 <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n                {tabsData.map(tabData => {\r\n                    return <div key={stringUtil.uniqueId()} className={tabData.active ? \"tab-element tab-item-active rounded-top\" : \"tab-element tab-item\"} onClick={tabData.onClick ? tabData.onClick : () => { }}>\r\n                        {tabData.text}\r\n                    </div>\r\n                })}\r\n                <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ComboBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = (e) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(e.target.value); \r\n            }\r\n            else {\r\n                console.log(\"Not supported\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let options = [];\r\n        if (this.props.options) {\r\n            options = this.props.options;\r\n        } \r\n        return (\r\n            <div className=\"input-field \">\r\n                <select value={this.props.defaultValue ? this.props.defaultValue : \"\"} className=\"rounded\" id={this.props.id}\r\n                    onChange={this.handleOnChange} >\r\n                    {options.map(\r\n                        option => {\r\n                            return <option key={\"opt_\" + stringUtil.uniqueId()} value={option.value} >{option.text}</option>\r\n                        }\r\n                    )}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComboBox;","import  React  from 'react'\r\nimport '../../css/Common.css'\r\nimport ComboBox from '../input/ComboBox';\r\n\r\nclass DashboardMain extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            divisionId:null\r\n        }\r\n    }\r\n\r\n    onDivisionListChange = (value) => {\r\n        this.setState({divisionId:value});\r\n        this.props.selectDivision(value);\r\n    }\r\n    \r\n    divionOptions = () => {\r\n        let options = [];\r\n        let divisions = this.props.divisions? this.props.divisions : [];\r\n\r\n        divisions.forEach(division => {\r\n            options.push({\r\n                value: division.id,\r\n                text: division.name\r\n            })\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render(){\r\n \r\n        const division = this.props.division;\r\n        let divisionId = this.state.divisionId;\r\n        if(this.props.division){\r\n            divisionId = this.props.division.id;\r\n        }\r\n\r\n        return(\r\n            <div >\r\n                <p>Login Sebagai</p>\r\n                <ComboBox defaultValue={divisionId} onChange={this.onDivisionListChange} options={this.divionOptions()} />\r\n\r\n                <p>Current Selection:</p>\r\n                <p>{division?division.name:\"\"}</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default DashboardMain;","export  const month = [\r\n    { name: \"Januari\", day: 31, text:\"Januari\",value:\"1\" },\r\n    { name: \"Februari\", day: 28, text:\"Februari\",value:\"2\" },\r\n    { name: \"Maret\", day: 31, text:\"Maret\",value:\"3\" },\r\n    { name: \"April\", day: 30, text:\"April\",value:\"4\" },\r\n    { name: \"Mei\", day: 31 , text:\"Mei\",value:\"5\"},\r\n    { name: \"Juni\", day: 30, text:\"Juni\",value:\"6\" },\r\n    { name: \"Juli\", day: 31 , text:\"Juli\",value:\"7\"},\r\n    { name: \"Agustus\", day: 31 , text:\"Agustus\",value:\"8\"},\r\n    { name: \"September\", day: 30 , text:\"September\",value:\"9\"},\r\n    { name: \"Oktober\", day: 31 , text:\"Oktober\",value:\"10\"},\r\n    { name: \"November\", day: 30 , text:\"November\",value:\"11\"},\r\n    { name: \"Desember\", day: 31 , text:\"Desember\",value:\"12\"},\r\n];","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Card.css'\r\n\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let titleStyle = {height:'auto'}\r\n        if (this.props.icon) {\r\n            titleStyle = {\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundColor: 'white',\r\n                backgroundImage: \"url(\" + this.props.icon + \")\",\r\n                backgroundSize: '200px 160px',\r\n                \r\n            }\r\n        }\r\n\r\n        let className= \"card \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.onClick} style={this.props.style} className={className}>\r\n                <div className=\"card-title  \" style={titleStyle}>\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\n\r\n\r\nclass FullCalendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth() + 1,\r\n            inputYearValue: new Date().getFullYear(),\r\n            activeId: \"\", \r\n            selectedDay: 0\r\n        }\r\n\r\n        this.calendarData = [];\r\n        this.days = [\"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\", \"Ahad\"];\r\n\r\n\r\n        this.month_now = 7;// 0; \r\n        this.begin = { week: 1, day: 3, dayCount: 31, info: \"\" };\r\n        this.begin_old = { week: 0, day: 0, dayCount: 0, info: \"\" };\r\n        this.year_now = 1945; \r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n        this.running_month = 7;\r\n        this.running_year = 1945;\r\n        this.filterDayId = 0;\r\n        this.filterMonthId = 0; this.dateFormId = 0;\r\n        this.entity_Name = 0; this.entity_Prop = 0; this.dateFormId = 0;\r\n\r\n        this.setSelectedMonth = (val) => {\r\n            this.setState({ selectedMonth: val });\r\n            this.props.refresh(val, this.year_now);\r\n        }\r\n        this.changeInputYear = (val, id) => {\r\n            this.setState({ inputYearValue: val, activeId: id });\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => { \r\n            this.props.getEventByDate(month, year );\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            if(this.props.getEventDetail){\r\n                return this.props.getEventDetail(day);\r\n            }\r\n\r\n            return [];\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        } \r\n        this.updateFields();\r\n        if (_byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n         this.loadCalendar();\r\n    }\r\n\r\n    setDateElementId(dateID) { \r\n        this.dateFormId = dateID;\r\n        let filterStr = \"filter-\" + dateID;\r\n        this.filterDayId = (filterStr + \".day\");\r\n        this.filterMonthId = (filterStr + \".month\");\r\n        this.dateFormId = (filterStr + \".year\");\r\n    }\r\n\r\n    updateFields() {\r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n    }\r\n\r\n    loadCalendar() {\r\n        this.updateFields();\r\n        this.createTable();\r\n        this.begin_old = this.begin;\r\n        this.begin = this.fillDay(this.month_now, true, this.begin);\r\n\r\n        this.input_month.value = new Date().getMonth() + 1; \r\n        this.setCalendar();\r\n        this.setState({ updated: new Date(), inputYearValue: new Date().getFullYear() });\r\n    }\r\n    setCalendar() {\r\n        this.doSetCalendar();\r\n    }\r\n\r\n    doSetCalendar() {\r\n        console.log(\"==start==\");\r\n\r\n        this.running_month = this.input_month ? this.input_month.value - 1 : new Date().getMonth();\r\n        this.running_year = this.state.inputYearValue ? this.state.inputYearValue : new Date().getFullYear();\r\n        let diff_year = +Math.abs(this.running_year - this.year_now);\r\n        // alert(\"diff_year year:\" + diff_year);\r\n        let monthCount = 0;\r\n        if (diff_year > 0)\r\n            monthCount = (11 - this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (+this.running_month);\r\n        else\r\n            monthCount = this.running_month - this.month_now;\r\n        let less = false;\r\n        if (this.running_year - this.year_now > 0) {\r\n            less = false;\r\n        } else if (this.running_year - this.year_now < 0) {\r\n            less = true;\r\n        } else {\r\n            if (this.running_month - this.month_now > 0) {\r\n                less = false;\r\n            } else {\r\n                less = true;\r\n            }\r\n        }\r\n        monthCount = Math.abs(monthCount);\r\n        //console.log(\"kurang dari: \", less);\r\n        let current_month = this.month_now;\r\n        let endMonth = (monthCount + this.month_now);\r\n        if (monthCount <= 0)\r\n            return;\r\n        if (!less)\r\n        ////console.log(\"month now\",this.month_now,\"diff_year\",monthCount,\"to\",to);\r\n        {\r\n            for (let m = this.month_now + 1; m <= endMonth + 1; m++) {\r\n                if (current_month > 11) {\r\n                    current_month = 0;\r\n\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.nextMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"month\",current_month,\"this.running_year\",this.year_now);\r\n                current_month++;\r\n            }\r\n        } else if (less) {\r\n            let pastMonthCount = (this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (11 - this.running_month);\r\n            endMonth = (pastMonthCount + this.month_now);\r\n            //console.log(\"month now\", this.month_now, \"diff_year\", monthCount, \"from\", to);\r\n            let begin_month = this.month_now;\r\n            for (let b = endMonth + 1; b >= begin_month + 1; b--) {\r\n                if (current_month < 0) {\r\n                    current_month = 11;\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.prevMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"b\",b,\"month\",current_month);\r\n                current_month--;\r\n            } \r\n        }\r\n\r\n        this.fillInfo();\r\n        console.log(\"==end==\")\r\n    }\r\n\r\n    fillInfo() {\r\n        if (this.date_info)\r\n            this.date_info.value = timeLineConstant.month[this.month_now].name + \" \" + this.year_now;\r\n        this.refresh();\r\n\r\n    } \r\n\r\n    detail(day, month, year) { \r\n        if(this.props.detail){\r\n            this.props.detail(day, month, year);\r\n        } \r\n    }\r\n\r\n    prevMonth() {\r\n\r\n        this.setState({ updated:new Date()})\r\n        return this.doPrevMonth(false);\r\n    }\r\n\r\n    doPrevMonth(prev) {\r\n        this.month_now--;\r\n        if (prev) {\r\n            this.running_month--;\r\n        }\r\n        if (this.month_now < 0) {\r\n            this.month_now = 11;\r\n            this.year_now--;\r\n            if (prev) {\r\n                this.running_month = 11;\r\n                this.running_year--;\r\n            }\r\n        }\r\n        let begin_prev = this.findBegin(this.begin_old, this.begin_old.dayCount);\r\n\r\n        this.begin_old = {\r\n            week: begin_prev.week,\r\n            day: begin_prev.day,\r\n            dayCount: begin_prev.dayCount,\r\n        }\r\n        let switch_ = this.fillDay(this.month_now, false, begin_prev);\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n    }\r\n\r\n    nextMonth() {\r\n        \r\n        return this.doNextMonth(false);\r\n    }\r\n\r\n    refresh() {\r\n        if(this.props.refresh){\r\n            this.props.refresh(this.month_now, this.year_now);\r\n        }\r\n    }\r\n\r\n    doNextMonth(next) {\r\n        console.log(\"NEXT\")\r\n        this.month_now++;\r\n        if (next) {\r\n            this.running_month++;\r\n        }\r\n        if (this.month_now > 11) {\r\n            this.month_now = 0;\r\n            this.year_now++;\r\n            if (next) {\r\n                this.running_month = 0;\r\n                this.running_year++;\r\n            }\r\n        }\r\n\r\n        let switch_ = this.fillDay(this.month_now, true, this.begin);\r\n        this.begin_old = {\r\n            week: this.begin.week,\r\n            day: this.begin.day,\r\n            dayCount: this.begin.dayCount,\r\n        }\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount,\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n\r\n    }\r\n\r\n    findBegin(begin_old_, totalday) {\r\n        let M = this.month_now - 1;\r\n        if (M < 0) {\r\n            M = 11;\r\n        }\r\n        let day = begin_old_.day;\r\n        let week = 6;\r\n        let begin_prev_ = {\r\n            week: 0,\r\n            day: 0,\r\n            dayCount: timeLineConstant.month[M].day\r\n        }\r\n\r\n        for (let D = totalday; D >= 0; D--) {\r\n            if (day <= 0) {\r\n                day = 7;\r\n                week--;\r\n            }\r\n            day--;\r\n        }\r\n        begin_prev_.week = week;\r\n        begin_prev_.day = day + 1;\r\n        return begin_prev_;\r\n    }\r\n\r\n    setElementByAttr(val, val2, day) {\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            let data = this.calendarData[i];\r\n\r\n            if (data.week == val && data.day == val2) {\r\n                if (new Date().getDate() == day &&\r\n                    new Date().getMonth() == this.month_now &&\r\n                    new Date().getYear() + 1900 == this.year_now) {\r\n\r\n                    console.log(\"NOW\", i);\r\n                    this.calendarData[i].now = true;\r\n                } else {\r\n                 //   console.log(\"NOT NOW\", i);\r\n                    this.calendarData[i].now = false;\r\n                }\r\n                this.calendarData[i].text = day;\r\n            }\r\n        }\r\n    }\r\n\r\n    addNewEvent(day, month, year) {\r\n\r\n        let strDate = this.dateAcceptableForHtmlInput(day, month, year);\r\n        document.getElementById(this.dateFormId).value = strDate;\r\n    }\r\n\r\n    dateAcceptableForHtmlInput(day, month, year) {\r\n        return year + \"-\" + this.addZero(month, 10) + \"-\" + this.addZero(day, 10);\r\n    }\r\n\r\n    addZero(Val, Min) {\r\n        let N = new String(Val);\r\n        let MinStr = new String(Min);\r\n\r\n        let ValLength = N.length;\r\n        let MinLength = MinStr.length;\r\n        let Diff = MinLength - ValLength;\r\n        for (let i = 1; i <= Diff; i++) {\r\n            N = new String(\"0\").concat(N);\r\n        }\r\n\r\n        return N;\r\n    }\r\n\r\n    clear() {\r\n\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            this.calendarData[i].text = \"\";\r\n        }\r\n\r\n        timeLineConstant.month[1].day = 28 + (+this.year_now % 4 == 0 ? 1 : 0);\r\n    }\r\n\r\n    fillDay(current_month, next, begin) {\r\n        this.clear();\r\n        let begin_new = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let begin_old_ = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let week_ = begin_new.week;\r\n        let begin_week = week_;\r\n        if (begin_new.week > 1 && begin_new.day > 1) {\r\n            week_ = 1;\r\n            begin_week = 1;\r\n        }\r\n        let day_ = begin_new.day;\r\n        let begin_day = day_;\r\n        let isNow = this.running_month == current_month && this.running_year == this.year_now;\r\n        //  console.log(\"isNow\", isNow,this.running_month,'=',current_month, this.running_month == current_month,this.running_year,'=',this.year_now, this.running_year == this.year_now)\r\n        for (let d = 1; d <= timeLineConstant.month[current_month].day; d++) {\r\n            if (day_ > 7) {\r\n                day_ = 1;\r\n                week_++;\r\n            }\r\n            if (isNow) {\r\n                this.setElementByAttr(week_, day_, d);\r\n            }\r\n            day_++;\r\n        }\r\n        begin_new.week = week_ >= 5 ? 2 : 1;\r\n        begin_new.day = day_;\r\n        begin_new.dayCount = timeLineConstant.month[current_month].day;\r\n        //console.log(\"old\", begin_old_.day, begin_old_.week);\r\n        //console.log(\"   \");\r\n        //console.log(\"new\", begin_new.day, begin_new.week);\r\n        this.fillInfo();\r\n        if (isNow) {\r\n            // this.detail(null, (+this.running_month + 1), this.running_year);\r\n            begin_new.info = \"NOW\";\r\n            this.getEventByDate(this.running_month + 1, this.running_year);\r\n        } else {\r\n            begin_new.info = \"SOME-DAY\";\r\n        }\r\n\r\n\r\n\r\n        return begin_new;\r\n    }\r\n\r\n    render() {\r\n        //validate division\r\n        let selectedYear = this.state.inputYearValue;\r\n\r\n        let totalCalendarData = this.days.map(day => {\r\n            return ({ text: day, title: true })\r\n        })\r\n\r\n        this.calendarData.forEach(element => {\r\n            totalCalendarData.push(element);\r\n        });\r\n\r\n        let calendarData = totalCalendarData.map(\r\n            data => {\r\n\r\n                if (data.text == null || data.text == \"\") {\r\n                    return <div></div>\r\n                }\r\n\r\n                let style = { width: '80%', minHeight: '150px', marginBottom: '15px' };\r\n\r\n                if (data.title == true) {\r\n                    return (<div>{data.text}</div>)\r\n                }\r\n\r\n                if (data.now == true) {\r\n                    style = {\r\n                        ...style,\r\n                        backgroundColor: 'lightgreen'\r\n                    }\r\n                }\r\n\r\n                let events = this.getEventDetail(+data.text);\r\n                let i = 0;\r\n                let eventList = events.map(event => {\r\n                    i++;\r\n                    if (i <= 3) {\r\n\r\n                        return <p key={\"EVT_\" + i}>{event.name}</p>\r\n                    } else if (i == 4) {\r\n                        return <ActionButton onClick={() => { }} text={\"more\"} />\r\n                    } else {\r\n                        return null;\r\n                    }\r\n\r\n\r\n                });\r\n             //   console.log(data.text, \"EVENTS: \", events);\r\n\r\n                return (\r\n                    <Card style={style} title={data.text}\r\n                        onClick={() => this.detail(data.text, this.month_now, this.year_now)}\r\n                        content={eventList}\r\n                    />\r\n                )\r\n            }\r\n        )\r\n\r\n\r\n        let content = <div id=\"calendar-wrapper\">\r\n\r\n            <GridComponent cols={3} style={{\r\n                textAlign: 'center', width: '400px'\r\n            }} items={[\r\n                <ComboBox id=\"input_month\" defaultValue={this.state.selectedMonth} onChange={this.setSelectedMonth}\r\n                    options={timeLineConstant.month} />,\r\n                <InputField type=\"number\" id=\"input_year\" value={selectedYear} onKeyUp={this.changeInputYear} />,\r\n                <ActionButton onClick={(e) => this.setCalendar()} text={\"Go\"} />,\r\n                <ActionButton onClick={(e) => this.doPrevMonth(true)} text={\"Prev\"} />,\r\n                <input disabled className=\"form-control\" id=\"date-info\" />,\r\n                <ActionButton onClick={(e) => this.doNextMonth(true)} text={\"Next\"} />\r\n            ]}\r\n\r\n            />\r\n            <p></p>\r\n            <p></p>\r\n            <GridComponent cols={7} items={calendarData} />\r\n        </div>;\r\n\r\n\r\n        return (\r\n             content  \r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default FullCalendar;","export const TYPE_DYNAMIC_DROPDOWN  = \"dynamicDropdown\";\r\nexport const TYPE_TEXTAREA = \"textarea\";\r\n\r\nexport const TYPE_LONG_DATE = \"longDate\";\r\nexport const TYPE_DATE = \"date\";\r\nexport const TYPE_STATIC_DROPDOWN = \"staticDropdown\";\r\nexport const TYPE_NUMBER = \"number\";\r\nexport const TYPE_TEXT = \"text\";\r\n\r\nexport const TYPE_MULTIPLE_IMAGE = \"multipleImage\";\r\nexport const TYPE_SINGLE_IMAGE = \"singleImage\";\r\n\r\nexport const divisionConfig = {\r\n    title: \"Badan Pengurus\",\r\n    entityName: \"division\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\", lableName: \"Nama\" },\r\n        { name: \"description\" }, { name: \"institution.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama BPD\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"Deskripsi BPD\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Division Insitusi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"institution.name\",\r\n            reffEntity: \"Institution\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const sectionConfig = {\r\n    title: \"Divisi\",\r\n    entityName: \"section\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"division.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"BPD\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"division.name\",\r\n            reffEntity: \"division\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const programConfig = {\r\n    title: \"Program Kerja\",\r\n    entityName: \"program\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" }\r\n        ,\r\n        { name: \"section.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Proker\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi Proker\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst eventStatus =  [\r\n    { text: \"-Not Configured-\", value: -1 },\r\n    { text: \"Done\", value: 1 },\r\n    { text: \"UnDone\", value: 0 }\r\n];\r\n\r\nexport const eventConfig = {\r\n    title: \"Kegiatan\",\r\n    entityName: \"event\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"info\" },\r\n        { name: \"date\", type: TYPE_LONG_DATE },\r\n        { name: \"location\" },\r\n        { name: \"program.name\" },\r\n        { name: \"participant\" },\r\n        {\r\n            name: \"done\", type: TYPE_STATIC_DROPDOWN, options:eventStatus\r\n        }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Kegiatan\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Waktu Kegiatan\",\r\n            inputType: \"date\",\r\n            name: \"date\"\r\n        },\r\n        {\r\n            lableName: \"Info Kegiatan\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"info\"\r\n        }, {\r\n            lableName: \"Lokasi Kegiatan\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"location\"\r\n        },\r\n        {\r\n            lableName: \"Nama Program\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"program.name\",\r\n            reffEntity: \"program\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Status Kegiatan\",\r\n            inputType: TYPE_STATIC_DROPDOWN,\r\n            name: \"done\",\r\n            options:eventStatus\r\n        },\r\n        {\r\n            lableName: \"Peserta\",\r\n            inputType: TYPE_NUMBER,\r\n            name: \"participant\"\r\n        },\r\n    ]\r\n}\r\n\r\nexport const positionConfig = {\r\n    title: \"Posisi\",\r\n    entityName: \"position\",\r\n    id: \"id\",\r\n    disabled: true,\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" },\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\nexport const memberConfig = {\r\n    title: \"Anggota\",\r\n    entityName: \"member\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"position.name\" },\r\n        { name: \"section.name\" },\r\n        { name: \"description.name\" }\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Anggota\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"position.name\",\r\n            reffEntity: \"position\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==============OLD STUFF==============//\r\n\r\n/**\r\n * SAMPLE\r\n */\r\n\r\nexport const productConfig = {\r\n    title: \"Product\",\r\n    entityName: \"product\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"code\" },\r\n        { name: \"description\" }, { name: \"unit.name\" },\r\n        { name: \"price\", type: TYPE_NUMBER }, { name: \"category.name\" },\r\n        { name: \"imageUrl\", type: \"imageMultiple\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Product Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Code\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Product Image(s)\",\r\n            inputType: \"multipleImage\",\r\n            name: \"imageUrl\"\r\n        },\r\n        {\r\n            lableName: \"Product Description\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Product Unit\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"unit.name\",\r\n            reffEntity: \"Unit\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Price\",\r\n            inputType: TYPE_NUMBER,\r\n            name: \"price\"\r\n        },\r\n        {\r\n            lableName: \"Product Category\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"category.name\",\r\n            reffEntity: \"Category\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport const supplierList = {\r\n    title: \"Supplier\",\r\n    entityName: \"supplier\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"address\" }, { name: \"contact\" }, { name: \"website\", type: \"link\" },\r\n        { name: \"iconUrl\", type: \"image\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Supplier Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Address\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Contact\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"contact\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Icon\",\r\n            inputType: \"singleImage\",\r\n            name: \"iconUrl\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Website\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"website\"\r\n        }\r\n    ]\r\n}\r\nexport const customerList = {\r\n    title: \"Customer\",\r\n    entityName: \"customer\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"username\" }, { name: \"name\" }, { name: \"address\" }, { name: \"phone\" }, { name: \"email\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Customer Unique Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"username\"\r\n        },\r\n        {\r\n            lableName: \"Customer Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Customer Address\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Customer Phone\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"phone\"\r\n        },\r\n        {\r\n            lableName: \"Customer Email\",\r\n            inputType: \"email\",\r\n            name: \"email\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const transactionConfig = {\r\n    title: \"Transaction\",\r\n    entityName: \"transaction\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"code\" }, { name: \"transactionDate\", type: TYPE_LONG_DATE },\r\n        { name: \"type\" }, { name: \"supplier.name\" },\r\n        { name: \"customer.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Transaction Code\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Date\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"transactionDate\"\r\n        },\r\n        {\r\n            lableName: \"Transaction Type\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"type\"\r\n        },\r\n        {\r\n            lableName: \"Supplier\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"supplier.name\"\r\n        },\r\n        {\r\n            lableName: \"Customer\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"customer.name\",\r\n        },\r\n\r\n    ]\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport FullCalendar from './FullCalendar';\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth(),\r\n            selectedYear: new Date().getFullYear(),\r\n            detailView: false,\r\n            detailEvents: [],\r\n            selectedDay: 0\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => {\r\n            console.log(\"_________\", month, year);\r\n            this.setState({\r\n                update: new Date(), selectedMonth: month, selectedYear: year\r\n            });\r\n            this.props.getEventByDate(month, year, this.props.app);\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            let events = this.props.events;\r\n            let result = [];\r\n\r\n            events.forEach(event => {\r\n                let date = new Date(event.date);\r\n                if (date.getDate() == day) {\r\n                    result.push(event);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n        this.detail = (day, month, year) => {\r\n            console.log(\"@DETAIL:\", day, month, year);\r\n            let events = this.getEventDetail(+day);\r\n            this.setState({\r\n                detailView: true, detailEvents: events, selectedDay: day,\r\n                selectedMonth: month, selectedYear: year\r\n            })\r\n        }\r\n\r\n        this.refresh = (selectedMonth, selectedYear) => {\r\n            this.setState({\r\n                updated: new Date(),\r\n                selectedMonth: selectedMonth, selectedYear: selectedYear\r\n            })\r\n        }\r\n\r\n        this.addEvent = () => {\r\n            let config = entityConfig.eventConfig;\r\n\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n\r\n            this.props.addEventFromTimeline(\r\n                this.state.selectedDay,\r\n                this.state.selectedMonth + 1, /*IMPORTANT*/\r\n                this.state.selectedYear\r\n            );\r\n\r\n            this.props.history.push(\"/management\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n\r\n        //validate division\r\n        if (this.props.division == null) {\r\n            return <h2>Silakan Pilih Badan Pengurus MPI</h2>\r\n        }\r\n        let title = <h2>TimeLine {this.props.division.name + \" \" + this.state.selectedYear}</h2>;\r\n\r\n        let detailEvents = [];\r\n        if (this.state.detailView == true) {\r\n            this.state.detailEvents.forEach(event => {\r\n\r\n                const eventDate = new Date(event.date).toString();\r\n\r\n                let eventStatus = \"Done\";\r\n                if(event.done == 0){\r\n                    eventStatus = \"Not Done\";\r\n                }else if(event.done != 1){\r\n                    eventStatus = \"Not Configured\";\r\n                }\r\n\r\n                let content = <div>\r\n                     <p>{eventDate}</p>\r\n                    <GridComponent cols={2} items={[  \r\n                        <label>Location</label>, <label>{event.location}</label>,\r\n\r\n                        <label>Participant</label>, <label>{event.participant}</label>,\r\n\r\n                        <label>Status</label>, <label>{eventStatus}</label>,\r\n\r\n                        <label>Info</label>, <label>{event.info}</label>,\r\n                    ]} />\r\n                </div>\r\n\r\n                let eventCard = <Card title={event.name}\r\n                    content={content} style={{ width: '90%' }}\r\n                />\r\n                detailEvents.push(eventCard);\r\n            });\r\n\r\n            if (detailEvents.length == 0) {\r\n                detailEvents = [\r\n                    <div>No Agenda.</div>\r\n                ]\r\n            }\r\n            return <div>\r\n                {title}\r\n                <p>Detail in {this.state.selectedDay + \" \" + stringUtil.monthYearString(\r\n                    this.state.selectedMonth + 1,\r\n                    this.state.selectedYear\r\n                )}</p>\r\n                <ActionButton onClick={() => { this.setState({ detailView: false }) }} text=\"Back\" />\r\n                <GridComponent width={\"30%\"} cols={3} items={detailEvents} />\r\n                <ActionButton status=\"success\" onClick={() => { this.addEvent() }} text=\"Add Event\" />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {title}\r\n                <FullCalendar\r\n                    division={this.props.division}\r\n                    detail={this.detail} getEventByDate={this.getEventByDate}\r\n                    refresh={this.refresh}\r\n                    events={this.props.events} getEventDetail={this.getEventDetail}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        events: state.managementState.events,\r\n        division: state.userState.division\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEventByDate: (m, y, app) => dispatch(actions.getEventByDate(m, y, app)),\r\n    addEventFromTimeline: (d, m, y) => dispatch(actions.addEventFromTimeline(d, m, y))\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Timeline)) ","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Dashboard.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport Tab from '../buttons/Tab';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport DashboardMain from './DashboardMain';\r\nimport Timeline from './Timeline'\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: \"home\"\r\n        }\r\n\r\n        this.setMenuCode = (code) => {\r\n            this.setState({ menu: code });\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n        this.getDivisons = () => {  \r\n            this.props.getDivisons( this.props.app);  \r\n        }\r\n\r\n        this.selectDivision = (divisionId) => {\r\n            this.props.selectDivision(divisionId, this.props.app);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        if (this.props.loginStatus != true)\r\n            return;\r\n        this.props.setMenuCode(menus.DASHBOARD);\r\n        document.title = \"Dashboard\";\r\n\r\n        this.getDivisons();\r\n    }\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                text: \"Home\",\r\n                active: this.state.menu == \"home\",\r\n                onClick: () => {this.setMenuCode('home') }\r\n            },\r\n            {\r\n                text: \"Time Line\",\r\n                active: this.state.menu == \"timeline\", \r\n                onClick: () => {this.setMenuCode('timeline') }\r\n            } \r\n        ];\r\n    }\r\n \r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const buttonsData = this.getButtonsData();\r\n\r\n        let content = null;\r\n        switch (this.state.menu) {\r\n            case 'home':\r\n                content = <DashboardMain  division={this.props.division} \r\n                    selectDivision={this.selectDivision} \r\n                    divisions={this.props.divisions} />\r\n                break;\r\n            case \"timeline\":\r\n                    content = <Timeline app={this.props.app} />\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (<div className=\"section-container\">\r\n            <ContentTitle title={\"Admin Page\"}\r\n                description=\"Welcome to the admin console\" />\r\n            <div className=\"management-container\">\r\n                <Tab tabsData={buttonsData} />\r\n                {content}\r\n            </div>\r\n        </div>)\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        divisions: state.userState.divisions,\r\n        division: state.userState.division,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getDivisons: ( app) => dispatch(actions.getDivisons( app)),\r\n    selectDivision: (divisionId, app) => dispatch(actions.selectDivision(divisionId, app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)); ","import React, { Component } from 'react';\r\nimport '../../css/Footer.css'\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let date = new Date().getFullYear();\r\n\r\n        return (\r\n            <div className=\"App-footer\">\r\n               BPP MPI Divisi Media {date+\" powered by React Js \"+React.version}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react' \r\nimport Label from './Label';\r\nimport '../css/Chat.css'\r\nimport GridComponent from './layout/GridComponent';\r\n\r\nclass ChatList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let chats = this.props.messages ? this.props.messages : [];\r\n        let chatRows = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = chats[i];\r\n            chatRows.push(\r\n                <ChatItem message={chat} username={this.props.username} />\r\n            )\r\n        }\r\n        return (\r\n            <GridComponent cols={1} items={chatRows} />)\r\n    }\r\n}\r\n\r\nconst ChatItem = props => {\r\n    let className = \"chat-item rounded paper-shadow  \" + (props.message.admin == 1 ? \" admin \" : \"user\");\r\n    let username = \"\";\r\n    if (props.username) {\r\n        username = \" [\" + props.username + \"]\";\r\n    }\r\n    let sender = props.message.admin == 1 ? \"Admin\" : \"You\" + username;\r\n    let senderComponent = <span>\r\n        {sender}<span style={{ marginLeft: '11px', fontSize: '0.7em', float: 'right' }} >{props.message.date}</span>\r\n    </span>\r\n    return (\r\n        <div className={className}>\r\n            <Label style={{ fontSize: '0.8em', color: 'black' }} text={senderComponent} />\r\n            <Label text={props.message.text} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport SockJsClient from 'react-stomp';\r\nimport ChatList from '../ChatList';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport Label from '../Label';\r\nimport GridComponent from '../layout/GridComponent'\r\n\r\nclass ChatRoom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages: null, username: null, activeId: null }\r\n        this.sendChatMessage = () => {\r\n            if (!_byId(\"input-msg\").value) {\r\n                alert(\"Message must not be null\");\r\n                return;\r\n            }\r\n            this.props.sendChatMessage(_byId(\"input-msg\").value, this.state.username, this.props.app);\r\n            _byId(\"input-msg\").value = \"\";\r\n        }\r\n\r\n        this.handleMessage = (response) => {\r\n            console.log(\"Responses handleMessage: \", response.code);\r\n            console.log(\"LOCAL STORAGE:\", localStorage.getItem(\"requestId\"))\r\n            if (response.code != localStorage.getItem(\"requestId\")) {\r\n                return;\r\n            }\r\n            this.props.storeChatMessageLocally(response.entities);\r\n            // this.setState({ messages: response.entities });\r\n        }\r\n\r\n        this.changeUsername = (value, id) => {\r\n            this.setState({ username: value, activeId: id });\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.setMenuCode('chatroom');\r\n        document.title = \"Chat Room\";\r\n        this.props.getMessages(this.props.app);\r\n        if (this.props.userAlias) {\r\n            this.setState({ username: this.props.userAlias })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.activeId && _byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let userAlias = this.props.userAlias ? this.props.userAlias : \"\";\r\n        let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\r\n        let localHost = \"http://localhost:8080/universal-good-shop/\";\r\n        const usedHost = localHost;\r\n        return (\r\n            // <div className=\"section-container\">\r\n            //     <ContentTitle title=\"What Do You Feel?\" description=\r\n            //         {\"Identified as [\" + this.state.username + \"]\"} />\r\n            //     <InputField\r\n            //         value={userAlias}\r\n            //         onKeyUp={this.changeUsername}\r\n            //         id=\"input-username\"\r\n            //         placeholder=\"identify your name\" />\r\n            //     <div style={{ textAlign: 'left' }} id=\"chat-room\">\r\n\r\n            //         <div className=\"chat-container\"  >\r\n            //             <ChatList username={this.state.username} messages={this.props.messages} />\r\n            //         </div>\r\n\r\n            //         <GridComponent style={{ width: '50%', textAlign: 'right' }} items={[\r\n            //             <InputField style={{ width: '130%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />,\r\n            //             <ActionButton style={{ margin: '5px' }} status=\"success\" onClick={this.sendChatMessage} text=\"send\" />\r\n\r\n            //         ]} />\r\n\r\n            //         <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/messages']}\r\n            //             onMessage={(msg) => { this.handleMessage(msg) }}\r\n            //             ref={(client) => { this.clientRef = client }} />\r\n            //     </div>\r\n            // </div>\r\n            <ContentTitle title=\"under construction\" />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        messages: state.shopState.messages,\r\n        userAlias: state.shopState.userAlias\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    sendChatMessage: (message, username, app) => dispatch(actions.sendChatMessage(message, username, app)),\r\n    storeChatMessageLocally: (messages) => dispatch(actions.storeMessageLocally(messages)),\r\n    getMessages: (app) => dispatch(actions.getMessageList(app))\r\n\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ChatRoom)","import React, { Component } from 'react'\r\n\r\nimport '../../css/Input.css'\r\n\r\nclass DropdownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false\r\n        }\r\n\r\n        this.handleClick = (e) => {\r\n            console.log(\"selected: \",e.target.innerHTML);\r\n            if(this.props.onClick){\r\n                this.props.onClick(e);\r\n            }\r\n        }\r\n\r\n        this.onHover = (e) => {\r\n          \r\n            if(this.props.onHover)\r\n                this.props.onHover( this.props.index); \r\n        }\r\n        this.unHover = (e) => { \r\n            this.setState({ hover: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n          return (\r\n              <div>\r\n                \r\n                <div    onMouseLeave={this.unHover} onMouseOver ={this.onHover}  >\r\n                {this.props.text}</div>\r\n              </div>\r\n          \r\n        )\r\n    }\r\n}\r\nexport default DropdownItem;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport DropdownItem from './DropdownItem';\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            focus: true, hover: false, hoverIndex: -1,\r\n\r\n        }\r\n\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(document.getElementById(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onBlur = () => {\r\n            console.log(\"blur\");\r\n            this.setState({ focus: false, hover: false })\r\n        }\r\n\r\n        this.onSelect = (dataValue, text) => {\r\n            console.log(\"select value:\", dataValue);\r\n            if (this.props.onSelect) { this.props.onSelect(dataValue); }\r\n            if (this.props.id) {\r\n                document.getElementById(this.props.id).value = text;\r\n            }\r\n        }\r\n\r\n        this.onHover = (i) => {\r\n            if (this.state.hoverIndex != i)\r\n                this.setState({ hoverIndex: i });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let dropdownList = [];\r\n        let dropdownComponent = \"\";\r\n        if (this.props.dropdownList && this.props.dropdownList.length > 0) {\r\n            dropdownList = this.props.dropdownList;\r\n\r\n            dropdownComponent = <div className=\"dropdown\">\r\n                {dropdownList.map(\r\n                    (data, i) => {\r\n                        let className = \"dropdown-item\";\r\n                        const key = \"dropdown-item-\" + i;\r\n\r\n                        if (this.state.hoverIndex == i) className = \"dropdown-item-hovered\";\r\n                        return (\r\n                            <div\r\n                                key={key}\r\n                                onClick={(e) => this.onSelect(data.value, data.text)}\r\n                                className={className}>\r\n                                <DropdownItem onClick={(e) => this.onSelect(data.value, data.text)}\r\n                                    onHover={this.onHover}\r\n                                    index={i} text={data.text} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        }\r\n\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let inputClassName = \"rounded\";\r\n        return (\r\n            <div\r\n                onMouseOver={() => this.setState({ focus: true })}\r\n                onMouseLeave={this.onBlur}\r\n                className=\"dropdown-wrapper input-field\">\r\n\r\n                <input\r\n                    className={inputClassName}\r\n                    onFocus={() => this.setState({ focus: true })}\r\n                    id={this.props.id}\r\n                    type=\"text\"\r\n                    onKeyUp={this.handleKeyup}\r\n                    placeholder={placeholder} />\r\n                {dropdownComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default InputDropdown;","import React, { Component } from 'react'\r\nimport '../../css/Input.css'\r\nimport '../../css/Common.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport * as url from '../../constant/Url'\r\nimport ActionButton from '../buttons/ActionButton'\r\n\r\nclass InputFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            base64Data: null\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            componentUtil.toBase64(e.target, this, function (result, referer) {\r\n                referer.setState({ base64Data: result });\r\n\r\n            });\r\n        }\r\n\r\n        this.removeImage = () => {\r\n            if(this.props.removeImage){\r\n                this.props.removeImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.base64Data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let displayImage = null;\r\n        if (this.state.base64Data) {\r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.state.base64Data} width=\"60\" height=\"60\" />\r\n            </div>;\r\n        }\r\n        if (this.props.value && this.props.value.trim() != \"\") {\r\n            \r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.props.value} width=\"60\" height=\"60\" />\r\n                <ActionButton text=\"cancel\" status=\"danger\" onClick={this.removeImage} />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field\" >\r\n                <input accept=\"image/*\" onChange={this.onChange} type=\"file\" key={\"input_file_\" + stringUtil.uniqueId()} />\r\n                {displayImage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFile;\r\n\r\n","import React, { Component } from 'react';\r\nimport * as url from '../../constant/Url'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InputFile from './InputFile';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFileMultiple extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAddMoreFile = () => {\r\n            if(this.props.addMoreImage){\r\n                this.props.addMoreImage();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let inputFields = [];\r\n        if (this.props.inputFilesData) {\r\n            inputFields = this.props.inputFilesData;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {inputFields.map(\r\n                    inputFileData => {\r\n                        let value = inputFileData.value;\r\n                        return (\r\n                            <InputFile\r\n                                key={stringUtil.uniqueId() + \"_multiple_file_item\"}\r\n                                onChange={(base64) => {\r\n                                    if (inputFileData.onChange)\r\n                                        inputFileData.onChange(base64)\r\n                                }}\r\n                                value={value && value.includes(\"base64\") ? value : value ?\r\n                                    url.baseImageUrl + value : null}\r\n                                id={inputFileData.inputId}\r\n                                removeImage={() => {\r\n                                    if (inputFileData.removeImage)\r\n                                        inputFileData.removeImage()\r\n                                }\r\n                                }\r\n\r\n                            />\r\n                        )\r\n                    }\r\n                )}\r\n                <ActionButton text=\"add more\" onClick={this.handleAddMoreFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFileMultiple;","import React, { Component } from 'react'\r\nimport '../../css/Entity.css'\r\nimport '../../css/Common.css'\r\nimport Label from '../Label'\r\nimport InputDropdown from '../input/InputDropdown'\r\nimport ComboBox from '../input/ComboBox'\r\nimport InputField from '../input/InputField';\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport InputFile from '../input/InputFile'\r\nimport * as url from '../../constant/Url'\r\nimport InputFileMultiple from '../input/InputFileMultiple'\r\nimport { TYPE_DYNAMIC_DROPDOWN, TYPE_STATIC_DROPDOWN, TYPE_MULTIPLE_IMAGE, TYPE_SINGLE_IMAGE } from '../../utils/EntityConfigurations'\r\n\r\nclass EntityForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            managedEntity: null,\r\n            activeId: null,\r\n            formValues: {},\r\n            dropdownList: {},\r\n            dropdownValues: {},\r\n            selectedEntities: {},\r\n            base64Data: {},\r\n            base64DataMultiple: {},\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * valudate before submit\r\n         */\r\n        this.validateEntity = (entity) => {\r\n            const result = entity;\r\n            for (let key in entity) {\r\n                console.log(key);\r\n                const formDataItem = this.getFormDataItemStartWith(key);\r\n                if (formDataItem) {\r\n                    if (formDataItem.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle single Image\r\n                         */\r\n                        if (entity[key] && !entity[key].includes(\"base64\")) {\r\n                            result[key] = null;\r\n                        }\r\n                    } else if (formDataItem.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle MULTIPLE Image\r\n                         */\r\n\r\n                        if (entity[key]) {\r\n                            let arrayOfValues = entity[key].split(\"~\");\r\n                            let resultValue = new Array();\r\n                            for (let i = 0; i < arrayOfValues.length; i++) {\r\n                                const element = arrayOfValues[i];\r\n                                /**\r\n                                 * if not modified\r\n                                 */\r\n                                if (!this.state.base64DataMultiple[key] ||\r\n                                    !this.state.base64DataMultiple[key][i]) {\r\n                                    resultValue.push(\"{ORIGINAL>>\" + element + \"}\");\r\n                                } else\r\n                                    /**\r\n                                     * if modified\r\n                                     */\r\n                                    if (this.state.base64DataMultiple[key] &&\r\n                                        this.state.base64DataMultiple[key][i]) {\r\n                                        const updatedValue = this.state.base64DataMultiple[key][i];\r\n                                        resultValue.push(\"{ORIGINAL>>\" + element + \"}\" + updatedValue);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            if (this.state.base64DataMultiple[key] && this.state.base64DataMultiple[key].length > arrayOfValues.length) {\r\n                                for (let i = arrayOfValues.length - 1; i < this.state.base64DataMultiple[key].length; i++) {\r\n                                    const element = this.state.base64DataMultiple[key][i];\r\n                                    if (element && element.includes(\"base64\")) {\r\n                                        resultValue.push(element);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (resultValue.length > 0)\r\n                                result[key] = resultValue.join(\"~\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.setState({ updated: new Date() })\r\n        }\r\n\r\n        this.handleSubmit = () => {\r\n            let addFromOtherPage = false;\r\n\r\n            const updateMode = this.props.managedEntity != null && this.props.addNew == false;\r\n            if (updateMode) {\r\n                console.log(\"WILL UPDATE(props):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"update\");\r\n                }\r\n            }else{\r\n                if( this.props.managedEntity != null && this.props.addNew == true){\r\n                    addFromOtherPage = true;\r\n                }\r\n            }\r\n\r\n            const addNewMod = this.state.managedEntity != null;\r\n            if (addNewMod  ) {\r\n                console.log(\"WILL SUBMIT NEW(state):\", this.state.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.state.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n\r\n            /**\r\n             * SPECIAL CASE\r\n             */\r\n\r\n            if ( addFromOtherPage) {\r\n                console.log(\"WILL SUBMIT NEW(SPECIAL CASE):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n            this.clear();\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.onKeyUp = (value, id, propName) => {\r\n            this.setState({ activeId: id });\r\n            this.updateSelectedEntity(propName, value);\r\n\r\n        }\r\n\r\n        this.clear = () => {\r\n            this.setState({\r\n                managedEntity: null,\r\n                dropdownList: {},\r\n                dropdownValues: {},\r\n                selectedEntities: {},\r\n                base64Data: {},\r\n                base64DataMultiple: {}\r\n            });\r\n            if (this.props.removeManagedEntity) {\r\n                this.props.removeManagedEntity();\r\n            }\r\n        }\r\n\r\n        this.populateDropdown = (entityname, fieldname, fieldvalue) => {\r\n            const request = {\r\n                entityName: entityname,\r\n                fieldName: fieldname.split(\".\")[1],\r\n                fieldValue: fieldvalue\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"DATA FOR DROPDOWN: \", data);\r\n            });\r\n\r\n        }\r\n\r\n        this.onKeyUpDynamicDropdown = (value, id, propName, reffEntity) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            const request = {\r\n                entityName: reffEntity,\r\n                fieldName: 'name',\r\n                fieldValue: value\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"LIST FOR DROPDOWN: \", data.entities)\r\n                referer.populateDropdownValues(data.entities, propName);\r\n            });\r\n            let currentDropdownValue = this.state.dropdownValues;\r\n            currentDropdownValue[propName] = value;\r\n            this.setState({ activeId: id, dropdownValues: currentDropdownValue });\r\n        }\r\n\r\n        this.populateDropdownValues = (entities, propName) => {\r\n            console.log(\"ENTITIES:\", entities)\r\n            let options = new Array();\r\n            const formDataItem = this.getFormDataItem(propName);\r\n            if (null == formDataItem) {\r\n                console.log(\"FORM DATA NOT FOUND\");\r\n                return;\r\n            }\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                options.push({\r\n                    value: entity[formDataItem.idField],\r\n                    text: entity[formDataItem.displayField],\r\n                    entity: entity\r\n                })\r\n            }\r\n            let currentDropdownList = this.state.dropdownList;\r\n            currentDropdownList[propName] = options;\r\n            //  this.setState({ dropdownList: currentDropdownList })\r\n            return options;\r\n        }\r\n\r\n        this.getSelectedDropdownItem = (value, propName) => {\r\n            if (this.state.dropdownList[propName] == null) {\r\n                return null;\r\n            }\r\n            const dropdownList = this.state.dropdownList[propName];\r\n            for (let i = 0; i < dropdownList.length; i++) {\r\n                const option = dropdownList[i];\r\n                if (option.value == value) {\r\n                    return option;\r\n                }\r\n\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getFormDataItem = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.addMoreImage = (propName) => {\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    currentValue = currentValue.trim() + \"~DEFAULT.BMP\";\r\n                    this.updateSelectedEntity(propName, currentValue);\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                let currentValue;\r\n                if (!managedEntity) {\r\n                    managedEntity = {};\r\n                    currentValue = \"\";\r\n                } else\r\n                    currentValue = managedEntity[propName] + \"~\";\r\n                currentValue = currentValue.trim() + \"DEFAULT.BMP\";\r\n                this.updateSelectedEntity(propName, currentValue);\r\n            }\r\n        }\r\n\r\n        this.updateSelectedEntity = (propName, value) => {\r\n            if (this.props.managedEntity) {\r\n                this.props.managedEntity[propName] = value;\r\n                this.refresh();\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) managedEntity = {};\r\n                managedEntity[propName] = value;\r\n                this.setState({ managedEntity: managedEntity });\r\n            }\r\n\r\n        }\r\n\r\n        this.getFormDataItemStartWith = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                    if (formDataItem.name.split(\".\").length > 1) {\r\n                        if (formDataItem.name.split(\".\")[0] == propName) {\r\n                            return formDataItem;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.handleRemoveImage = (propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = null;\r\n\r\n            this.updateSelectedEntity(propName, null);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64Image = (base64, propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = base64;\r\n\r\n            this.updateSelectedEntity(propName, base64);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64MultipleImage = function (base64, propNameRaw, i) {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = base64;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n        }\r\n\r\n        this.removeElementAtPosition = (array, index) => {\r\n            let result = new Array();\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (i != index) {\r\n                    result.push(array[i])\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.handleRemoveMultipleImage = (propNameRaw, i) => {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = null;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity; \r\n                if (!managedEntity) {\r\n                    return;\r\n                }\r\n                let currentValue = managedEntity[propName];\r\n                if(currentValue){\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.selectFromDynamicDropdown = (value, propName) => {\r\n            console.log(propName, \":\", value);\r\n            const currentDropdownList = this.state.dropdownList;\r\n            const dropdownValues = this.state.dropdownValues;\r\n            const selectedEntities = this.state.selectedEntities;\r\n\r\n            const selectedOption = this.getSelectedDropdownItem(value, propName);\r\n            if (null == selectedOption) {\r\n                return;\r\n            }\r\n\r\n            dropdownValues[propName] = selectedOption.text;\r\n            currentDropdownList[propName] = [];\r\n            selectedEntities[propName] = selectedOption.entity;\r\n\r\n            /**\r\n             * time to modify entity\r\n             */\r\n            const displayPropName = propName.split(\".\")[0];\r\n\r\n            this.updateSelectedEntity(displayPropName, selectedOption.entity);\r\n            this.setState({ activeId: null, dropdownList: currentDropdownList, dropdownValues: dropdownValues, selectedEntities: selectedEntities });\r\n        }\r\n\r\n        this.handleStaticDropdownChange = (value, propName) =>{\r\n            \r\n            this.updateSelectedEntity(propName, value);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        let formData = this.props.entityConfig && this.props.entityConfig.formData ? this.props.entityConfig.formData : [];\r\n\r\n        const entityExist = this.props.managedEntity != null || this.state.managedEntity;\r\n\r\n\r\n        let actionButtons = null;\r\n        if(!this.props.entityConfig.disabled){\r\n            actionButtons  =   <ActionButtons buttonsData={[\r\n                {\r\n                    text: this.props.managedEntity && this.props.addNew == false ? \"Update\" : \"Add Record\",\r\n                    onClick: this.handleSubmit,\r\n                    status:\"success\"\r\n                },\r\n                {\r\n                    text: \"Clear\",\r\n                    status:\"warning\",\r\n                    onClick: this.clear\r\n                }\r\n            ]} />;\r\n        }\r\n\r\n        let formFields = <div className=\"entity-form  \">\r\n            {formData.map(\r\n                data => {\r\n                    const parentPropName = data.name.split(\".\")[0];\r\n                    let value = null;\r\n                    if (entityExist) {\r\n                        const entity = this.props.managedEntity ? this.props.managedEntity : this.state.managedEntity;\r\n                        const propName = data.name;\r\n\r\n                        if (propName.split(\".\").length > 1 && this.state.activeId != \"input-for-\" + data.name) {\r\n                            const valueAsObject = entity[propName.split(\".\")[0]];\r\n                            const objectPropName = propName.split(\".\")[1];\r\n\r\n                            value = valueAsObject ? valueAsObject[objectPropName] : null;\r\n                        } else {\r\n                            value = entity[propName];\r\n                        }\r\n                    }\r\n\r\n                    let inputComponent = null;\r\n                    const inputId = \"input-for-\" + data.name;\r\n\r\n                    if (data.inputType == TYPE_DYNAMIC_DROPDOWN) {\r\n                        /**\r\n                         * if dynamic dropDown\r\n                         */\r\n\r\n                        if (null == value) {\r\n                            value = this.state.dropdownValues[data.name]\r\n                        }\r\n\r\n                        inputComponent = <InputDropdown\r\n                            onSelect={(value) => this.selectFromDynamicDropdown(value, data.name)}\r\n                            id={inputId}\r\n                            placeholder={data.lableName}\r\n                            value={value}\r\n                            dropdownList={this.state.dropdownList[data.name]}\r\n                            onKeyUp={(value, id) => { this.onKeyUpDynamicDropdown(value, id, data.name, data.reffEntity) }} />\r\n\r\n                    } else  if (data.inputType == TYPE_STATIC_DROPDOWN) {\r\n                        /**\r\n                         * if static drop down\r\n                         */\r\n                        console.log(\"STATIC DROPDOWN VALUE: \",value);\r\n                        inputComponent = <ComboBox \r\n                             defaultValue={new String(value)}\r\n                            onChange={(val)=>this.handleStaticDropdownChange(val,data.name)}\r\n                            options={data.options} id={stringUtil.uniqueId()}\r\n                         />\r\n\r\n                    } else if (data.inputType == TYPE_SINGLE_IMAGE) {\r\n                        /**\r\n                         * handle image single\r\n                         */\r\n                        inputComponent = <InputFile\r\n                            onChange={(base64) => this.handleChangeBase64Image(base64, data.name)}\r\n                            value={value && value.includes(\"base64\") ? value : value ? url.baseImageUrl + value : null}\r\n                            id={inputId}\r\n                            removeImage={() => this.handleRemoveImage(data.name)}\r\n\r\n                        />\r\n\r\n                    } else if (data.inputType == TYPE_MULTIPLE_IMAGE) {\r\n                        /**\r\n                         * handle multiple single\r\n                         */\r\n                        let valueSplit = value ? value.split(\"~\") : [];\r\n\r\n                        let imagesData = new Array();\r\n                        for (let i = 0; i < valueSplit.length; i++) {\r\n                            let valueSplitItem = valueSplit[i];\r\n                            if (this.state.base64DataMultiple[parentPropName] &&\r\n                                this.state.base64DataMultiple[parentPropName][i]\r\n                                && this.state.base64DataMultiple[parentPropName][i].includes(\"base64\")) {\r\n                                valueSplitItem = this.state.base64DataMultiple[parentPropName][i];\r\n                            }\r\n                            imagesData.push({\r\n                                value: valueSplitItem,\r\n                                onChange: (base64) => {\r\n                                    this.handleChangeBase64MultipleImage(base64, data.name, i);\r\n                                },\r\n                                removeImage: () => this.handleRemoveMultipleImage(data.name, i)\r\n\r\n                            })\r\n                        }\r\n                        inputComponent = <InputFileMultiple\r\n                            addMoreImage={() => this.addMoreImage(data.name)}\r\n                            inputFilesData={imagesData}\r\n\r\n                        />\r\n                    }\r\n\r\n                    else {\r\n                        /**\r\n                         * regular\r\n                         */\r\n                        inputComponent = <InputField\r\n                            onKeyUp={(value, id) => { this.onKeyUp(value, id, data.name) }}\r\n                            id={inputId} value={value}\r\n                            type={data.inputType} placeholder={data.lableName} />;\r\n                    }\r\n\r\n                    return (\r\n                        <div key={\"FORM-FIELD-\" + stringUtil.uniqueId()}>\r\n                            <Label text={data.lableName} />\r\n                            {inputComponent}\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n\r\n            {actionButtons}                \r\n        </div>\r\n\r\n        return (\r\n            <div className=\"entity-form-wrapper\">\r\n                {formFields}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntitiesWithCallback: (request, referer, callback) => dispatch(actions.getEntitiesWithCallback(request, referer, callback)),\r\n\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EntityForm))","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport '../../css/Management.css'\r\nimport '../../css/Entity.css'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport InputField from '../input/InputField'\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport EntityForm from './EntityForm';\r\nimport * as url from '../../constant/Url'\r\nimport Label from '../Label'\r\nimport GridComponent from '../layout/GridComponent'\r\nimport { TYPE_LONG_DATE, TYPE_STATIC_DROPDOWN, TYPE_MULTIPLE_IMAGE, TYPE_DATE } from '../../utils/EntityConfigurations'\r\n\r\nclass EntityList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: {},\r\n            activeId: null,\r\n            orderBy: null,\r\n            orderType: null\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are your sure for deleting this entity?\")) { return; }\r\n            console.log(\"Will DELETE: \", id)\r\n        }\r\n        this.handleEdit = (id) => {\r\n            this.getEntityById(id);\r\n        }\r\n        this.getHeaderNames = (fieldNames) => {\r\n            const headers = [];\r\n\r\n            if (fieldNames == null) {\r\n                this.props.backToDashboard();\r\n\r\n            } else\r\n\r\n                for (let i = 0; i < fieldNames.length; i++) {\r\n                    const name = fieldNames[i];\r\n                    let headerName = name.name;\r\n                    if (headerName.split(\".\").length > 1) {\r\n                        headerName = headerName.split(\".\")[0];\r\n                    }\r\n                    headers.push(headerName.toUpperCase());\r\n                }\r\n            headers.push(\"OPTION\");\r\n            return headers;\r\n        }\r\n\r\n        this.goToPage = (page, orderObject) => {\r\n            if (page > this.props.entitiesData.totalData / 10) {\r\n                page = 0;\r\n            }\r\n            if (page < 0) {\r\n                page = Math.ceil(this.props.entitiesData.totalData / 10 - 1);\r\n            }\r\n\r\n            let config = this.props.entityConfig;\r\n            config.filter = this.state.filter;\r\n            if (orderObject != null) {\r\n                config.orderBy = orderObject.orderBy;\r\n                config.orderType = orderObject.orderType;\r\n                this.setState({ orderBy: orderObject.orderBy, orderType: orderObject.orderType });\r\n            }\r\n\r\n            this.props.getEntityInPage(config, page);\r\n\r\n        }\r\n\r\n        this.getEntityById = (id) => {\r\n            const config = this.props.entityConfig;\r\n            if (config == null) {\r\n                alert(\"Config Not Found!\");\r\n                return;\r\n            }\r\n\r\n            this.props.getEntityById(config.entityName, id);\r\n        }\r\n\r\n        this.createNavButtons = () => {\r\n            let displayedButtons = componentUtil.createNavButtons(this.props.entitiesData.totalData / 10, this.props.currentPage);\r\n            return displayedButtons;\r\n        }\r\n\r\n        this.setOrderBy = (fieldName, orderType) => {\r\n            this.goToPage(this.props.currentPage, { orderBy: fieldName, orderType: orderType });\r\n        }\r\n\r\n        this.createFilterInputs = (fieldNames) => {\r\n            let inputs = new Array();\r\n\r\n            if (!fieldNames) {\r\n                return inputs;\r\n            }\r\n\r\n            for (let i = 0; i < fieldNames.length; i++) {\r\n                const fieldName = fieldNames[i];\r\n                let headerName = fieldName.name;\r\n                if (headerName.split(\".\").length > 1) {\r\n                    headerName = headerName.split(\".\")[0];\r\n                }\r\n\r\n                let value = \"\";\r\n\r\n                if (this.state.filter[headerName] != null) {\r\n                    value = this.state.filter[headerName];\r\n\r\n                }\r\n\r\n                let input = <InputField value={value} id={headerName + \"_filter_id\"}\r\n                    onKeyUp={this.handleFilterChange} key={\"input_field_\" + stringUtil.uniqueId()}\r\n                    placeholder={headerName} />\r\n\r\n                if (fieldName.type == TYPE_DATE || fieldName.type == TYPE_LONG_DATE) {\r\n                    const valueDay = this.state.filter[headerName + \"-day\"];\r\n                    const valueMonth = this.state.filter[headerName + \"-month\"];\r\n                    const valueYear = this.state.filter[headerName + \"-year\"];\r\n\r\n                    const inputDay = <InputField value={valueDay} id={headerName + \"-day_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_d\" + stringUtil.uniqueId()}\r\n                        placeholder={\"day\"} />;\r\n                    const inputMonth = <InputField value={valueMonth} id={headerName + \"-month_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_m\" + stringUtil.uniqueId()}\r\n                        placeholder={\"month\"} />;\r\n                    const inputYear = <InputField value={valueYear} id={headerName + \"-year_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_y\" + stringUtil.uniqueId()}\r\n                        placeholder={\"year\"} />;\r\n\r\n                    input = <GridComponent width=\"50px\" items={[inputDay, inputMonth, inputYear]} />\r\n                }\r\n\r\n\r\n                let orderType = \"asc\";\r\n                if (this.state.orderBy && this.state.orderBy == headerName) {\r\n                    if (this.state.orderType == \"asc\") {\r\n                        orderType = \"desc\";\r\n                    }\r\n                }\r\n\r\n\r\n                const orderButton = <ActionButton\r\n                    onClick={() => { this.setOrderBy(headerName, orderType) }}\r\n                    text={orderType} />\r\n\r\n                inputs.push(<div className=\"filter-wrapper\">\r\n                    {input}{orderButton}\r\n                </div>);\r\n            }\r\n            inputs.push(\"\");\r\n            return inputs;\r\n        }\r\n\r\n        this.handleFilterChange = (value, id) => {\r\n\r\n            let filter = this.state.filter;\r\n            if (value != null && value.trim() == \"\") {\r\n                filter[id.split(\"_filter_id\")[0]] = null;\r\n\r\n            } else {\r\n                filter[id.split(\"_filter_id\")[0]] = value;\r\n\r\n            }\r\n\r\n            this.setState({ filter: filter, activeId: id });\r\n            this.goToPage(this.props.currentPage);\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        const entitiesData = this.props.entitiesData;\r\n        const entityConfig = this.props.entityConfig;\r\n        console.log(\"1\");\r\n        if (null == entitiesData || null == entityConfig) {\r\n            return (<h2>Please Select One Of Menu</h2>)\r\n        }\r\n\r\n\r\n        if (null == entitiesData.entities) {\r\n            entitiesData.entities = [];\r\n        }\r\n\r\n        const rows = [\r\n            //header\r\n            {\r\n                values: this.getHeaderNames(entityConfig.fieldNames),\r\n                disabled: true,\r\n                style: { textAlign: 'center', fontWeight: 'bold' }\r\n            },\r\n            //filter\r\n            {\r\n                values: this.createFilterInputs(entityConfig.fieldNames),\r\n                disabled: true\r\n            }\r\n        ];\r\n\r\n\r\n        const entities = entitiesData.entities;\r\n        const idField = entityConfig.id;\r\n\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const entity = entities[i];\r\n            let rowValues = [];\r\n            for (let j = 0; j < entityConfig.fieldNames.length; j++) {\r\n                const fieldItem = entityConfig.fieldNames[j];\r\n                let entityProp = fieldItem.name;\r\n                let object = false\r\n\r\n                if (entityProp.split(\".\").length > 1) {\r\n                    entityProp = entityProp.split(\".\")[0];\r\n                    object = true;\r\n                }\r\n\r\n                let entityValue = entity[entityProp];\r\n                if (fieldItem.type) {\r\n                    if (fieldItem.type == \"number\") {\r\n                        entityValue = stringUtil.beautifyNominal(entityValue);\r\n                    } else if (fieldItem.type == \"link\") {\r\n                        entityValue = <a href={entityValue}><u>{entityValue}</u></a>\r\n                    } else if (fieldItem.type == \"image\") {\r\n                        entityValue = <img width=\"60\" height=\"60\" alt={url.baseImageUrl + entityValue} src={url.baseImageUrl + entityValue} />\r\n                    } else if (fieldItem.type == TYPE_MULTIPLE_IMAGE) {\r\n                        let imgName = entityValue.split(\"~\")[0];\r\n\r\n                        entityValue = <img width=\"60\" height=\"60\" src={url.baseImageUrl + imgName} />\r\n                    } else if (fieldItem.type == TYPE_LONG_DATE) {\r\n                        const dateStr = new Date(entityValue).toDateString();\r\n                        entityValue = <Label text={dateStr} />;\r\n                    } else if (fieldItem.type == TYPE_STATIC_DROPDOWN) {\r\n                        const options = fieldItem.options;\r\n\r\n                        options.forEach(opt => {\r\n                            if (opt.value == entityValue) {\r\n                                entityValue = opt.text;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                rowValues.push(object && entityValue ? entityValue[fieldItem.name.split(\".\")[1]] : entityValue);\r\n            }\r\n\r\n            rows.push(\r\n                {\r\n                    identifier: entity[idField],\r\n                    values: rowValues,\r\n                    handleDelete: this.handleDelete,\r\n                    handleEdit: this.handleEdit,\r\n                    disabled: entityConfig.disabled == true ? true : false\r\n                }\r\n            )\r\n        }\r\n\r\n        const buttonsData = this.createNavButtons();\r\n        const fixButtonData = new Array();\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + -1) },\r\n            text: 'previous'\r\n        })\r\n\r\n        for (let i = 0; i < buttonsData.length; i++) {\r\n            buttonsData[i].onClick = () => { this.goToPage(buttonsData[i].value) }\r\n            if (buttonsData[i].value == this.props.currentPage) {\r\n                buttonsData[i].status = \" btn-active\";\r\n            }\r\n            buttonsData[i].text = buttonsData[i].text;\r\n\r\n\r\n            fixButtonData.push(buttonsData[i]);\r\n        }\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + 1) },\r\n            text: 'next'\r\n        });\r\n\r\n        let navButtons = <ActionButtons style={{\r\n            backgroundColor: 'white',\r\n            paddingTop: '15px',\r\n            margin: '10px'\r\n        }} buttonsData={fixButtonData} />\r\n\r\n        let entityTable = <div className=\"entity-list-container\">\r\n\r\n            <InstantTable\r\n                style={{\r\n                    width: \"100%\",\r\n                    margin: \"5px\",\r\n                }}\r\n                rows={rows} />\r\n        </div>\r\n\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <div className=\"entity-container\">\r\n                    <div style={{\r\n                        backgroundColor: 'white',\r\n                        margin: '10px'\r\n                    }} > </div>\r\n                    {navButtons}\r\n                    <div className=\"entityForm\">\r\n                        <EntityForm\r\n                            addNew={this.props.addNew}\r\n                            app={this.props.app}\r\n                            updateEntity={this.props.updateEntity}\r\n                            removeManagedEntity={this.props.removeManagedEntity}\r\n                            managedEntity={this.props.managedEntity}\r\n                            entityConfig={entityConfig} />\r\n                    </div>\r\n                    {entityTable}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntityList;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Management.css'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ContentTitle from '../layout/ContentTitle'\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport EntityList from './EntityList';\r\nimport Tab from '../buttons/Tab';\r\n\r\nclass Management extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entityList: [],\r\n            currentPage: 0,\r\n            entityConfig: { entityName: \"main\" }\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n\r\n        this.backToDashboard = () => {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.getEntityInPage(this.state.entityConfig, this.state.currentPage);\r\n        }\r\n\r\n        this.loadEntityManagement = (config) => {\r\n            this.props.removeManagedEntity();\r\n\r\n            this.setState({ currentPage: 0, entityConfig: config });\r\n\r\n            this.props.setEntityConfig(config);\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n        }\r\n\r\n        this.gotoMainPage = () => {\r\n            this.props.resetManagementPage();\r\n            this.setState({ currentPage: 0, entityConfig: { entityName: \"main\" } });\r\n        }\r\n\r\n        this.getEntityInPage = (config, page) => {\r\n            this.setState({ currentPage: page });\r\n\r\n            const request = {\r\n                entityName: config.entityName,\r\n                page: page,\r\n                limit: 10,\r\n                entityConfig: config,\r\n                fieldsFilter: config.filter,\r\n                orderBy: config.orderBy,\r\n                orderType: config.orderType,\r\n            };\r\n\r\n            console.log(\"REQUEST: \", request)\r\n\r\n            this.props.getEntities(request, this.props.app);\r\n        }\r\n\r\n        this.checkIfCurrentMenuName = (name) => {\r\n            return this.state.entityConfig.entityName == name;\r\n        }\r\n\r\n        this.getButtonsData = () => {\r\n            return [\r\n                {\r\n                    text: \"#\",\r\n                    active: this.checkIfCurrentMenuName(\"main\"),\r\n                    onClick: () => { this.gotoMainPage() }\r\n                },\r\n                {\r\n                    text: \"Badan Pengurus\",\r\n                    active: this.checkIfCurrentMenuName(\"division\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.divisionConfig) }\r\n                },\r\n                {\r\n                    text: \"Divisi\",\r\n                    active: this.checkIfCurrentMenuName(\"section\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.sectionConfig) }\r\n                },\r\n                {\r\n                    text: \"Program Kerja\",\r\n                    active: this.checkIfCurrentMenuName(\"program\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.programConfig) }\r\n                },\r\n                {\r\n                    text: \"Kegiatan\",\r\n                    active: this.checkIfCurrentMenuName(\"event\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.eventConfig) }\r\n                },\r\n                {\r\n                    text: \"Posisi\",\r\n                    active: this.checkIfCurrentMenuName(\"position\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.positionConfig) }\r\n                },\r\n                {\r\n                    text: \"Anggota\",\r\n                    active: this.checkIfCurrentMenuName(\"member\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.memberConfig) }\r\n                },\r\n            ];\r\n        }\r\n\r\n        this.updateEntity = (name, entity, flag) => {\r\n            if (!window.confirm(\"Are you sure will update \" + name + \"?\")) {\r\n                return;\r\n            }\r\n\r\n            let newRecord = flag == \"addNew\";\r\n\r\n            this.props.updateEntity({ entityName: name, entity: entity, isNewRecord: newRecord }, this, function (ref) {\r\n                console.log(\"WILL CALLBACK\");\r\n                ref.callbackHandleUpdate();\r\n            });\r\n        }\r\n\r\n        this.getEntityById = (name, id) => {\r\n            this.props.getEntityById(name, id, this.props.app);\r\n        }\r\n        this.removeManagedEntity = () => {\r\n            this.props.removeManagedEntity();\r\n        }\r\n\r\n        this.callbackHandleUpdate = () => {\r\n            this.refresh();\r\n            this.removeManagedEntity();\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Management\";\r\n        this.props.setMenuCode(\"management\");\r\n    }\r\n\r\n    render() {\r\n        console.log(\"managedEntity: \", this.props.managedEntity);\r\n      \r\n\r\n        let entityList = this.props.entitiesData ? this.props.entitiesData.entities : [];\r\n        if (null == entityList) { entityList = []; }\r\n\r\n        let buttonsData = this.getButtonsData();\r\n\r\n        let content = <h2>Content</h2>\r\n\r\n        if (this.props.entitiesData.entityConfig == null) {\r\n            content = <div>\r\n                <h2>{\"Management Page\"}\r\n                </h2></div>\r\n        } else {\r\n            content = <EntityList currentPage={this.state.currentPage}\r\n                app={this.props.app}\r\n                getEntityInPage={this.getEntityInPage}\r\n                entityConfig={this.props.entitiesData.entityConfig}\r\n                entitiesData={this.props.entitiesData}\r\n                managedEntity={this.props.managedEntity}\r\n                getEntityById={this.getEntityById}\r\n                removeManagedEntity={this.removeManagedEntity}\r\n                updateEntity={this.updateEntity}\r\n                addNew={this.props.addNew}\r\n                backToDashboard={this.backToDashboard}\r\n            />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title={\"Management \" + (this.state.entityConfig.title ?\r\n                    this.state.entityConfig.title :\r\n                    this.props.entitiesData && this.props.entitiesData.entityConfig ?\r\n                        this.props.entitiesData.entityConfig.title : \"\")}\r\n\r\n                    description=\"master data management console\" />\r\n                <div className=\"management-container\">\r\n                    <Tab tabsData={buttonsData} />\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        entitiesData: state.managementState.entitiesData,\r\n        managedEntity: state.managementState.managedEntity,\r\n        addNew: state.managementState.addNew\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setEntityConfig:(config)=>dispatch(actions.setEntityConfig(config)),\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEntityById: (name, id, app) => {\r\n        let action = actions.getEntityById(name, id, app);\r\n        dispatch(action);\r\n    },\r\n    resetManagementPage : () =>dispatch(actions.resetManagementPage()),\r\n    removeManagedEntity: () => dispatch(actions.removeManagedEntity()),\r\n    updateEntity: (request, referer, callback) => dispatch(actions.updateEntity(request, referer, callback))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Management))","\nimport React, { Component } from 'react'; \nimport './App.css';\n\nimport Header from './components/layout/Header'\nimport Menu from './components/buttons/Menu'\nimport Home from './components/pages/Home'\nimport About from './components/pages/About'\nimport {  Route, Link, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'  \nimport Login from './components/pages/Login';\nimport Dashboard from './components/pages/Dashboard';\nimport * as menus from './constant/Menus'\nimport Message from './components/Message';\nimport Footer from './components/layout/Footer';\nimport SockJsClient from 'react-stomp';\nimport ChatRoom from './components/pages/ChatRoom';\nimport Management from './components/pages/Management'; \nimport { uniqueId } from './utils/StringUtil'; \nimport * as config from './utils/WebConfig'\nimport * as url from './constant/Url'\n\nconst hostCloud = url.hostCloud;\nconst hostLocal = url.hostLocal;\n\nconst usedHost = () => {\n    if (config.debugMode() == true)\n        return hostLocal;\n    else\n        return hostCloud;\n} \n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      detailMode: false,\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      enableShopping: false,\n      mainAppUpdated:new Date()\n    };\n\n    this.setDetailMode = (detailMode) => {\n      this.setState({ detailMode: detailMode });\n    }\n\n    this.setMenuCode = (code) => { \n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.setEnableShopping = (val) => {\n      this.setState({ enableShopping: val })\n    }\n\n    this.handleMenuCLick = (menu) => {\n      switch (menu.code) {\n\n        case menus.LOGOUT:\n          if (!window.confirm(\"Are you sure want to logout?\")) {\n            return;\n          }\n          this.props.performLogout(this);\n          break;\n\n        default:\n          break;\n      }\n\n\n    }\n\n\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n\n    this.startLoading = (realtime) => {\n      this.setState({ loading: true, realtime: realtime });\n    }\n    this.endLoading = () => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }\n\n    this.handleMessage = (msg) => {\n      let percentage = Math.floor(msg.percentage);\n      // this.startLoading(true);\n     \n      // if(msg.requestId != localStorage.getItem(\"requestId\")){\n      //   return;\n      // }\n\n      // if (msg.percentage < 0 || msg.percentage > 100) {\n      //   this.endLoading();\n      // }\n      // this.setState({ loadingPercentage: percentage });\n    }\n  }\n\n\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      localStorage.setItem(\"requestId\", this.props.requestId);\n      this.props.refreshLogin(this.props.loginStatus);\n    }\n\n    console.log(\"App componentDidUpdate LOGIN STATUS: \",this.props.loginStatus)\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    let additionalMenus = this.props.menus\n    let menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      let menu = additionalMenus[i];\n\n      if(!this.state.enableShopping && menu.code == 'cart')\n        continue;\n\n      if (this.props.loginStatus != true && menu.authenticated == true)\n        continue;\n\n      menus.push(menu);\n\n    }\n \n    return menus;\n\n  }\n\n  render() {\n\n    const header =  <Header app={this} title=\"MPI Monitoring\"   />;\n\n    if (!this.state.requestId) {\n      return (\n        <div key={uniqueId()}>\n          {header}\n          Please wait..\n        </div>\n      )\n    }\n\n    let loginComponent = <Login main={this} setMenuCode={this.setMenuCode}\n      setDetailMode={this.setDetailMode}\n      detailMode={this.state.detailMode}\n      doLogin={this.props.performLogin}\n      loginFailed={this.props.loginFailed}\n      loginAttempt={this.props.loginAttempt}\n      loginStatus={this.props.loginStatus}\n    />;\n\n    let loadingComponent = \"\";\n    if (this.state.loading == true) {\n      loadingComponent = <Message realtime={this.state.realtime} progress={this.state.loadingPercentage} text=\"Please wait...\" type=\"loading\" />;\n    }\n\n    let menus = this.setMenus();\n \n    \n    return (\n      <div className=\"App\">\n        {loadingComponent}\n        {header}\n        {/*this.props.loginStatus == true?\"Logged In\":\"Un Logged\"*/}\n      \n        <div id=\"main-layout\">\n          <div id=\"main-menu\">\n            <Menu loggedUser={this.props.loggedUser}\n              division = {this.props.division}\n              handleMenuCLick={this.handleMenuCLick}\n              activeCode={this.state.menuCode}\n              menus={menus} />\n          </div>\n         \n          <div id=\"main-content\" > \n            <Switch>\n              <Route exact path=\"/\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is default page\" />\n              } />\n              <Route exact path=\"/home\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is home page\" />\n              } />\n              \n              <Route exact path=\"/chatroom\" render={\n                (renderProps) =>\n                  <ChatRoom app={this} setMenuCode={this.setMenuCode} />\n              } />\n              <Route exact path=\"/about\" render={\n                (renderProps) =>\n                  <About setMenuCode={this.setMenuCode} />\n              }></Route>\n               \n               <Route exact path=\"/login\" render={\n                (renderProps) => loginComponent\n\n              }></Route>\n\n              {/*\n                     =============================\n                     ======== need login =========\n                     =============================\n                     */}\n              <Route exact path=\"/dashboard\" render={\n                (renderProps) =>\n                  <Dashboard app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n               <Route exact path=\"/management\" render={\n                (renderProps) =>\n                  <Management app={this} loginStatus={this.props.loginStatus}   setMenuCode={this.setMenuCode} />\n\n              }></Route>\n            </Switch>\n           \n          </div>\n         \n        </div>\n        <SockJsClient url={usedHost()+'/realtime-app'} topics={['/wsResp/progress']}\n          onMessage={(msg) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    entities: state.shopState.entities,\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    loginKey: state.userState.loginStatus,\n    loginFailed: state.userState.loginFailed,\n    menus: state.userState.menus,\n    loggedUser: state.userState.loggedUser,\n    loginAttempt: state.userState.loginAttempt,\n    requestId: state.userState.requestId,\n    division: state.userState.division,\n    cart: state.shopState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogin: (username, password, app) => dispatch(actions.performLogin(username, password, app)),\n  performLogout: (app) => dispatch(actions.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.requestAppId(app)),\n  refreshLogin: (loginStatus) => dispatch(actions.refreshLoginStatus(loginStatus))\n  // getProductCatalog: (page) => dispatch(actions.getProductList(page))\n\n})\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = {\r\n    catalogData: {},\r\n    entities: [],\r\n    entity: {},\r\n    categories: [],\r\n    suppliersData: [], \r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {  \r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ };   \r\n        case types.SEND_MESSAGE:\r\n            return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities }; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nexport const menus = [\r\n  {\r\n    code:\"home\",\r\n    name:\"Home\",\r\n    url:\"home\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"catalog\",\r\n    name:\"Catalog\",\r\n    url:\"catalog\",\r\n    active: false,\r\n     authenticated: false\r\n  } ,\r\n  {\r\n    code:\"about\",\r\n    name:\"About\",\r\n    url:\"about\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"chatroom\",\r\n    name:\"Chat Room\",\r\n    url:\"chatroom\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"login\",\r\n    name:\"Login\",\r\n    url:\"login\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"dashboard\",\r\n    name:\"Dashboard\",\r\n    url:\"dashboard\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"management\",\r\n    name:\"Management\",\r\n    url:\"management\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"logout\",\r\n    name:\"Logout\",\r\n    url:\"#\",\r\n    active: false,\r\n    authenticated: true\r\n  }\r\n];\r\n","import * as types from './types'\r\nimport * as menus from '../utils/HardCodedEntites'\r\nimport * as menuCodes from '../constant/Menus'\r\nimport { initialState } from './reducers';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menus.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    divisions: null,\r\n    division: null,\r\n    requestId: null\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    let updatedMenus = new Array();\r\n    if (action.payload) {\r\n\r\n        let loggedIn = action.payload && action.payload.loginStatus == true;\r\n        for (let index = 0; index < menus.menus.length; index++) {\r\n            const menu = menus.menus[index];\r\n            if (loggedIn && menu.code == menuCodes.LOGIN) { continue; }\r\n\r\n            if (menu.authenticated == false) {\r\n                updatedMenus.push(menu);\r\n            } else {\r\n                if (loggedIn) { updatedMenus.push(menu); }\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case types.DO_LOGIN:\r\n            let result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                localStorage.setItem(\"loginKey\", result.loginKey);\r\n                localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n                result.divisions = action.payload.divisions\r\n            }\r\n\r\n           \r\n            return result;\r\n        case types.REQUEST_ID:\r\n            result = { ...state, requestId: action.payload.message };\r\n\r\n            if (action.payload.loggedIn != true) {\r\n                \r\n                result.loginStatus = false;\r\n                result.loggedUser = null; \r\n\r\n            }else{\r\n                \r\n                if(action.payload.sessionData){\r\n                    \r\n                    result.division = action.payload.sessionData.division;\r\n                    result.loggedUser = action.payload.sessionData.user;\r\n                    result.loginStatus = action.payload.loggedIn;\r\n                }\r\n            }\r\n\r\n           console.log(\"o o o result.loginStatus:\",result.loginStatus)\r\n          //  action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                division:null,\r\n                loggedUser: null\r\n            };\r\n            localStorage.removeItem(\"loginKey\");\r\n            localStorage.removeItem(\"loggedUser\");\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n\r\n            return result;\r\n        case types.GET_DIVISIONS:\r\n            if(action.payload.invalidSession != true){\r\n                result = {\r\n                    ...state,\r\n                    divisions: action.payload.divisions,\r\n                }; \r\n            }else{\r\n                result = {\r\n                    ...state,\r\n                    divisions: [],\r\n                    loggedUser: null,\r\n                    loginStatus: false\r\n                };\r\n            }\r\n           \r\n            \r\n            return result;\r\n        case types.SELECT_DIVISION:\r\n            result = {\r\n                ...state,\r\n                division: action.payload.entity,\r\n            };\r\n            return result;\r\n        default:\r\n            if (action.payload && action.payload.loginStatus != null)\r\n                return { ...state, menus: updatedMenus };\r\n            else {\r\n                return { ...state };\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport { nullLiteral } from '@babel/types';\r\n\r\nexport const initState = {\r\n    productFlowStock: null,\r\n    productFlowStocks: null,\r\n    transactionData: null,\r\n    successTransaction: false,\r\n    customersData: null,\r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n\r\n    switch (action.type) { \r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as entityUtil from '../utils/EntityConfigurations'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    events: [],\r\n    addNew: false\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, addNew: false, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, addNew: false, managedEntity: null };\r\n        case types.GET_EVENTS_BY_DATE:\r\n\r\n            if (action.payload.entities)\r\n                return { ...state, events: action.payload.entities };\r\n        case types.ADD_EVENT_FROM_TIMELINE:\r\n\r\n            const eventsData = { entityConfig: entityUtil.eventConfig };\r\n            console.log(\"EVENTS DATA: \", eventsData);\r\n            return {\r\n                ...state, addNew: true, managedEntity: action.payload.entity,\r\n                entitiesData: eventsData\r\n            };\r\n        case types.RESET_MANAGEMENT_PAGE:\r\n\r\n            return initState;\r\n        case types.SET_ENTITY_CONFIG:\r\n            const entitiesData = state.entitiesData;\r\n\r\n            entitiesData.entityConfig = action.payload.entityConfig;\r\n            entitiesData.entities = [];\r\n\r\n            return { ...state, entitiesData: entitiesData };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\"\r\nimport * as managementReducer from \"./managementReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer,\r\n        managementState: managementReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState,\r\n    managementState: managementReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as actionCreator from './actionCreators';\r\nimport * as types from './types';\r\nimport * as config from '../utils/WebConfig'\r\nimport * as stringUtil from '../utils/StringUtil';\r\nimport * as rc from '../constant/ResponseCode'\r\n\r\nconst commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\")\r\n    }\r\n};\r\nconst POST_METHOD = \"POST\";\r\nconst TIMEOUT = 100000;\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            removeEntityMiddleware,\r\n\r\n            //user related\r\n            performLoginMiddleware,\r\n            performLogoutMiddleware,\r\n            refreshLoginStatusMiddleware,\r\n            getDivisionsMiddleware,\r\n\r\n            //transaction   \r\n            selectDivisionMiddleware,\r\n            getEventByDateMiddleware,\r\n            requestAppIdMiddleware,\r\n\r\n            storeChatMessageLocallyMiddleware,\r\n            getMessagesMiddleware,\r\n            sendChatMessageMiddleware,\r\n\r\n            /*enntity management*/\r\n            getEntityListMiddleware,\r\n            getEntityByIdMiddleware,\r\n            updateEntityMiddleware,\r\n            removeManagedEntityMiddleware,\r\n            addEventFromTimelineMiddleware,\r\n            resetManagementPageMiddleware,\r\n            setEntityConfigMiddleware,\r\n\r\n            getEntitiesWithCallbackMiddleware\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\nfunction timeout(ms, promise) {\r\n    return new Promise(function (resolve, reject) {\r\n        setTimeout(function () {\r\n            reject(new Error(\"timeout\"))\r\n        }, ms)\r\n        promise.then(resolve, reject)\r\n    })\r\n}\r\n\r\nconst getEntitiesWithCallbackMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_WITH_CALLBACK) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n\r\n            action.meta.callback(data, action.meta.referer);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst updateEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_ENTITY) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response updateEntityMiddleware:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error Update Entity!\");\r\n                return;\r\n            }\r\n            alert(\"Update Success!\");\r\n            const callback = action.meta.callback;\r\n            const referer = action.meta.referer;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            callback(referer);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityByIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_BY_ID) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                data.entitie = [];\r\n            }\r\n            data.entityConfig = action.meta.entityConfig;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst sendChatMessageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SEND_MESSAGE) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            data.username = action.payload.username;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst addEventFromTimelineMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.ADD_EVENT_FROM_TIMELINE) { return next(action); }\r\n\r\n    let eventEntity = {\r\n        date: stringUtil.dateInputVal(action.payload.day, action.payload.month, action.payload.year)\r\n    };\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entity: eventEntity } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst setEntityConfigMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_ENTITY_CONFIG) { return next(action); }\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entityConfig: action.payload.entityConfig } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst removeManagedEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_MANAGED_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetManagementPageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_MANAGEMENT_PAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n\r\nconst requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = commonAuthorizedHeader();\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    })).then(response => response.json())\r\n        .then(data => { \r\n            console.debug(config.debugMode(), \"requestAppIdMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n\r\n            data.referer = action.meta.app;\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.error(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst getEventByDateMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_EVENTS_BY_DATE) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            data = (data);\r\n\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst selectDivisionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SELECT_DIVISION) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"selectDivisionMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getDivisionsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_DIVISIONS) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"getDivisionsMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(data.message);\r\n                if (data.code == rc.CODE_INVALID_SESSION) {\r\n                    data.invalidSession = true;\r\n                } else {\r\n                    if (data.divisions == null) {\r\n                        alert(\"Server Error\")\r\n                        return;\r\n                    }\r\n                    return;\r\n                } \r\n            }\r\n \r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }))\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n            responseJson = (responseJson);\r\n\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            responseJson = (responseJson);\r\n\r\n            let loginKey = \"\";\r\n            let loginSuccess = false;\r\n\r\n            if (responseJson.code != null && responseJson.code == \"00\") {\r\n                for (var pair of response.headers.entries()) {\r\n                    if (pair[0] == \"loginkey\") {\r\n                        loginKey = pair[1];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                loginSuccess = true;\r\n\r\n            }\r\n\r\n            console.log(\"LOGIN SUCCESS: \", loginSuccess);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user,\r\n                    divisions: responseJson.divisions,\r\n                    division: responseJson.sessionData ? responseJson.sessionData.division : null\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    }\r\n\r\n    let loggedUser = null;\r\n    if (localStorage.getItem(\"loggedUser\")) {\r\n        loggedUser = (localStorage.getItem(\"loggedUser\"));\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload: {\r\n            loginStatus: action.payload.loginStatus,\r\n            loginKey: localStorage.getItem(\"loginKey\"),\r\n            loggedUser: JSON.parse(loggedUser)\r\n        }\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\n\r\nexport default configureStore;","export const CODE_INVALID_SESSION = \"02\";","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}