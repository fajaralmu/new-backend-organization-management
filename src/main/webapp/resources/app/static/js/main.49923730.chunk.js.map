{"version":3,"sources":["utils/StringUtil.js","components/layout/GridComponent.js","components/buttons/ToggleButton.js","utils/WebConfig.js","components/layout/Header.js","constant/Url.js","components/buttons/Menu.js","constant/Menus.js","components/layout/ContentTitle.js","components/pages/Home.js","components/buttons/ActionButtons.js","components/CrudRow.js","components/layout/InstantTable.js","components/pages/About.js","redux/actionCreators.js","redux/types.js","utils/ComponentUtil.js","components/input/InputField.js","components/buttons/ActionButton.js","components/Label.js","components/Message.js","components/pages/Login.js","components/buttons/Tab.js","components/input/ComboBox.js","components/pages/DashboardMain.js","constant/TimelineConstant.js","components/card/Card.js","components/pages/FullCalendar.js","utils/EntityConfigurations.js","components/pages/Timeline.js","components/pages/Dashboard.js","components/layout/Footer.js","components/ChatList.js","components/pages/ChatRoom.js","components/input/DropdownItem.js","components/input/InputDropdown.js","components/input/InputFile.js","components/input/InputFileMultiple.js","components/pages/EntityForm.js","components/pages/EntityList.js","components/pages/Management.js","App.js","redux/shopReducer.js","utils/HardCodedEntites.js","redux/userReducer.js","redux/transactionReducer.js","redux/managementReducer.js","redux/reducers.js","redux/configureStore.js","constant/ResponseCode.js","Root.js","serviceWorker.js","index.js"],"names":["index","uniqueId","string","Date","getUTCMilliseconds","beautifyNominal","val","nominal","result","length","zero","i","isNonNullArrayWithIndex","array","months","GridComponent","props","items","this","width","repeat","cols","gridAutoColumns","msGridAutoColumns","style","display","verticalAlign","gridTemplateColumns","msGridColumns","map","item","msGridColumn","key","Component","ToggleButton","state","active","onClick","e","setState","outerClass","innerClass","fontSize","className","text","debugMode","console","log","localStorage","getItem","Header","handleClick","setItem","app","componentDidMount","isDebugMode","title","rootValue","document","getElementById","value","hostLocal","concat","hostCloud","baseImageUrl","config","logoUrl","url","Menu","userLink","divisionInfo","division","name","loggedUser","id","appIcon","src","renderedMenus","icon","menus","handleMenuCLick","activeCode","code","to","LOGOUT","ContentTitle","description","Home","setMenuCode","content","ActionButtons","buttonsData","buttonData","status","stringUtil","CrudRow","handleEdit","identifier","handleDelete","values","Array","newValues","CS","RS","colspan","rowspan","push","trStyle","borderTop","actionButton","disabled","valign","Cells","rowSpan","colSpan","InstantTable","rows","tableStyle","row","About","padding","fontFamily","margin","usedHost","apiEntityBaseUrl","apiAccount","apiAdmin","getEntityList","request","startLoading","type","payload","entity","entityName","filter","limit","page","fieldsFilter","orderBy","orderType","meta","entityConfig","_byId","createNavButtons","totalButton","currentPage","Math","ceil","min","max","InputField","handleKeyup","onKeyUp","target","onChange","placeholder","inputField","checked","ActionButton","Label","Message","timer","intervalId","update","clearInterval","endMessage","withTimer","setInterval","messageText","msgStyle","realtime","floor","progress","textAlign","Login","username","password","showMessageLoginFailed","handleUsername","handlePassword","doLogin","main","validateLoginStatus","loginStatus","history","message","loginFailed","withRouter","Tab","tabsData","autoColumns","gap","borderBottom","tabData","React","ComboBox","handleOnChange","options","defaultValue","option","DashboardMain","onDivisionListChange","divisionId","selectDivision","divionOptions","divisions","forEach","month","day","Card","titleStyle","height","backgroundRepeat","backgroundColor","backgroundImage","backgroundSize","FullCalendar","selectedMonth","getMonth","inputYearValue","getFullYear","activeId","selectedDay","calendarData","days","month_now","begin","week","dayCount","info","begin_old","year_now","input_month","date_info","running_month","running_year","filterDayId","filterMonthId","dateFormId","entity_Name","entity_Prop","setSelectedMonth","refresh","changeInputYear","createTable","r","getEventByDate","year","getEventDetail","updateFields","focus","loadCalendar","dateID","filterStr","fillDay","setCalendar","updated","doSetCalendar","diff_year","abs","monthCount","less","current_month","endMonth","begin_month","b","prevMonth","m","nextMonth","fillInfo","timeLineConstant","detail","doPrevMonth","prev","begin_prev","findBegin","switch_","doNextMonth","next","begin_old_","totalday","M","begin_prev_","D","val2","data","getDate","getYear","now","strDate","dateAcceptableForHtmlInput","addZero","Val","Min","N","String","MinStr","ValLength","Diff","clear","begin_new","week_","day_","isNow","d","setElementByAttr","selectedYear","totalCalendarData","element","minHeight","marginBottom","events","eventList","event","dateInfoText","TYPE_LONG_DATE","TYPE_DATE","divisionConfig","fieldNames","lableName","formData","inputType","reffEntity","idField","displayField","sectionConfig","programConfig","eventStatus","eventConfig","positionConfig","memberConfig","Timeline","detailView","detailEvents","date","addEvent","getEntities","addEventFromTimeline","y","eventDate","toString","done","location","participant","eventCard","connect","managementState","userState","dispatch","actions","Dashboard","getButtonsData","menu","getDivisons","Footer","version","ChatItem","admin","sender","senderComponent","marginLeft","float","color","ChatRoom","messages","sendChatMessage","alert","handleMessage","response","storeChatMessageLocally","entities","changeUsername","getMessages","userAlias","shopState","DropdownItem","hover","innerHTML","onHover","unHover","onMouseLeave","onMouseOver","InputDropdown","hoverIndex","onBlur","onSelect","dataValue","dropdownList","dropdownComponent","onFocus","InputFile","base64Data","file","referer","callback","reader","FileReader","readAsDataURL","files","onload","onerror","error","componentUtil","removeImage","displayImage","trim","accept","InputFileMultiple","handleAddMoreFile","addMoreImage","inputFields","inputFilesData","inputFileData","base64","includes","inputId","EntityForm","managedEntity","formValues","dropdownValues","selectedEntities","base64DataMultiple","validateEntity","formDataItem","getFormDataItemStartWith","arrayOfValues","split","resultValue","updatedValue","join","handleSubmit","addFromOtherPage","addNew","updateEntity","focusActiveId","propName","updateSelectedEntity","removeManagedEntity","populateDropdown","entityname","fieldname","fieldvalue","fieldName","fieldValue","getEntitiesWithCallback","onKeyUpDynamicDropdown","populateDropdownValues","currentDropdownValue","getFormDataItem","getSelectedDropdownItem","formDataList","currentValue","handleRemoveImage","handleChangeBase64Image","handleChangeBase64MultipleImage","propNameRaw","removeElementAtPosition","handleRemoveMultipleImage","newArrayValue","selectFromDynamicDropdown","currentDropdownList","selectedOption","displayPropName","handleStaticDropdownChange","entityExist","actionButtons","formFields","parentPropName","valueAsObject","objectPropName","inputComponent","valueSplit","imagesData","valueSplitItem","requested","EntityList","window","confirm","getEntityById","getHeaderNames","headers","backToDashboard","headerName","toUpperCase","goToPage","orderObject","entitiesData","totalData","getEntityInPage","setOrderBy","createFilterInputs","inputs","input","handleFilterChange","valueDay","valueMonth","valueYear","inputDay","inputMonth","inputYear","orderButton","fontWeight","rowValues","j","fieldItem","entityProp","object","entityValue","href","alt","imgName","dateStr","toDateString","opt","fixButtonData","navButtons","paddingTop","entityTable","Management","entityList","loadEntityManagement","setEntityConfig","gotoMainPage","resetManagementPage","checkIfCurrentMenuName","flag","newRecord","isNewRecord","ref","callbackHandleUpdate","action","App","detailMode","menuCode","loading","loadingPercentage","requestId","enableShopping","mainAppUpdated","setDetailMode","setEnableShopping","performLogout","requestAppId","endLoading","msg","percentage","refreshLogin","additionalMenus","authenticated","header","loginComponent","performLogin","loginAttempt","loadingComponent","setMenus","exact","path","render","renderProps","topics","onMessage","client","clientRef","loginKey","cart","user","initState","catalogData","categories","suppliersData","getTime","reducer","updatedMenus","loggedIn","JSON","stringify","sessionData","removeItem","invalidSession","productFlowStock","productFlowStocks","transactionData","successTransaction","customersData","productsData","cashflowInfoOut","cashflowInfoIn","cashflowDetail","productSalesData","productSalesDetails","transactionYears","eventsData","entityUtil","rootReducer","combineReducers","shopReducer","userReducer","transactionState","transactionReducer","managementReducer","initialState","commonAuthorizedHeader","timeout","ms","promise","Promise","resolve","reject","setTimeout","Error","then","getEntitiesWithCallbackMiddleware","store","fetch","method","body","json","newAction","Object","assign","catch","err","finally","param","updateEntityMiddleware","debug","getEntityByIdMiddleware","getEntityListMiddleware","getMessagesMiddleware","sendChatMessageMiddleware","addEventFromTimelineMiddleware","dd","mm","yyyy","eventEntity","setEntityConfigMiddleware","storeChatMessageLocallyMiddleware","removeManagedEntityMiddleware","resetManagementPageMiddleware","requestAppIdMiddleware","getEventByDateMiddleware","selectDivisionMiddleware","getDivisionsMiddleware","performLogoutMiddleware","all","responseJson","logoutSuccess","performLoginMiddleware","loginSuccess","entries","pair","refreshLoginStatusMiddleware","parse","removeEntityMiddleware","configureStore","createStore","applyMiddleware","Root","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49923730.chunk.js","sourcesContent":["let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tlet nominal = \"\" + val;\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"...\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\n\r\nexport const dateInputVal = function (dd, mm, yyyy) {\r\n \r\n\tlet month = +mm < 10 ? \"0\" + mm : mm;\r\n\tlet day = +dd < 10 ? \"0\" + dd : dd;\r\n\r\n\treturn yyyy + \"-\" + month + \"-\" + day;\r\n}","import React, { Component } from 'react'\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\nclass GridComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let items = [];\r\n        if (this.props.items) {\r\n            items = this.props.items;\r\n        }\r\n        const width = this.props.width ? this.props.width : \"auto \";\r\n        const repeat = this.props.cols ? this.props.cols : items.length;\r\n        const gridAutoColumns =  width.repeat(repeat);\r\n        const msGridAutoColumns = width == \"auto\"? \"1fr\".repeat(repeat) : width.repeat(repeat);\r\n        let i = 1;\r\n\r\n        return (\r\n            <div style={{\r\n                ...this.props.style,\r\n                display: 'grid', \r\n                verticalAlign: 'middle',\r\n                gridTemplateColumns: gridAutoColumns,\r\n                msGridColumns: msGridAutoColumns, \r\n            }} >\r\n                {items.map(item => {\r\n\r\n                    let style = {\r\n                        msGridColumn: i \r\n                    }\r\n                    i++;\r\n                    if(i > repeat){\r\n                        i = 1;\r\n                    } \r\n                    \r\n\r\n                    return <div key={uniqueId()} style={style}>{item}</div>;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GridComponent;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Button.css'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\nclass ToggleButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active:false\r\n        }\r\n\r\n        this.onClick = (e) => {\r\n            this.setState({active:!this.state.active})\r\n            if(this.props.onClick){\r\n                this.props.onClick(e);\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let outerClass = \"toggle-outer\";\r\n        let innerClass = \"toggle-inner\";\r\n\r\n        if(!this.props.active || this.props.active==false){\r\n            outerClass+=\" outer-inactive\";\r\n            innerClass+=\" inner-inactive\";\r\n        }\r\n\r\n        return (\r\n            <div style={{fontSize:'13px'}}>\r\n                <GridComponent items={[\r\n                    <div key={uniqueId()} onClick={this.onClick} className={outerClass}>\r\n                        <div  className={innerClass} ></div></div>,\r\n                    <span  key={uniqueId()}>{this.props.text}</span>\r\n                ]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleButton;","export const debugMode = () => {\r\n    console.log(\"localStorage.getItem(\\\"debugMode\\\")\",localStorage.getItem(\"debugMode\"));\r\n    return localStorage.getItem(\"debugMode\") && localStorage.getItem(\"debugMode\") == \"true\";\r\n}","import React, { Component } from 'react';\r\nimport '../../css/Header.css'\r\nimport ToggleButton from '../buttons/ToggleButton';\r\nimport * as config from '../../utils/WebConfig'\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            debugMode:true\r\n        }\r\n        this.handleClick = (e) => {\r\n            this.setState({ debugMode: !this.state.debugMode })\r\n            if (this.state.debugMode == true) {\r\n                localStorage.setItem(\"debugMode\", \"true\");\r\n            } else {\r\n                localStorage.setItem(\"debugMode\", \"false\");\r\n            }\r\n            console.log(\"ccc localStorage.setItem(\\\"debugMode\\\")\", localStorage.getItem(\"debugMode\"));\r\n            this.props.app.componentDidMount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const debugMode =  localStorage.getItem(\"debugMode\");\r\n        const isDebugMode =  localStorage.getItem(\"debugMode\") == \"true\";\r\n        return (\r\n            <div key={uniqueId()} className=\"App-header\">\r\n                {this.props.title}\r\n                <ToggleButton active={isDebugMode} onClick={this.handleClick} text={\"Debug Mode: \"+debugMode} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import * as config from '../utils/WebConfig'\r\n \r\nconst rootValue = document.getElementById(\"rootPath\").value == \"${basePath}\" ?\r\n     \"/organization-management\" : document.getElementById(\"rootPath\").value;\r\n\r\nexport const hostLocal =\"http://localhost:8080\".concat(rootValue);\r\nexport const hostCloud = (rootValue);\r\nexport const baseImageUrl = config.debugMode()==true?hostLocal:hostCloud;\r\n ","import React, { Component } from 'react'\r\nimport '../../css/Menu.css'\r\nimport '../../css/Common.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst logoUrl = url.baseImageUrl+\"/res/img/transparent.png\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n        let userLink = \"\";\r\n        let divisionInfo = null;\r\n        if (this.props.division) {\r\n            divisionInfo = <div className=\"fill\" >{this.props.division.name} </div>;\r\n        }\r\n\r\n        if (this.props.loggedUser != null) {\r\n            userLink = <li id=\"user-link\">\r\n                <div className=\"fill\" >{\"Welcome, \" + this.props.loggedUser.name} </div>\r\n                {divisionInfo}\r\n            </li>\r\n        }\r\n\r\n        let appIcon = <li><img src={logoUrl} style={{ width: '90%' }} /></li>;\r\n\r\n        let renderedMenus = [{\r\n            icon: true,\r\n            url: logoUrl\r\n        }];\r\n\r\n\r\n        if (this.props.menus != null) {\r\n            renderedMenus = this.props.menus;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"side-menu\" >\r\n                < ul className=\"menu-ul \" >\r\n                    {appIcon}\r\n                    {userLink}\r\n                    {\r\n                        renderedMenus.map(\r\n                            e => {\r\n                                if (e.url == \"#\") {\r\n                                    return (<li onClick={() => this.props.handleMenuCLick(e)} className={this.props.activeCode == e.code ? \"active\" : \"\"} key={e.name}\r\n                                        id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                            to=\"#\" ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                    )\r\n                                }\r\n                                return (<li className={this.props.activeCode == e.code ? \"menu-active\" : \"\"} key={e.name}\r\n                                    id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                        to={e.url} ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                )\r\n                            }\r\n                        )\r\n                    } </ul>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","export const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const SUPPLIERLIST = \"supplierlist\";","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Content.css'\r\n\r\nclass ContentTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let title = this.props.title ? this.props.title : \"\";\r\n        let description = this.props.description ? this.props.description : \"\";\r\n        return (\r\n            <div className=\"content-title\">\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentTitle;","import React, { Component } from 'react'\r\nimport '../../css/Home.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nimport * as url from '../../constant/Url'\r\nconst logoUrl = url.baseImageUrl + \"/res/img/mpi.png\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Mahasiswa Pencinta Islam\";\r\n        this.props.setMenuCode(menus.HOME);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"Welcome!\" description=\r\n                    {this.props.content} />\r\n                <div className=\"article-content\">\r\n                    <h2 >Admin Console Mahasiswa Pencinta Islam</h2>\r\n                    <img src={logoUrl} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport '../../css/Button.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ActionButtons extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let className = \"action-button-wrapper\";\r\n        if(this.props.className){\r\n            className += \" \"+this.props.className;\r\n        }\r\n        return (\r\n            <div style={this.props.style ? this.props.style : {}} className={className}  >\r\n                {this.props.buttonsData.map(buttonData => {\r\n                    let className = \"action-button rounded\";\r\n                    if (buttonData.status != null) {\r\n                        className =\r\n                            className.concat(\" \").concat(buttonData.status).concat(\" \").concat(buttonData.className);\r\n                    }\r\n                    return (\r\n                        <button style={{...buttonData.style}} \r\n                        className={className} key={\"btnKey-\" + stringUtil.uniqueId()}\r\n                         onClick={buttonData.onClick}>{buttonData.text?buttonData.text:\"\"}</button>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ActionButtons;","import React, { Component } from 'react'\r\nimport ActionButtons from './buttons/ActionButtons';\r\nimport * as stringUtil from '../utils/StringUtil'\r\n\r\nclass CrudRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleEdit = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleEdit(this.props.identifier);\r\n            }\r\n        }\r\n        this.handleDelete = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleDelete(this.props.identifier);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let values = this.props.values;\r\n        const defaultRowColSpan = 1;\r\n        if (null == values) {\r\n            values = new Array();\r\n        } else {\r\n            let newValues = new Array();\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (this.props.CS || this.props.RS) {\r\n                    let colspan = stringUtil.isNonNullArrayWithIndex(this.props.CS, i) ?\r\n                        this.props.CS[i] : defaultRowColSpan;\r\n                    let rowspan = stringUtil.isNonNullArrayWithIndex(this.props.RS, i) ?\r\n                        this.props.RS[i] : defaultRowColSpan;\r\n                    newValues.push({ value: value, colspan: colspan, rowspan: rowspan });\r\n                } else\r\n                    newValues.push({ value: value });\r\n            }\r\n            values = newValues;\r\n        }\r\n\r\n        let trStyle = this.props.style ? this.props.style : {\r\n            borderTop: 'solid 1px gray',\r\n        };\r\n        let actionButton = <td style={trStyle}>\r\n            <ActionButtons buttonsData={[\r\n                {\r\n                    id: \"k-btn-edit-\" + this.props.identifier,\r\n                    status: 'warning',\r\n                    onClick: this.handleEdit,\r\n                    text: \"Edit\"\r\n                },\r\n                {\r\n                    id: \"k-btn-dlt-\" + this.props.identifier,\r\n                    status: 'danger',\r\n                    onClick: this.handleDelete,\r\n                    text: \"Delete\"\r\n                }\r\n            ]} />\r\n        </td>;\r\n\r\n        if (this.props.disabled == true) {\r\n            actionButton = null;\r\n            trStyle = this.props.style ? this.props.style : {};\r\n        }\r\n      \r\n        return (\r\n            <tr style={trStyle} key={stringUtil.uniqueId()}\r\n                valign={this.props.valign}>\r\n                <Cells values={values} trStyle={trStyle} />\r\n                {actionButton}</tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst Cells = (props) => { \r\n\r\n    let values = props.values;\r\n\r\n    return  values.map(value => { \r\n        \r\n        return (\r\n            <td key={ stringUtil.uniqueId()} id={ stringUtil.uniqueId()} \r\n                style={props.trStyle} rowSpan={value.rowspan} \r\n                colSpan={value.colspan}>\r\n                {value.value}\r\n            </td>\r\n        )\r\n    });\r\n}\r\n\r\nexport default CrudRow;","import React, { Component } from 'react'\r\nimport CrudRow from '../CrudRow';\r\nimport '../../css/Common.css'\r\nimport '../../css/InstantTable.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass InstantTable extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let rows = [];\r\n        if (this.props.rows) { rows = this.props.rows; }\r\n        let className = \"table\";\r\n        let tableStyle = this.props.style ? this.props.style : {};\r\n        if (this.props.className) {\r\n            className += \" \" + this.props.className;\r\n        }\r\n        return (\r\n            <table style={tableStyle} className={className}><tbody>\r\n                {rows.map(row => {\r\n                    let disabled = row.disabled == false? false:true;\r\n                  \r\n                    \r\n                    return (\r\n                        <CrudRow\r\n                            style={row.style}\r\n                            valign={this.props.valign ? this.props.valign : \"top\"}\r\n                            RS={row.RS}\r\n                            identifier={row.identifier ? row.identifier : \"0000\"}\r\n                            handleEdit={row.handleEdit}\r\n                            handleDelete={row.handleDelete}\r\n                            CS={row.CS}\r\n                            values={row.values ? row.values : []}\r\n                            key={stringUtil.uniqueId()}\r\n                            disabled={disabled}\r\n                        />\r\n                    )\r\n                })}\r\n            </tbody></table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstantTable;","import React, { Component } from 'react'\r\nimport '../../css/About.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport * as url from '../../constant/Url'\r\nimport '../../css/Common.css'\r\nimport ContentTitle from '../layout/ContentTitle' \r\n\r\nconst logoUrl = url.baseImageUrl + \"/res/img/asp.png\";\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n        this.props.setMenuCode(menus.ABOUT);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container about-section  \" >\r\n                <ContentTitle title=\"About Us\" />\r\n                <div className=\" abount-content\" style={{\r\n                    padding: '5px',\r\n                    width: '90%',\r\n                    fontFamily: 'Consolas', margin: '5px'\r\n                }}>\r\n                    <InstantTable\r\n                        rows={[\r\n                            { values: [\"Name\", \"Organization Management Admin\"] },\r\n                            { values: [\"Version\", \"1.0.0\"] },\r\n                            { values: [\"Description\", \"managing your organization activities effectively\"] },\r\n\r\n\r\n                        ]} />\r\n                    <h2>Powered By</h2>\r\n                    <img style={{ width: '50%' }} src={logoUrl} />\r\n                </div></div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import * as types from './types'\r\nimport * as config from '../utils/WebConfig'\r\nimport * as url from '../constant/Url'\r\n\r\nconst hostCloud = url.hostCloud+\"/api/\";\r\nconst hostLocal = url.hostLocal+\"/api/\";\r\n\r\nconst usedHost = () => {\r\n    if (config.debugMode() == true)\r\n        return hostLocal;\r\n    else\r\n        return hostCloud;\r\n} \r\nconst apiBaseUrl  = () => usedHost() + \"public/\";\r\nconst apiEntityBaseUrl  = () => usedHost() + \"management/\"\r\nconst apiAccount = () => usedHost() + \"account/\"\r\nconst apiAdmin = () => usedHost() + \"admin/\" \r\n\r\nexport const addEventFromTimeline = (day,month,year) => {\r\n    return { type: types.ADD_EVENT_FROM_TIMELINE, payload: {\r\n        day:day,\r\n        month:month,\r\n        year:year\r\n    }, meta: { type: types.ADD_EVENT_FROM_TIMELINE } };\r\n}\r\n\r\nexport const setEntityConfig = (entityConfig) => {\r\n    return { type: types.SET_ENTITY_CONFIG, payload: {\r\n        entityConfig:entityConfig\r\n    }, meta: { type: types.SET_ENTITY_CONFIG } };\r\n}\r\n \r\nexport const resetManagementPage = () => {\r\n    return {\r\n        type: types.RESET_MANAGEMENT_PAGE,\r\n        payload: {},\r\n        meta: { type: types.RESET_MANAGEMENT_PAGE }\r\n    };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl().concat(\"add\") : apiEntityBaseUrl().concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {},\r\n                \"entryPoint\":\"inputField\"\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n \r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl().concat(\"generateappid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin().concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const sendChatMessage = (message, username, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SEND_MESSAGE,\r\n        payload: {\r\n            value: message,\r\n            username: username\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.SEND_MESSAGE,\r\n            url: apiAdmin().concat(\"sendmessage\")\r\n        }\r\n    };\r\n}\r\n\r\n \r\n\r\nexport const getEventByDate = (month, year, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_EVENTS_BY_DATE,\r\n        payload: { year: year, month: month },\r\n        meta: {\r\n            app: app, type: types.GET_EVENTS_BY_DATE,\r\n            url: apiAdmin().concat(\"event\")\r\n        }\r\n    };\r\n}\r\nexport const selectDivision = (id, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SELECT_DIVISION,\r\n        payload: { divisionId: id },\r\n        meta: {\r\n            app: app, type: types.SELECT_DIVISION, url: apiAccount().concat(\"setdivision\")\r\n        }\r\n    };\r\n}\r\n \r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount().concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n///ok\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {\r\n            user: { username: username, password: password }\r\n        },\r\n        meta: { type: types.DO_LOGIN, url: apiAccount().concat(\"login\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const refreshLoginStatus = (loginStatus) => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {loginStatus:loginStatus},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\n//ok\r\nexport const getDivisons = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.GET_DIVISIONS,\r\n        payload: {\r\n\r\n        },\r\n        meta: { type: types.GET_DIVISIONS, url: apiAccount().concat(\"divisions\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n \r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n \r\n\r\n"," \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const GET_DIVISIONS = \"GET_DIVISIONS\";\r\nexport const SELECT_DIVISION = \"SET_DIVISION\";\r\nexport const GET_EVENTS_BY_DATE = \"GET_EVENTS_BY_DATE\";\r\n     \r\nexport const REQUEST_ID = \"req_ID\";\r\nexport const SEND_MESSAGE = \"send_message\";\r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\"; \r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const RESET_MANAGEMENT_PAGE = \"reset_management_page\";\r\n\r\nexport const ADD_EVENT_FROM_TIMELINE = \"add_event_from_timeline\";\r\nexport const SET_ENTITY_CONFIG = \"set-entity-config\";","export const _byId = (id) => { return document.getElementById(id) }\r\n\r\nexport const clearFields = (...ignore) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n    let withIgnore = ignore != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore)\r\n            for (let y = 0; y < ignore.length; y++)\r\n                if (inputs[i].id == ignore[y]) continue loop;\r\n\r\n        if (inputs[i].type == \"text\") inputs[i].value = \"\";\r\n        if (inputs[i].type == \"number\") inputs[i].value = 0;\r\n    }\r\n}\r\n\r\nexport function toBase64(file, referer, callback){\r\n\tconst reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n    \talert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (_byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array(); \r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton  ? totalButton  : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton  ) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton -1 \r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\n\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyup = (e) => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(e.target.value, this.props.id);\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            if (this.props.type == \"date\") {\r\n                this.handleKeyup(e);\r\n            }\r\n            if (this.props.id && this.props.type == \"checkbox\") {\r\n                this.props.onChange(this.props.id);\r\n            }\r\n            if (this.props.onChange && this.props.id) {\r\n                this.props.onChange();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let type = this.props.type ? this.props.type : \"text\";\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let name = this.props.name ? this.props.name : \"\";\r\n        let style = this.props.style ? this.props.style : {};\r\n\r\n        let inputField = <input style={style}\r\n            className=\"rounded\"\r\n            name={name}\r\n            key={\"KEY-input-\" + this.props.id}\r\n            id={this.props.id}\r\n            type={type}\r\n            onKeyUp={this.handleKeyup}\r\n            placeholder={placeholder}\r\n            checked={this.props.checked}\r\n            onChange={this.onChange}\r\n           \r\n        />;\r\n\r\n        if (this.props.disabled == true) {\r\n            inputField = <input style={style}\r\n                className=\"rounded\"\r\n                onChange={this.onChange}\r\n                name={name} key={\"KEY-input-\" + this.props.id}\r\n                checked={this.props.checked}\r\n                id={this.props.id}\r\n                type={type} onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n               \r\n                disabled />\r\n        }\r\n\r\n        if (type == \"textarea\") {\r\n            inputField = <textarea style={style}\r\n                className=\"rounded\"\r\n                name={name}\r\n                key={\"KEY-input-\" + this.props.id}\r\n                id={this.props.id}\r\n                type={type}\r\n                onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n                onChange={this.onChange}\r\n                checked={this.props.checked} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field \">\r\n                {inputField}\r\n                {this.props.type == \"radio\" || this.props.type == \"checkbox\" ? <span style={{ fontSize: '0.9em' }}>\r\n\r\n                    {this.props.text} </span> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\n\r\nclass ActionButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = () => {\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"action-button rounded\";\r\n        if(this.props.status!= null ){\r\n            className=className.concat(\" \").concat(this.props.status);\r\n        }\r\n        return (\r\n            <div >\r\n                <button style={{...this.props.style}} className={className} id={this.props.id} onClick={this.onClick}>{this.props.text}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ActionButton;","import React, {Component} from 'react'\r\nimport '../css/Input.css'\r\n\r\nclass Label extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onClick = () =>{\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let style = this.props.style?this.props.style:{};\r\n        let className = \"input-field \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n        if(this.props.onClick){\r\n            className+=\" clickable\";\r\n        }\r\n        return(\r\n            <div onClick={this.onClick} style={style} className={className}>\r\n                <label>{this.props.text}</label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react'\r\nimport '../css/Common.css'\r\nimport '../css/Message.css'\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {\r\n            let progress = Math.floor( this.props.progress);\r\n            msgStyle = {\r\n                width:progress + \"%\",\r\n                textAlign: 'left'\r\n            };\r\n            className+=\" rounded\";\r\n            messageText =  <span className=\"loader\">{this.props.progress + \"%\"}</span>          \r\n        }\r\n        return (\r\n            <div style={msgStyle} className={className} >{messageText}</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Message;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Login.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport Label from '../Label';\r\nimport Message from '../Message'\r\nimport { withRouter } from 'react-router';\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            showMessageLoginFailed: false\r\n        }\r\n\r\n\r\n\r\n        this.handleUsername = (value) => {\r\n            this.setState({ username: value });\r\n        }\r\n        this.handlePassword = (value) => {\r\n            this.setState({ password: value });\r\n        }\r\n\r\n        this.doLogin = () => {\r\n\r\n            console.log(\"u:\", this.state.username, \",p:\", this.state.password);\r\n            this.props.doLogin(document.getElementById(\"username-field\").value,\r\n                document.getElementById(\"password-field\").value, this.props.main);\r\n        }\r\n\r\n        this.endMessage = () => {\r\n            this.setState({ showMessageLoginFailed: false })\r\n        }\r\n\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.props.setMenuCode(menus.LOGIN);\r\n        document.title = \"Login\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        // if(this.props.loginAttempt == false && this.state.showMessageLoginFailed == false){\r\n        //     this.setState({showMessageLoginFailed:true})\r\n        // }\r\n    }\r\n\r\n    render() {\r\n\r\n        let message = <p>\r\n            {this.props.loginFailed ? <Message endMessage={this.endMessage} type=\"failed\" text=\"Login Failed\" /> : \"\"}\r\n        </p>\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                < ContentTitle title=\"Login Page\" />\r\n                {message}\r\n                <div className=\"login-container\">\r\n                    <Label text=\"Username\" />\r\n                    <InputField id=\"username-field\" onKeyUp={this.handleUsername} />\r\n                    <Label text=\"Password\" />\r\n                    <InputField id=\"password-field\" type=\"password\" onKeyUp={this.handlePassword} />\r\n                    <ActionButton style={{margin:'5px'}} id=\"btn-login\" status=\"submit\" onClick={this.doLogin} text=\"Login\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport '../../css/Tab.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Tab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let tabsData = this.props.tabsData ? this.props.tabsData : [];\r\n\r\n        let autoColumns = \"5% \" + (\"max-content \".repeat(tabsData.length)) + \" auto\";\r\n        return (\r\n            <div className=\"tab-container\" style={{\r\n                ...this.props.style,\r\n                width: 'auto',\r\n                gap: '0px',\r\n                display: 'grid',\r\n                msGridColumns: autoColumns,\r\n                gridTemplateColumns: autoColumns\r\n            }} >\r\n                <div style={{ width: '100%', borderBottom: 'solid 1px lightgray' }}></div>\r\n                {tabsData.map(tabData => {\r\n                    return <div key={stringUtil.uniqueId()} className={tabData.active ? \"tab-element tab-item-active rounded-top\" : \"tab-element tab-item\"} onClick={tabData.onClick ? tabData.onClick : () => { }}>\r\n                        {tabData.text}\r\n                    </div>\r\n                })}\r\n                <div style={{ width: '100%', borderBottom: 'solid 1px lightgray' }}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ComboBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = (e) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(e.target.value); \r\n            }\r\n            else {\r\n                console.log(\"Not supported\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let options = [];\r\n        if (this.props.options) {\r\n            options = this.props.options;\r\n        } \r\n        return (\r\n            <div className=\"input-field \">\r\n                <select value={this.props.defaultValue ? this.props.defaultValue : \"\"} className=\"rounded\" id={this.props.id}\r\n                    onChange={this.handleOnChange} >\r\n                    {options.map(\r\n                        option => {\r\n                            return <option key={\"opt_\" + stringUtil.uniqueId()} value={option.value} >{option.text}</option>\r\n                        }\r\n                    )}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComboBox;","import  React  from 'react'\r\nimport '../../css/Common.css'\r\nimport ComboBox from '../input/ComboBox';\r\n\r\nclass DashboardMain extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            divisionId:null\r\n        }\r\n    }\r\n\r\n    onDivisionListChange = (value) => {\r\n        this.setState({divisionId:value});\r\n        this.props.selectDivision(value);\r\n    }\r\n    \r\n    divionOptions = () => {\r\n        let options = [];\r\n        let divisions = this.props.divisions? this.props.divisions : [];\r\n\r\n        divisions.forEach(division => {\r\n            options.push({\r\n                value: division.id,\r\n                text: division.name\r\n            })\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render(){\r\n \r\n        const division = this.props.division;\r\n        let divisionId = this.state.divisionId;\r\n        if(this.props.division){\r\n            divisionId = this.props.division.id;\r\n        }\r\n\r\n        return(\r\n            <div >\r\n                <p>Login Sebagai</p>\r\n                <ComboBox defaultValue={divisionId} onChange={this.onDivisionListChange} options={this.divionOptions()} />\r\n\r\n                <p>Current Selection:</p>\r\n                <p>{division?division.name:\"\"}</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default DashboardMain;","export  const month = [\r\n    { name: \"Januari\", day: 31, text:\"Januari\",value:\"1\" },\r\n    { name: \"Februari\", day: 28, text:\"Februari\",value:\"2\" },\r\n    { name: \"Maret\", day: 31, text:\"Maret\",value:\"3\" },\r\n    { name: \"April\", day: 30, text:\"April\",value:\"4\" },\r\n    { name: \"Mei\", day: 31 , text:\"Mei\",value:\"5\"},\r\n    { name: \"Juni\", day: 30, text:\"Juni\",value:\"6\" },\r\n    { name: \"Juli\", day: 31 , text:\"Juli\",value:\"7\"},\r\n    { name: \"Agustus\", day: 31 , text:\"Agustus\",value:\"8\"},\r\n    { name: \"September\", day: 30 , text:\"September\",value:\"9\"},\r\n    { name: \"Oktober\", day: 31 , text:\"Oktober\",value:\"10\"},\r\n    { name: \"November\", day: 30 , text:\"November\",value:\"11\"},\r\n    { name: \"Desember\", day: 31 , text:\"Desember\",value:\"12\"},\r\n];","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Card.css'\r\n\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let titleStyle = {height:'auto'}\r\n        if (this.props.icon) {\r\n            titleStyle = {\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundColor: 'white',\r\n                backgroundImage: \"url(\" + this.props.icon + \")\",\r\n                backgroundSize: '200px 160px',\r\n                \r\n            }\r\n        }\r\n\r\n        let className= \"card \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.onClick} style={this.props.style} className={className}>\r\n                <div className=\"card-title  \" style={titleStyle}>\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\n\r\nclass FullCalendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth() + 1,\r\n            inputYearValue: new Date().getFullYear(),\r\n            activeId: \"\", \r\n            selectedDay: 0\r\n        }\r\n\r\n        this.calendarData = [];\r\n        this.days = [\"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\", \"Ahad\"];\r\n\r\n\r\n        this.month_now = 7;// 0; \r\n        this.begin = { week: 1, day: 3, dayCount: 31, info: \"\" };\r\n        this.begin_old = { week: 0, day: 0, dayCount: 0, info: \"\" };\r\n        this.year_now = 1945; \r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n        this.running_month = 7;\r\n        this.running_year = 1945;\r\n        this.filterDayId = 0;\r\n        this.filterMonthId = 0; this.dateFormId = 0;\r\n        this.entity_Name = 0; this.entity_Prop = 0; this.dateFormId = 0;\r\n\r\n        this.setSelectedMonth = (val) => {\r\n            this.setState({ selectedMonth: val });\r\n            this.props.refresh(val, this.year_now);\r\n        }\r\n        this.changeInputYear = (val, id) => {\r\n            this.setState({ inputYearValue: val, activeId: id });\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => { \r\n            this.props.getEventByDate(month, year );\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            if(this.props.getEventDetail){\r\n                return this.props.getEventDetail(day);\r\n            }\r\n\r\n            return [];\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        } \r\n        this.updateFields();\r\n        if (_byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n         this.loadCalendar();\r\n    }\r\n\r\n    setDateElementId(dateID) { \r\n        this.dateFormId = dateID;\r\n        let filterStr = \"filter-\" + dateID;\r\n        this.filterDayId = (filterStr + \".day\");\r\n        this.filterMonthId = (filterStr + \".month\");\r\n        this.dateFormId = (filterStr + \".year\");\r\n    }\r\n\r\n    updateFields() {\r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n    }\r\n\r\n    loadCalendar() {\r\n        this.updateFields();\r\n        this.createTable();\r\n        this.begin_old = this.begin;\r\n        this.begin = this.fillDay(this.month_now, true, this.begin);\r\n\r\n        this.input_month.value = new Date().getMonth() + 1; \r\n        this.setCalendar();\r\n        this.setState({ updated: new Date(), inputYearValue: new Date().getFullYear() });\r\n    }\r\n    setCalendar() {\r\n        this.doSetCalendar();\r\n    }\r\n\r\n    doSetCalendar() {\r\n        console.log(\"==start==\");\r\n\r\n        this.running_month = this.input_month ? this.input_month.value - 1 : new Date().getMonth();\r\n        this.running_year = this.state.inputYearValue ? this.state.inputYearValue : new Date().getFullYear();\r\n        let diff_year = +Math.abs(this.running_year - this.year_now);\r\n        // alert(\"diff_year year:\" + diff_year);\r\n        let monthCount = 0;\r\n        if (diff_year > 0)\r\n            monthCount = (11 - this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (+this.running_month);\r\n        else\r\n            monthCount = this.running_month - this.month_now;\r\n        let less = false;\r\n        if (this.running_year - this.year_now > 0) {\r\n            less = false;\r\n        } else if (this.running_year - this.year_now < 0) {\r\n            less = true;\r\n        } else {\r\n            if (this.running_month - this.month_now > 0) {\r\n                less = false;\r\n            } else {\r\n                less = true;\r\n            }\r\n        }\r\n        monthCount = Math.abs(monthCount);\r\n        //console.log(\"kurang dari: \", less);\r\n        let current_month = this.month_now;\r\n        let endMonth = (monthCount + this.month_now);\r\n        if (monthCount <= 0)\r\n            return;\r\n        if (!less)\r\n        ////console.log(\"month now\",this.month_now,\"diff_year\",monthCount,\"to\",to);\r\n        {\r\n            for (let m = this.month_now + 1; m <= endMonth + 1; m++) {\r\n                if (current_month > 11) {\r\n                    current_month = 0;\r\n\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.nextMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"month\",current_month,\"this.running_year\",this.year_now);\r\n                current_month++;\r\n            }\r\n        } else if (less) {\r\n            let pastMonthCount = (this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (11 - this.running_month);\r\n            endMonth = (pastMonthCount + this.month_now);\r\n            //console.log(\"month now\", this.month_now, \"diff_year\", monthCount, \"from\", to);\r\n            let begin_month = this.month_now;\r\n            for (let b = endMonth + 1; b >= begin_month + 1; b--) {\r\n                if (current_month < 0) {\r\n                    current_month = 11;\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.prevMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"b\",b,\"month\",current_month);\r\n                current_month--;\r\n            } \r\n        }\r\n\r\n        this.fillInfo();\r\n        console.log(\"==end==\")\r\n    }\r\n\r\n    fillInfo() {\r\n        if (this.date_info)\r\n            this.date_info.value = timeLineConstant.month[this.month_now].name + \" \" + this.year_now;\r\n        this.refresh();\r\n\r\n    } \r\n\r\n    detail(day, month, year) { \r\n        if(this.props.detail){\r\n            this.props.detail(day, month, year);\r\n        } \r\n    }\r\n\r\n    prevMonth() {\r\n\r\n        this.setState({ updated:new Date()})\r\n        return this.doPrevMonth(false);\r\n    }\r\n\r\n    doPrevMonth(prev) {\r\n        this.month_now--;\r\n        if (prev) {\r\n            this.running_month--;\r\n        }\r\n        if (this.month_now < 0) {\r\n            this.month_now = 11;\r\n            this.year_now--;\r\n            if (prev) {\r\n                this.running_month = 11;\r\n                this.running_year--;\r\n            }\r\n        }\r\n        let begin_prev = this.findBegin(this.begin_old, this.begin_old.dayCount);\r\n\r\n        this.begin_old = {\r\n            week: begin_prev.week,\r\n            day: begin_prev.day,\r\n            dayCount: begin_prev.dayCount,\r\n        }\r\n        let switch_ = this.fillDay(this.month_now, false, begin_prev);\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n    }\r\n\r\n    nextMonth() {\r\n        \r\n        return this.doNextMonth(false);\r\n    }\r\n\r\n    refresh() {\r\n        if(this.props.refresh){\r\n            this.props.refresh(this.month_now, this.year_now);\r\n        }\r\n    }\r\n\r\n    doNextMonth(next) {\r\n        console.log(\"NEXT\")\r\n        this.month_now++;\r\n        if (next) {\r\n            this.running_month++;\r\n        }\r\n        if (this.month_now > 11) {\r\n            this.month_now = 0;\r\n            this.year_now++;\r\n            if (next) {\r\n                this.running_month = 0;\r\n                this.running_year++;\r\n            }\r\n        }\r\n\r\n        let switch_ = this.fillDay(this.month_now, true, this.begin);\r\n        this.begin_old = {\r\n            week: this.begin.week,\r\n            day: this.begin.day,\r\n            dayCount: this.begin.dayCount,\r\n        }\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount,\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n\r\n    }\r\n\r\n    findBegin(begin_old_, totalday) {\r\n        let M = this.month_now - 1;\r\n        if (M < 0) {\r\n            M = 11;\r\n        }\r\n        let day = begin_old_.day;\r\n        let week = 6;\r\n        let begin_prev_ = {\r\n            week: 0,\r\n            day: 0,\r\n            dayCount: timeLineConstant.month[M].day\r\n        }\r\n\r\n        for (let D = totalday; D >= 0; D--) {\r\n            if (day <= 0) {\r\n                day = 7;\r\n                week--;\r\n            }\r\n            day--;\r\n        }\r\n        begin_prev_.week = week;\r\n        begin_prev_.day = day + 1;\r\n        return begin_prev_;\r\n    }\r\n\r\n    setElementByAttr(val, val2, day) {\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            let data = this.calendarData[i];\r\n\r\n            if (data.week == val && data.day == val2) {\r\n                if (new Date().getDate() == day &&\r\n                    new Date().getMonth() == this.month_now &&\r\n                    new Date().getYear() + 1900 == this.year_now) {\r\n\r\n                    console.log(\"NOW\", i);\r\n                    this.calendarData[i].now = true;\r\n                } else {\r\n                 //   console.log(\"NOT NOW\", i);\r\n                    this.calendarData[i].now = false;\r\n                }\r\n                this.calendarData[i].text = day;\r\n            }\r\n        }\r\n    }\r\n\r\n    addNewEvent(day, month, year) {\r\n\r\n        let strDate = this.dateAcceptableForHtmlInput(day, month, year);\r\n        document.getElementById(this.dateFormId).value = strDate;\r\n    }\r\n\r\n    dateAcceptableForHtmlInput(day, month, year) {\r\n        return year + \"-\" + this.addZero(month, 10) + \"-\" + this.addZero(day, 10);\r\n    }\r\n\r\n    addZero(Val, Min) {\r\n        let N = new String(Val);\r\n        let MinStr = new String(Min);\r\n\r\n        let ValLength = N.length;\r\n        let MinLength = MinStr.length;\r\n        let Diff = MinLength - ValLength;\r\n        for (let i = 1; i <= Diff; i++) {\r\n            N = new String(\"0\").concat(N);\r\n        }\r\n\r\n        return N;\r\n    }\r\n\r\n    clear() {\r\n\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            this.calendarData[i].text = \"\";\r\n        }\r\n\r\n        timeLineConstant.month[1].day = 28 + (+this.year_now % 4 == 0 ? 1 : 0);\r\n    }\r\n\r\n    fillDay(current_month, next, begin) {\r\n        this.clear();\r\n        let begin_new = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let begin_old_ = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let week_ = begin_new.week;\r\n        let begin_week = week_;\r\n        if (begin_new.week > 1 && begin_new.day > 1) {\r\n            week_ = 1;\r\n            begin_week = 1;\r\n        }\r\n        let day_ = begin_new.day;\r\n        let begin_day = day_;\r\n        let isNow = this.running_month == current_month && this.running_year == this.year_now;\r\n        //  console.log(\"isNow\", isNow,this.running_month,'=',current_month, this.running_month == current_month,this.running_year,'=',this.year_now, this.running_year == this.year_now)\r\n        for (let d = 1; d <= timeLineConstant.month[current_month].day; d++) {\r\n            if (day_ > 7) {\r\n                day_ = 1;\r\n                week_++;\r\n            }\r\n            if (isNow) {\r\n                this.setElementByAttr(week_, day_, d);\r\n            }\r\n            day_++;\r\n        }\r\n        begin_new.week = week_ >= 5 ? 2 : 1;\r\n        begin_new.day = day_;\r\n        begin_new.dayCount = timeLineConstant.month[current_month].day;\r\n        //console.log(\"old\", begin_old_.day, begin_old_.week);\r\n        //console.log(\"   \");\r\n        //console.log(\"new\", begin_new.day, begin_new.week);\r\n        this.fillInfo();\r\n        if (isNow) {\r\n            // this.detail(null, (+this.running_month + 1), this.running_year);\r\n            begin_new.info = \"NOW\";\r\n            this.getEventByDate(this.running_month + 1, this.running_year);\r\n        } else {\r\n            begin_new.info = \"SOME-DAY\";\r\n        }\r\n\r\n\r\n\r\n        return begin_new;\r\n    }\r\n\r\n    render() {\r\n        //validate division\r\n        let selectedYear = this.state.inputYearValue;\r\n\r\n        let totalCalendarData = this.days.map(day => {\r\n            return ({ text: day, title: true })\r\n        })\r\n\r\n        this.calendarData.forEach(element => {\r\n            totalCalendarData.push(element);\r\n        });\r\n\r\n        let calendarData = totalCalendarData.map(\r\n            data => {\r\n\r\n                if (data.text == null || data.text == \"\") {\r\n                    return <div key={uniqueId()}></div>\r\n                }\r\n\r\n                let style = { width: '80%', minHeight: '150px', marginBottom: '15px' };\r\n\r\n                if (data.title == true) {\r\n                    return (<div key={uniqueId()}>{data.text}</div>)\r\n                }\r\n\r\n                if (data.now == true) {\r\n                    style = {\r\n                        ...style,\r\n                        backgroundColor: 'lightgreen'\r\n                    }\r\n                }\r\n\r\n                let events = this.getEventDetail(+data.text);\r\n                let i = 0;\r\n                let eventList = events.map(event => {\r\n                    i++;\r\n                    if (i <= 3) {\r\n\r\n                        return <p key={\"EVT_\" + i}>{event.name}</p>\r\n                    } else if (i == 4) {\r\n                        return <ActionButton key={uniqueId()} onClick={() => { }} text={\"more\"} />\r\n                    } else {\r\n                        return null;\r\n                    }\r\n\r\n\r\n                });\r\n             //   console.log(data.text, \"EVENTS: \", events);\r\n\r\n                return (\r\n                    <Card key={uniqueId()} style={style} title={data.text}\r\n                        onClick={() => this.detail(data.text, this.month_now, this.year_now)}\r\n                        content={eventList}\r\n                    />\r\n                )\r\n            }\r\n        )\r\n\r\n        let dateInfoText = timeLineConstant.month[this.month_now].name + \" \" + this.year_now;\r\n        let content = <div id=\"calendar-wrapper\">\r\n\r\n            <GridComponent cols={3} style={{\r\n                textAlign: 'center', width: '400px'\r\n            }} items={[\r\n                <ComboBox key={uniqueId()} id=\"input_month\" defaultValue={this.state.selectedMonth} onChange={this.setSelectedMonth}\r\n                    options={timeLineConstant.month} />,\r\n                <InputField key={uniqueId()}  type=\"number\" id=\"input_year\" value={selectedYear} onKeyUp={this.changeInputYear} />,\r\n                <ActionButton key={uniqueId()}  onClick={(e) => this.setCalendar()} text={\"Go\"} />,\r\n                <ActionButton key={uniqueId()}  onClick={(e) => this.doPrevMonth(true)} text={\"Prev\"} />,\r\n                <input key={uniqueId()} value={dateInfoText}  disabled className=\"form-control\" id=\"date-info\" />,\r\n                <ActionButton key={uniqueId()}  onClick={(e) => this.doNextMonth(true)} text={\"Next\"} />\r\n            ]}\r\n\r\n            />\r\n            <p></p>\r\n            <p></p>\r\n            <GridComponent cols={7} items={calendarData} />\r\n        </div>;\r\n\r\n\r\n        return (\r\n             content  \r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default FullCalendar;","export const TYPE_DYNAMIC_DROPDOWN  = \"dynamicDropdown\";\r\nexport const TYPE_TEXTAREA = \"textarea\";\r\n\r\nexport const TYPE_LONG_DATE = \"longDate\";\r\nexport const TYPE_DATE = \"date\";\r\nexport const TYPE_STATIC_DROPDOWN = \"staticDropdown\";\r\nexport const TYPE_NUMBER = \"number\";\r\nexport const TYPE_TEXT = \"text\";\r\n\r\nexport const TYPE_MULTIPLE_IMAGE = \"multipleImage\";\r\nexport const TYPE_SINGLE_IMAGE = \"singleImage\";\r\n\r\nexport const divisionConfig = {\r\n    title: \"Badan Pengurus\",\r\n    entityName: \"division\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\", lableName: \"Nama\" },\r\n        { name: \"description\" }, { name: \"institution.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama BPD\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"Deskripsi BPD\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Division Insitusi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"institution.name\",\r\n            reffEntity: \"Institution\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const sectionConfig = {\r\n    title: \"Divisi\",\r\n    entityName: \"section\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"division.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"BPD\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"division.name\",\r\n            reffEntity: \"division\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const programConfig = {\r\n    title: \"Program Kerja\",\r\n    entityName: \"program\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" }\r\n        ,\r\n        { name: \"section.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Proker\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi Proker\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst eventStatus =  [\r\n    { text: \"-Not Configured-\", value: -1 },\r\n    { text: \"Done\", value: 1 },\r\n    { text: \"UnDone\", value: 0 }\r\n];\r\n\r\nexport const eventConfig = {\r\n    title: \"Kegiatan\",\r\n    entityName: \"event\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"info\" },\r\n        { name: \"date\", type: TYPE_LONG_DATE },\r\n        { name: \"location\" },\r\n        { name: \"program.name\" },\r\n        { name: \"participant\" },\r\n        {\r\n            name: \"done\", type: TYPE_STATIC_DROPDOWN, options:eventStatus\r\n        }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Kegiatan\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Waktu Kegiatan\",\r\n            inputType: \"date\",\r\n            name: \"date\"\r\n        },\r\n        {\r\n            lableName: \"Info Kegiatan\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"info\"\r\n        }, {\r\n            lableName: \"Lokasi Kegiatan\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"location\"\r\n        },\r\n        {\r\n            lableName: \"Nama Program\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"program.name\",\r\n            reffEntity: \"program\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Status Kegiatan\",\r\n            inputType: TYPE_STATIC_DROPDOWN,\r\n            name: \"done\",\r\n            options:eventStatus\r\n        },\r\n        {\r\n            lableName: \"Peserta\",\r\n            inputType: TYPE_NUMBER,\r\n            name: \"participant\"\r\n        },\r\n    ]\r\n}\r\n\r\nexport const positionConfig = {\r\n    title: \"Posisi\",\r\n    entityName: \"position\",\r\n    id: \"id\",\r\n    disabled: true,\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" },\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\nexport const memberConfig = {\r\n    title: \"Anggota\",\r\n    entityName: \"member\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"position.name\" },\r\n        { name: \"section.name\" },\r\n        { name: \"description.name\" }\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Anggota\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"position.name\",\r\n            reffEntity: \"position\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==============OLD STUFF==============//\r\n\r\n/**\r\n * SAMPLE\r\n */\r\n\r\nexport const productConfig = {\r\n    title: \"Product\",\r\n    entityName: \"product\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"code\" },\r\n        { name: \"description\" }, { name: \"unit.name\" },\r\n        { name: \"price\", type: TYPE_NUMBER }, { name: \"category.name\" },\r\n        { name: \"imageUrl\", type: \"imageMultiple\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Product Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Code\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Product Image(s)\",\r\n            inputType: \"multipleImage\",\r\n            name: \"imageUrl\"\r\n        },\r\n        {\r\n            lableName: \"Product Description\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Product Unit\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"unit.name\",\r\n            reffEntity: \"Unit\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Price\",\r\n            inputType: TYPE_NUMBER,\r\n            name: \"price\"\r\n        },\r\n        {\r\n            lableName: \"Product Category\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"category.name\",\r\n            reffEntity: \"Category\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport const supplierList = {\r\n    title: \"Supplier\",\r\n    entityName: \"supplier\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"address\" }, { name: \"contact\" }, { name: \"website\", type: \"link\" },\r\n        { name: \"iconUrl\", type: \"image\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Supplier Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Address\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Contact\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"contact\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Icon\",\r\n            inputType: \"singleImage\",\r\n            name: \"iconUrl\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Website\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"website\"\r\n        }\r\n    ]\r\n}\r\nexport const customerList = {\r\n    title: \"Customer\",\r\n    entityName: \"customer\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"username\" }, { name: \"name\" }, { name: \"address\" }, { name: \"phone\" }, { name: \"email\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Customer Unique Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"username\"\r\n        },\r\n        {\r\n            lableName: \"Customer Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Customer Address\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Customer Phone\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"phone\"\r\n        },\r\n        {\r\n            lableName: \"Customer Email\",\r\n            inputType: \"email\",\r\n            name: \"email\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const transactionConfig = {\r\n    title: \"Transaction\",\r\n    entityName: \"transaction\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"code\" }, { name: \"transactionDate\", type: TYPE_LONG_DATE },\r\n        { name: \"type\" }, { name: \"supplier.name\" },\r\n        { name: \"customer.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Transaction Code\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Date\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"transactionDate\"\r\n        },\r\n        {\r\n            lableName: \"Transaction Type\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"type\"\r\n        },\r\n        {\r\n            lableName: \"Supplier\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"supplier.name\"\r\n        },\r\n        {\r\n            lableName: \"Customer\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"customer.name\",\r\n        },\r\n\r\n    ]\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport FullCalendar from './FullCalendar';\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth(),\r\n            selectedYear: new Date().getFullYear(),\r\n            detailView: false,\r\n            detailEvents: [],\r\n            selectedDay: 0\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => {\r\n            console.log(\"_________\", month, year);\r\n            this.setState({\r\n                update: new Date(), selectedMonth: month, selectedYear: year\r\n            });\r\n            this.props.getEventByDate(month, year, this.props.app);\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            let events = this.props.events;\r\n            let result = [];\r\n\r\n            events.forEach(event => {\r\n                let date = new Date(event.date);\r\n                if (date.getDate() == day) {\r\n                    result.push(event);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n        this.detail = (day, month, year) => {\r\n            console.log(\"@DETAIL:\", day, month, year);\r\n            let events = this.getEventDetail(+day);\r\n            this.setState({\r\n                detailView: true, detailEvents: events, selectedDay: day,\r\n                selectedMonth: month, selectedYear: year\r\n            })\r\n        }\r\n\r\n        this.refresh = (selectedMonth, selectedYear) => {\r\n            this.setState({\r\n                updated: new Date(),\r\n                selectedMonth: selectedMonth, selectedYear: selectedYear\r\n            })\r\n        }\r\n\r\n        this.addEvent = () => {\r\n            let config = entityConfig.eventConfig;\r\n\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n\r\n            this.props.addEventFromTimeline(\r\n                this.state.selectedDay,\r\n                this.state.selectedMonth + 1, /*IMPORTANT*/\r\n                this.state.selectedYear\r\n            );\r\n\r\n            this.props.history.push(\"/management\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n\r\n        //validate division\r\n        if (this.props.division == null) {\r\n            return <h2>Silakan Pilih Badan Pengurus MPI</h2>\r\n        }\r\n        let title = <h2>TimeLine {this.props.division.name + \" \" + this.state.selectedYear}</h2>;\r\n\r\n        let detailEvents = [];\r\n        if (this.state.detailView == true) {\r\n            this.state.detailEvents.forEach(event => {\r\n\r\n                const eventDate = new Date(event.date).toString();\r\n\r\n                let eventStatus = \"Done\";\r\n                if(event.done == 0){\r\n                    eventStatus = \"Not Done\";\r\n                }else if(event.done != 1){\r\n                    eventStatus = \"Not Configured\";\r\n                }\r\n\r\n                let content = <div>\r\n                     <p>{eventDate}</p>\r\n                    <GridComponent cols={2} items={[  \r\n                        <label>Location</label>, <label>{event.location}</label>,\r\n\r\n                        <label>Participant</label>, <label>{event.participant}</label>,\r\n\r\n                        <label>Status</label>, <label>{eventStatus}</label>,\r\n\r\n                        <label>Info</label>, <label>{event.info}</label>,\r\n                    ]} />\r\n                </div>\r\n\r\n                let eventCard = <Card title={event.name}\r\n                    content={content} style={{ width: '90%' }}\r\n                />\r\n                detailEvents.push(eventCard);\r\n            });\r\n\r\n            if (detailEvents.length == 0) {\r\n                detailEvents = [\r\n                    <div>No Agenda.</div>\r\n                ]\r\n            }\r\n            return <div>\r\n                {title}\r\n                <p>Detail in {this.state.selectedDay + \" \" + stringUtil.monthYearString(\r\n                    this.state.selectedMonth + 1,\r\n                    this.state.selectedYear\r\n                )}</p>\r\n                <ActionButton onClick={() => { this.setState({ detailView: false }) }} text=\"Back\" />\r\n                <GridComponent width={\"30%\"} cols={3} items={detailEvents} />\r\n                <ActionButton status=\"success\" onClick={() => { this.addEvent() }} text=\"Add Event\" />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {title}\r\n                <FullCalendar\r\n                    division={this.props.division}\r\n                    detail={this.detail} getEventByDate={this.getEventByDate}\r\n                    refresh={this.refresh}\r\n                    events={this.props.events} getEventDetail={this.getEventDetail}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        events: state.managementState.events,\r\n        division: state.userState.division\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEventByDate: (m, y, app) => dispatch(actions.getEventByDate(m, y, app)),\r\n    addEventFromTimeline: (d, m, y) => dispatch(actions.addEventFromTimeline(d, m, y))\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Timeline)) ","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Dashboard.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport Tab from '../buttons/Tab';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport DashboardMain from './DashboardMain';\r\nimport Timeline from './Timeline'\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: \"home\"\r\n        }\r\n\r\n        this.setMenuCode = (code) => {\r\n            this.setState({ menu: code });\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n        this.getDivisons = () => {  \r\n            this.props.getDivisons( this.props.app);  \r\n        }\r\n\r\n        this.selectDivision = (divisionId) => {\r\n            this.props.selectDivision(divisionId, this.props.app);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        if (this.props.loginStatus != true)\r\n            return;\r\n        this.props.setMenuCode(menus.DASHBOARD);\r\n        document.title = \"Dashboard\";\r\n\r\n        this.getDivisons();\r\n    }\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                text: \"Home\",\r\n                active: this.state.menu == \"home\",\r\n                onClick: () => {this.setMenuCode('home') }\r\n            },\r\n            {\r\n                text: \"Time Line\",\r\n                active: this.state.menu == \"timeline\", \r\n                onClick: () => {this.setMenuCode('timeline') }\r\n            } \r\n        ];\r\n    }\r\n \r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const buttonsData = this.getButtonsData();\r\n\r\n        let content = null;\r\n        switch (this.state.menu) {\r\n            case 'home':\r\n                content = <DashboardMain  division={this.props.division} \r\n                    selectDivision={this.selectDivision} \r\n                    divisions={this.props.divisions} />\r\n                break;\r\n            case \"timeline\":\r\n                    content = <Timeline app={this.props.app} />\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (<div className=\"section-container\">\r\n            <ContentTitle title={\"Admin Page\"}\r\n                description=\"Welcome to the admin console\" />\r\n            <div className=\"management-container\">\r\n                <Tab tabsData={buttonsData} />\r\n                {content}\r\n            </div>\r\n        </div>)\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        divisions: state.userState.divisions,\r\n        division: state.userState.division,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getDivisons: ( app) => dispatch(actions.getDivisons( app)),\r\n    selectDivision: (divisionId, app) => dispatch(actions.selectDivision(divisionId, app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)); ","import React, { Component } from 'react';\r\nimport '../../css/Footer.css'\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let date = new Date().getFullYear();\r\n\r\n        return (\r\n            <div className=\"App-footer\">\r\n               BPP MPI Divisi Media {date+\" powered by React Js \"+React.version}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react' \r\nimport Label from './Label';\r\nimport '../css/Chat.css'\r\nimport GridComponent from './layout/GridComponent';\r\n\r\nclass ChatList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let chats = this.props.messages ? this.props.messages : [];\r\n        let chatRows = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = chats[i];\r\n            chatRows.push(\r\n                <ChatItem message={chat} username={this.props.username} />\r\n            )\r\n        }\r\n        return (\r\n            <GridComponent cols={1} items={chatRows} />)\r\n    }\r\n}\r\n\r\nconst ChatItem = props => {\r\n    let className = \"chat-item rounded paper-shadow  \" + (props.message.admin == 1 ? \" admin \" : \"user\");\r\n    let username = \"\";\r\n    if (props.username) {\r\n        username = \" [\" + props.username + \"]\";\r\n    }\r\n    let sender = props.message.admin == 1 ? \"Admin\" : \"You\" + username;\r\n    let senderComponent = <span>\r\n        {sender}<span style={{ marginLeft: '11px', fontSize: '0.7em', float: 'right' }} >{props.message.date}</span>\r\n    </span>\r\n    return (\r\n        <div className={className}>\r\n            <Label style={{ fontSize: '0.8em', color: 'black' }} text={senderComponent} />\r\n            <Label text={props.message.text} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport SockJsClient from 'react-stomp';\r\nimport ChatList from '../ChatList';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport Label from '../Label';\r\nimport GridComponent from '../layout/GridComponent'\r\n\r\nclass ChatRoom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages: null, username: null, activeId: null }\r\n        this.sendChatMessage = () => {\r\n            if (!_byId(\"input-msg\").value) {\r\n                alert(\"Message must not be null\");\r\n                return;\r\n            }\r\n            this.props.sendChatMessage(_byId(\"input-msg\").value, this.state.username, this.props.app);\r\n            _byId(\"input-msg\").value = \"\";\r\n        }\r\n\r\n        this.handleMessage = (response) => {\r\n            console.log(\"Responses handleMessage: \", response.code);\r\n            console.log(\"LOCAL STORAGE:\", localStorage.getItem(\"requestId\"))\r\n            if (response.code != localStorage.getItem(\"requestId\")) {\r\n                return;\r\n            }\r\n            this.props.storeChatMessageLocally(response.entities);\r\n            // this.setState({ messages: response.entities });\r\n        }\r\n\r\n        this.changeUsername = (value, id) => {\r\n            this.setState({ username: value, activeId: id });\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.setMenuCode('chatroom');\r\n        document.title = \"Chat Room\";\r\n        this.props.getMessages(this.props.app);\r\n        if (this.props.userAlias) {\r\n            this.setState({ username: this.props.userAlias })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.activeId && _byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let userAlias = this.props.userAlias ? this.props.userAlias : \"\";\r\n        let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\r\n        let localHost = \"http://localhost:8080/universal-good-shop/\";\r\n        const usedHost = localHost;\r\n        return (\r\n            // <div className=\"section-container\">\r\n            //     <ContentTitle title=\"What Do You Feel?\" description=\r\n            //         {\"Identified as [\" + this.state.username + \"]\"} />\r\n            //     <InputField\r\n            //         value={userAlias}\r\n            //         onKeyUp={this.changeUsername}\r\n            //         id=\"input-username\"\r\n            //         placeholder=\"identify your name\" />\r\n            //     <div style={{ textAlign: 'left' }} id=\"chat-room\">\r\n\r\n            //         <div className=\"chat-container\"  >\r\n            //             <ChatList username={this.state.username} messages={this.props.messages} />\r\n            //         </div>\r\n\r\n            //         <GridComponent style={{ width: '50%', textAlign: 'right' }} items={[\r\n            //             <InputField style={{ width: '130%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />,\r\n            //             <ActionButton style={{ margin: '5px' }} status=\"success\" onClick={this.sendChatMessage} text=\"send\" />\r\n\r\n            //         ]} />\r\n\r\n            //         <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/messages']}\r\n            //             onMessage={(msg) => { this.handleMessage(msg) }}\r\n            //             ref={(client) => { this.clientRef = client }} />\r\n            //     </div>\r\n            // </div>\r\n            <ContentTitle title=\"under construction\" />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        messages: state.shopState.messages,\r\n        userAlias: state.shopState.userAlias\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    sendChatMessage: (message, username, app) => dispatch(actions.sendChatMessage(message, username, app)),\r\n    storeChatMessageLocally: (messages) => dispatch(actions.storeMessageLocally(messages)),\r\n    getMessages: (app) => dispatch(actions.getMessageList(app))\r\n\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ChatRoom)","import React, { Component } from 'react'\r\n\r\nimport '../../css/Input.css'\r\n\r\nclass DropdownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false\r\n        }\r\n\r\n        this.handleClick = (e) => {\r\n            console.log(\"selected: \",e.target.innerHTML);\r\n            if(this.props.onClick){\r\n                this.props.onClick(e);\r\n            }\r\n        }\r\n\r\n        this.onHover = (e) => {\r\n          \r\n            if(this.props.onHover)\r\n                this.props.onHover( this.props.index); \r\n        }\r\n        this.unHover = (e) => { \r\n            this.setState({ hover: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n          return (\r\n              <div>\r\n                \r\n                <div    onMouseLeave={this.unHover} onMouseOver ={this.onHover}  >\r\n                {this.props.text}</div>\r\n              </div>\r\n          \r\n        )\r\n    }\r\n}\r\nexport default DropdownItem;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport DropdownItem from './DropdownItem';\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            focus: true, hover: false, hoverIndex: -1,\r\n\r\n        }\r\n\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(document.getElementById(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onBlur = () => {\r\n            console.log(\"blur\");\r\n            this.setState({ focus: false, hover: false })\r\n        }\r\n\r\n        this.onSelect = (dataValue, text) => {\r\n            console.log(\"select value:\", dataValue);\r\n            if (this.props.onSelect) { this.props.onSelect(dataValue); }\r\n            if (this.props.id) {\r\n                document.getElementById(this.props.id).value = text;\r\n            }\r\n        }\r\n\r\n        this.onHover = (i) => {\r\n            if (this.state.hoverIndex != i)\r\n                this.setState({ hoverIndex: i });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let dropdownList = [];\r\n        let dropdownComponent = \"\";\r\n        if (this.props.dropdownList && this.props.dropdownList.length > 0) {\r\n            dropdownList = this.props.dropdownList;\r\n\r\n            dropdownComponent = <div className=\"dropdown\">\r\n                {dropdownList.map(\r\n                    (data, i) => {\r\n                        let className = \"dropdown-item\";\r\n                        const key = \"dropdown-item-\" + i;\r\n\r\n                        if (this.state.hoverIndex == i) className = \"dropdown-item-hovered\";\r\n                        return (\r\n                            <div\r\n                                key={key}\r\n                                onClick={(e) => this.onSelect(data.value, data.text)}\r\n                                className={className}>\r\n                                <DropdownItem onClick={(e) => this.onSelect(data.value, data.text)}\r\n                                    onHover={this.onHover}\r\n                                    index={i} text={data.text} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        }\r\n\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let inputClassName = \"rounded\";\r\n        return (\r\n            <div\r\n                onMouseOver={() => this.setState({ focus: true })}\r\n                onMouseLeave={this.onBlur}\r\n                className=\"dropdown-wrapper input-field\">\r\n\r\n                <input\r\n                    className={inputClassName}\r\n                    onFocus={() => this.setState({ focus: true })}\r\n                    id={this.props.id}\r\n                    type=\"text\"\r\n                    onKeyUp={this.handleKeyup}\r\n                    placeholder={placeholder} />\r\n                {dropdownComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default InputDropdown;","import React, { Component } from 'react'\r\nimport '../../css/Input.css'\r\nimport '../../css/Common.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport * as url from '../../constant/Url'\r\nimport ActionButton from '../buttons/ActionButton'\r\n\r\nclass InputFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            base64Data: null\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            componentUtil.toBase64(e.target, this, function (result, referer) {\r\n                referer.setState({ base64Data: result });\r\n\r\n            });\r\n        }\r\n\r\n        this.removeImage = () => {\r\n            if(this.props.removeImage){\r\n                this.props.removeImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.base64Data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let displayImage = null;\r\n        if (this.state.base64Data) {\r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.state.base64Data} width=\"60\" height=\"60\" />\r\n            </div>;\r\n        }\r\n        if (this.props.value && this.props.value.trim() != \"\") {\r\n            \r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.props.value} width=\"60\" height=\"60\" />\r\n                <ActionButton text=\"cancel\" status=\"danger\" onClick={this.removeImage} />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field\" >\r\n                <input accept=\"image/*\" onChange={this.onChange} type=\"file\" key={\"input_file_\" + stringUtil.uniqueId()} />\r\n                {displayImage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFile;\r\n\r\n","import React, { Component } from 'react';\r\nimport * as url from '../../constant/Url'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InputFile from './InputFile';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFileMultiple extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAddMoreFile = () => {\r\n            if(this.props.addMoreImage){\r\n                this.props.addMoreImage();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let inputFields = [];\r\n        if (this.props.inputFilesData) {\r\n            inputFields = this.props.inputFilesData;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {inputFields.map(\r\n                    inputFileData => {\r\n                        let value = inputFileData.value;\r\n                        return (\r\n                            <InputFile\r\n                                key={stringUtil.uniqueId() + \"_multiple_file_item\"}\r\n                                onChange={(base64) => {\r\n                                    if (inputFileData.onChange)\r\n                                        inputFileData.onChange(base64)\r\n                                }}\r\n                                value={value && value.includes(\"base64\") ? value : value ?\r\n                                    url.baseImageUrl + value : null}\r\n                                id={inputFileData.inputId}\r\n                                removeImage={() => {\r\n                                    if (inputFileData.removeImage)\r\n                                        inputFileData.removeImage()\r\n                                }\r\n                                }\r\n\r\n                            />\r\n                        )\r\n                    }\r\n                )}\r\n                <ActionButton text=\"add more\" onClick={this.handleAddMoreFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFileMultiple;","import React, { Component } from 'react'\r\nimport '../../css/Entity.css'\r\nimport '../../css/Common.css'\r\nimport Label from '../Label'\r\nimport InputDropdown from '../input/InputDropdown'\r\nimport ComboBox from '../input/ComboBox'\r\nimport InputField from '../input/InputField';\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport InputFile from '../input/InputFile'\r\nimport * as url from '../../constant/Url'\r\nimport InputFileMultiple from '../input/InputFileMultiple'\r\nimport { TYPE_DYNAMIC_DROPDOWN, TYPE_STATIC_DROPDOWN, TYPE_MULTIPLE_IMAGE, TYPE_SINGLE_IMAGE } from '../../utils/EntityConfigurations'\r\n\r\nclass EntityForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            managedEntity: null,\r\n            activeId: null,\r\n            formValues: {},\r\n            dropdownList: {},\r\n            dropdownValues: {},\r\n            selectedEntities: {},\r\n            base64Data: {},\r\n            base64DataMultiple: {},\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * valudate before submit\r\n         */\r\n        this.validateEntity = (entity) => {\r\n            const result = entity;\r\n            for (let key in entity) {\r\n                console.log(key);\r\n                const formDataItem = this.getFormDataItemStartWith(key);\r\n                if (formDataItem) {\r\n                    if (formDataItem.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle single Image\r\n                         */\r\n                        if (entity[key] && !entity[key].includes(\"base64\")) {\r\n                            result[key] = null;\r\n                        }\r\n                    } else if (formDataItem.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle MULTIPLE Image\r\n                         */\r\n\r\n                        if (entity[key]) {\r\n                            let arrayOfValues = entity[key].split(\"~\");\r\n                            let resultValue = new Array();\r\n                            for (let i = 0; i < arrayOfValues.length; i++) {\r\n                                const element = arrayOfValues[i];\r\n                                /**\r\n                                 * if not modified\r\n                                 */\r\n                                if (!this.state.base64DataMultiple[key] ||\r\n                                    !this.state.base64DataMultiple[key][i]) {\r\n                                    resultValue.push(\"{ORIGINAL>>\" + element + \"}\");\r\n                                } else\r\n                                    /**\r\n                                     * if modified\r\n                                     */\r\n                                    if (this.state.base64DataMultiple[key] &&\r\n                                        this.state.base64DataMultiple[key][i]) {\r\n                                        const updatedValue = this.state.base64DataMultiple[key][i];\r\n                                        resultValue.push(\"{ORIGINAL>>\" + element + \"}\" + updatedValue);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            if (this.state.base64DataMultiple[key] && this.state.base64DataMultiple[key].length > arrayOfValues.length) {\r\n                                for (let i = arrayOfValues.length - 1; i < this.state.base64DataMultiple[key].length; i++) {\r\n                                    const element = this.state.base64DataMultiple[key][i];\r\n                                    if (element && element.includes(\"base64\")) {\r\n                                        resultValue.push(element);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (resultValue.length > 0)\r\n                                result[key] = resultValue.join(\"~\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.setState({ updated: new Date() })\r\n        }\r\n\r\n        this.handleSubmit = () => {\r\n            let addFromOtherPage = false;\r\n\r\n            const updateMode = this.props.managedEntity != null && this.props.addNew == false;\r\n            if (updateMode) {\r\n                console.log(\"WILL UPDATE(props):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"update\");\r\n                }\r\n            }else{\r\n                if( this.props.managedEntity != null && this.props.addNew == true){\r\n                    addFromOtherPage = true;\r\n                }\r\n            }\r\n\r\n            const addNewMod = this.state.managedEntity != null;\r\n            if (addNewMod  ) {\r\n                console.log(\"WILL SUBMIT NEW(state):\", this.state.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.state.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n\r\n            /**\r\n             * SPECIAL CASE\r\n             */\r\n\r\n            if ( addFromOtherPage) {\r\n                console.log(\"WILL SUBMIT NEW(SPECIAL CASE):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n            this.clear();\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.onKeyUp = (value, id, propName) => {\r\n            this.setState({ activeId: id });\r\n            this.updateSelectedEntity(propName, value);\r\n\r\n        }\r\n\r\n        this.clear = () => {\r\n            this.setState({\r\n                managedEntity: null,\r\n                dropdownList: {},\r\n                dropdownValues: {},\r\n                selectedEntities: {},\r\n                base64Data: {},\r\n                base64DataMultiple: {}\r\n            });\r\n            if (this.props.removeManagedEntity) {\r\n                this.props.removeManagedEntity();\r\n            }\r\n        }\r\n\r\n        this.populateDropdown = (entityname, fieldname, fieldvalue) => {\r\n            const request = {\r\n                entityName: entityname,\r\n                fieldName: fieldname.split(\".\")[1],\r\n                fieldValue: fieldvalue\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"DATA FOR DROPDOWN: \", data);\r\n            });\r\n\r\n        }\r\n\r\n        this.onKeyUpDynamicDropdown = (value, id, propName, reffEntity) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            const request = {\r\n                entityName: reffEntity,\r\n                fieldName: 'name',\r\n                fieldValue: value\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"LIST FOR DROPDOWN: \", data.entities)\r\n                referer.populateDropdownValues(data.entities, propName);\r\n            });\r\n            let currentDropdownValue = this.state.dropdownValues;\r\n            currentDropdownValue[propName] = value;\r\n            this.setState({ activeId: id, dropdownValues: currentDropdownValue });\r\n        }\r\n\r\n        this.populateDropdownValues = (entities, propName) => {\r\n            console.log(\"ENTITIES:\", entities)\r\n            let options = new Array();\r\n            const formDataItem = this.getFormDataItem(propName);\r\n            if (null == formDataItem) {\r\n                console.log(\"FORM DATA NOT FOUND\");\r\n                return;\r\n            }\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                options.push({\r\n                    value: entity[formDataItem.idField],\r\n                    text: entity[formDataItem.displayField],\r\n                    entity: entity\r\n                })\r\n            }\r\n            let currentDropdownList = this.state.dropdownList;\r\n            currentDropdownList[propName] = options;\r\n            //  this.setState({ dropdownList: currentDropdownList })\r\n            return options;\r\n        }\r\n\r\n        this.getSelectedDropdownItem = (value, propName) => {\r\n            if (this.state.dropdownList[propName] == null) {\r\n                return null;\r\n            }\r\n            const dropdownList = this.state.dropdownList[propName];\r\n            for (let i = 0; i < dropdownList.length; i++) {\r\n                const option = dropdownList[i];\r\n                if (option.value == value) {\r\n                    return option;\r\n                }\r\n\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getFormDataItem = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.addMoreImage = (propName) => {\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    currentValue = currentValue.trim() + \"~DEFAULT.BMP\";\r\n                    this.updateSelectedEntity(propName, currentValue);\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                let currentValue;\r\n                if (!managedEntity) {\r\n                    managedEntity = {};\r\n                    currentValue = \"\";\r\n                } else\r\n                    currentValue = managedEntity[propName] + \"~\";\r\n                currentValue = currentValue.trim() + \"DEFAULT.BMP\";\r\n                this.updateSelectedEntity(propName, currentValue);\r\n            }\r\n        }\r\n\r\n        this.updateSelectedEntity = (propName, value) => {\r\n            if (this.props.managedEntity) {\r\n                this.props.managedEntity[propName] = value;\r\n                this.refresh();\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) managedEntity = {};\r\n                managedEntity[propName] = value;\r\n                this.setState({ managedEntity: managedEntity });\r\n            }\r\n\r\n        }\r\n\r\n        this.getFormDataItemStartWith = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                    if (formDataItem.name.split(\".\").length > 1) {\r\n                        if (formDataItem.name.split(\".\")[0] == propName) {\r\n                            return formDataItem;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.handleRemoveImage = (propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = null;\r\n\r\n            this.updateSelectedEntity(propName, null);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64Image = (base64, propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = base64;\r\n\r\n            this.updateSelectedEntity(propName, base64);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64MultipleImage = function (base64, propNameRaw, i) {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = base64;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n        }\r\n\r\n        this.removeElementAtPosition = (array, index) => {\r\n            let result = new Array();\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (i != index) {\r\n                    result.push(array[i])\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.handleRemoveMultipleImage = (propNameRaw, i) => {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = null;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity; \r\n                if (!managedEntity) {\r\n                    return;\r\n                }\r\n                let currentValue = managedEntity[propName];\r\n                if(currentValue){\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.selectFromDynamicDropdown = (value, propName) => {\r\n            console.log(propName, \":\", value);\r\n            const currentDropdownList = this.state.dropdownList;\r\n            const dropdownValues = this.state.dropdownValues;\r\n            const selectedEntities = this.state.selectedEntities;\r\n\r\n            const selectedOption = this.getSelectedDropdownItem(value, propName);\r\n            if (null == selectedOption) {\r\n                return;\r\n            }\r\n\r\n            dropdownValues[propName] = selectedOption.text;\r\n            currentDropdownList[propName] = [];\r\n            selectedEntities[propName] = selectedOption.entity;\r\n\r\n            /**\r\n             * time to modify entity\r\n             */\r\n            const displayPropName = propName.split(\".\")[0];\r\n\r\n            this.updateSelectedEntity(displayPropName, selectedOption.entity);\r\n            this.setState({ activeId: null, dropdownList: currentDropdownList, dropdownValues: dropdownValues, selectedEntities: selectedEntities });\r\n        }\r\n\r\n        this.handleStaticDropdownChange = (value, propName) =>{\r\n            \r\n            this.updateSelectedEntity(propName, value);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        let formData = this.props.entityConfig && this.props.entityConfig.formData ? this.props.entityConfig.formData : [];\r\n\r\n        const entityExist = this.props.managedEntity != null || this.state.managedEntity;\r\n\r\n\r\n        let actionButtons = null;\r\n        if(!this.props.entityConfig.disabled){\r\n            actionButtons  =   <ActionButtons buttonsData={[\r\n                {\r\n                    text: this.props.managedEntity && this.props.addNew == false ? \"Update\" : \"Add Record\",\r\n                    onClick: this.handleSubmit,\r\n                    status:\"success\"\r\n                },\r\n                {\r\n                    text: \"Clear\",\r\n                    status:\"warning\",\r\n                    onClick: this.clear\r\n                }\r\n            ]} />;\r\n        }\r\n\r\n        let formFields = <div className=\"entity-form  \">\r\n            {formData.map(\r\n                data => {\r\n                    const parentPropName = data.name.split(\".\")[0];\r\n                    let value = null;\r\n                    if (entityExist) {\r\n                        const entity = this.props.managedEntity ? this.props.managedEntity : this.state.managedEntity;\r\n                        const propName = data.name;\r\n\r\n                        if (propName.split(\".\").length > 1 && this.state.activeId != \"input-for-\" + data.name) {\r\n                            const valueAsObject = entity[propName.split(\".\")[0]];\r\n                            const objectPropName = propName.split(\".\")[1];\r\n\r\n                            value = valueAsObject ? valueAsObject[objectPropName] : null;\r\n                        } else {\r\n                            value = entity[propName];\r\n                        }\r\n                    }\r\n\r\n                    let inputComponent = null;\r\n                    const inputId = \"input-for-\" + data.name;\r\n\r\n                    if (data.inputType == TYPE_DYNAMIC_DROPDOWN) {\r\n                        /**\r\n                         * if dynamic dropDown\r\n                         */\r\n\r\n                        if (null == value) {\r\n                            value = this.state.dropdownValues[data.name]\r\n                        }\r\n\r\n                        inputComponent = <InputDropdown\r\n                            onSelect={(value) => this.selectFromDynamicDropdown(value, data.name)}\r\n                            id={inputId}\r\n                            placeholder={data.lableName}\r\n                            value={value}\r\n                            dropdownList={this.state.dropdownList[data.name]}\r\n                            onKeyUp={(value, id) => { this.onKeyUpDynamicDropdown(value, id, data.name, data.reffEntity) }} />\r\n\r\n                    } else  if (data.inputType == TYPE_STATIC_DROPDOWN) {\r\n                        /**\r\n                         * if static drop down\r\n                         */\r\n                        console.log(\"STATIC DROPDOWN VALUE: \",value);\r\n                        inputComponent = <ComboBox \r\n                             defaultValue={new String(value)}\r\n                            onChange={(val)=>this.handleStaticDropdownChange(val,data.name)}\r\n                            options={data.options} id={stringUtil.uniqueId()}\r\n                         />\r\n\r\n                    } else if (data.inputType == TYPE_SINGLE_IMAGE) {\r\n                        /**\r\n                         * handle image single\r\n                         */\r\n                        inputComponent = <InputFile\r\n                            onChange={(base64) => this.handleChangeBase64Image(base64, data.name)}\r\n                            value={value && value.includes(\"base64\") ? value : value ? url.baseImageUrl + value : null}\r\n                            id={inputId}\r\n                            removeImage={() => this.handleRemoveImage(data.name)}\r\n\r\n                        />\r\n\r\n                    } else if (data.inputType == TYPE_MULTIPLE_IMAGE) {\r\n                        /**\r\n                         * handle multiple single\r\n                         */\r\n                        let valueSplit = value ? value.split(\"~\") : [];\r\n\r\n                        let imagesData = new Array();\r\n                        for (let i = 0; i < valueSplit.length; i++) {\r\n                            let valueSplitItem = valueSplit[i];\r\n                            if (this.state.base64DataMultiple[parentPropName] &&\r\n                                this.state.base64DataMultiple[parentPropName][i]\r\n                                && this.state.base64DataMultiple[parentPropName][i].includes(\"base64\")) {\r\n                                valueSplitItem = this.state.base64DataMultiple[parentPropName][i];\r\n                            }\r\n                            imagesData.push({\r\n                                value: valueSplitItem,\r\n                                onChange: (base64) => {\r\n                                    this.handleChangeBase64MultipleImage(base64, data.name, i);\r\n                                },\r\n                                removeImage: () => this.handleRemoveMultipleImage(data.name, i)\r\n\r\n                            })\r\n                        }\r\n                        inputComponent = <InputFileMultiple\r\n                            addMoreImage={() => this.addMoreImage(data.name)}\r\n                            inputFilesData={imagesData}\r\n\r\n                        />\r\n                    }\r\n\r\n                    else {\r\n                        /**\r\n                         * regular\r\n                         */\r\n                        inputComponent = <InputField\r\n                            onKeyUp={(value, id) => { this.onKeyUp(value, id, data.name) }}\r\n                            id={inputId} value={value}\r\n                            type={data.inputType} placeholder={data.lableName} />;\r\n                    }\r\n\r\n                    return (\r\n                        <div key={\"FORM-FIELD-\" + stringUtil.uniqueId()}>\r\n                            <Label text={data.lableName} />\r\n                            {inputComponent}\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n\r\n            {actionButtons}                \r\n        </div>\r\n\r\n        return (\r\n            <div className=\"entity-form-wrapper\">\r\n                {formFields}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntitiesWithCallback: (request, referer, callback) => dispatch(actions.getEntitiesWithCallback(request, referer, callback)),\r\n\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EntityForm))","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport '../../css/Management.css'\r\nimport '../../css/Entity.css'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport InputField from '../input/InputField'\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport EntityForm from './EntityForm';\r\nimport * as url from '../../constant/Url'\r\nimport Label from '../Label'\r\nimport GridComponent from '../layout/GridComponent'\r\nimport { TYPE_LONG_DATE, TYPE_STATIC_DROPDOWN, TYPE_MULTIPLE_IMAGE, TYPE_DATE } from '../../utils/EntityConfigurations'\r\n\r\nclass EntityList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: {},\r\n            activeId: null,\r\n            orderBy: null,\r\n            orderType: null\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are your sure for deleting this entity?\")) { return; }\r\n            console.log(\"Will DELETE: \", id)\r\n        }\r\n        this.handleEdit = (id) => {\r\n            this.getEntityById(id);\r\n        }\r\n        this.getHeaderNames = (fieldNames) => {\r\n            const headers = [];\r\n\r\n            if (fieldNames == null) {\r\n                this.props.backToDashboard();\r\n\r\n            } else\r\n\r\n                for (let i = 0; i < fieldNames.length; i++) {\r\n                    const name = fieldNames[i];\r\n                    let headerName = name.name;\r\n                    if (headerName.split(\".\").length > 1) {\r\n                        headerName = headerName.split(\".\")[0];\r\n                    }\r\n                    headers.push(headerName.toUpperCase());\r\n                }\r\n            headers.push(\"OPTION\");\r\n            return headers;\r\n        }\r\n\r\n        this.goToPage = (page, orderObject) => {\r\n            if (page > this.props.entitiesData.totalData / 10) {\r\n                page = 0;\r\n            }\r\n            if (page < 0) {\r\n                page = Math.ceil(this.props.entitiesData.totalData / 10 - 1);\r\n            }\r\n\r\n            let config = this.props.entityConfig;\r\n            config.filter = this.state.filter;\r\n            if (orderObject != null) {\r\n                config.orderBy = orderObject.orderBy;\r\n                config.orderType = orderObject.orderType;\r\n                this.setState({ orderBy: orderObject.orderBy, orderType: orderObject.orderType });\r\n            }\r\n\r\n            this.props.getEntityInPage(config, page);\r\n\r\n        }\r\n\r\n        this.getEntityById = (id) => {\r\n            const config = this.props.entityConfig;\r\n            if (config == null) {\r\n                alert(\"Config Not Found!\");\r\n                return;\r\n            }\r\n\r\n            this.props.getEntityById(config.entityName, id);\r\n        }\r\n\r\n        this.createNavButtons = () => {\r\n            let displayedButtons = componentUtil.createNavButtons(this.props.entitiesData.totalData / 10, this.props.currentPage);\r\n            return displayedButtons;\r\n        }\r\n\r\n        this.setOrderBy = (fieldName, orderType) => {\r\n            this.goToPage(this.props.currentPage, { orderBy: fieldName, orderType: orderType });\r\n        }\r\n\r\n        this.createFilterInputs = (fieldNames) => {\r\n            let inputs = new Array();\r\n\r\n            if (!fieldNames) {\r\n                return inputs;\r\n            }\r\n\r\n            for (let i = 0; i < fieldNames.length; i++) {\r\n                const fieldName = fieldNames[i];\r\n                let headerName = fieldName.name;\r\n                if (headerName.split(\".\").length > 1) {\r\n                    headerName = headerName.split(\".\")[0];\r\n                }\r\n\r\n                let value = \"\";\r\n\r\n                if (this.state.filter[headerName] != null) {\r\n                    value = this.state.filter[headerName];\r\n\r\n                }\r\n\r\n                let input = <InputField value={value} id={headerName + \"_filter_id\"}\r\n                    onKeyUp={this.handleFilterChange} key={\"input_field_\" + stringUtil.uniqueId()}\r\n                    placeholder={headerName} />\r\n\r\n                if (fieldName.type == TYPE_DATE || fieldName.type == TYPE_LONG_DATE) {\r\n                    const valueDay = this.state.filter[headerName + \"-day\"];\r\n                    const valueMonth = this.state.filter[headerName + \"-month\"];\r\n                    const valueYear = this.state.filter[headerName + \"-year\"];\r\n\r\n                    const inputDay = <InputField value={valueDay} id={headerName + \"-day_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_d\" + stringUtil.uniqueId()}\r\n                        placeholder={\"day\"} />;\r\n                    const inputMonth = <InputField value={valueMonth} id={headerName + \"-month_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_m\" + stringUtil.uniqueId()}\r\n                        placeholder={\"month\"} />;\r\n                    const inputYear = <InputField value={valueYear} id={headerName + \"-year_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_y\" + stringUtil.uniqueId()}\r\n                        placeholder={\"year\"} />;\r\n\r\n                    input = <GridComponent width=\"50px\" items={[inputDay, inputMonth, inputYear]} />\r\n                }\r\n\r\n\r\n                let orderType = \"asc\";\r\n                if (this.state.orderBy && this.state.orderBy == headerName) {\r\n                    if (this.state.orderType == \"asc\") {\r\n                        orderType = \"desc\";\r\n                    }\r\n                }\r\n\r\n\r\n                const orderButton = <ActionButton\r\n                    onClick={() => { this.setOrderBy(headerName, orderType) }}\r\n                    text={orderType} />\r\n\r\n                inputs.push(<div className=\"filter-wrapper\">\r\n                    {input}{orderButton}\r\n                </div>);\r\n            }\r\n            inputs.push(\"\");\r\n            return inputs;\r\n        }\r\n\r\n        this.handleFilterChange = (value, id) => {\r\n\r\n            let filter = this.state.filter;\r\n            if (value != null && value.trim() == \"\") {\r\n                filter[id.split(\"_filter_id\")[0]] = null;\r\n\r\n            } else {\r\n                filter[id.split(\"_filter_id\")[0]] = value;\r\n\r\n            }\r\n\r\n            this.setState({ filter: filter, activeId: id });\r\n            this.goToPage(this.props.currentPage);\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        const entitiesData = this.props.entitiesData;\r\n        const entityConfig = this.props.entityConfig;\r\n        console.log(\"1\");\r\n        if (null == entitiesData || null == entityConfig) {\r\n            return (<h2>Please Select One Of Menu</h2>)\r\n        }\r\n\r\n\r\n        if (null == entitiesData.entities) {\r\n            entitiesData.entities = [];\r\n        }\r\n\r\n        const rows = [\r\n            //header\r\n            {\r\n                values: this.getHeaderNames(entityConfig.fieldNames),\r\n                disabled: true,\r\n                style: { textAlign: 'center', fontWeight: 'bold' }\r\n            },\r\n            //filter\r\n            {\r\n                values: this.createFilterInputs(entityConfig.fieldNames),\r\n                disabled: true\r\n            }\r\n        ];\r\n\r\n\r\n        const entities = entitiesData.entities;\r\n        const idField = entityConfig.id;\r\n\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const entity = entities[i];\r\n            let rowValues = [];\r\n            for (let j = 0; j < entityConfig.fieldNames.length; j++) {\r\n                const fieldItem = entityConfig.fieldNames[j];\r\n                let entityProp = fieldItem.name;\r\n                let object = false\r\n\r\n                if (entityProp.split(\".\").length > 1) {\r\n                    entityProp = entityProp.split(\".\")[0];\r\n                    object = true;\r\n                }\r\n\r\n                let entityValue = entity[entityProp];\r\n                if (fieldItem.type) {\r\n                    if (fieldItem.type == \"number\") {\r\n                        entityValue = stringUtil.beautifyNominal(entityValue);\r\n                    } else if (fieldItem.type == \"link\") {\r\n                        entityValue = <a href={entityValue}><u>{entityValue}</u></a>\r\n                    } else if (fieldItem.type == \"image\") {\r\n                        entityValue = <img width=\"60\" height=\"60\" alt={url.baseImageUrl + entityValue} src={url.baseImageUrl + entityValue} />\r\n                    } else if (fieldItem.type == TYPE_MULTIPLE_IMAGE) {\r\n                        let imgName = entityValue.split(\"~\")[0];\r\n\r\n                        entityValue = <img width=\"60\" height=\"60\" src={url.baseImageUrl + imgName} />\r\n                    } else if (fieldItem.type == TYPE_LONG_DATE) {\r\n                        const dateStr = new Date(entityValue).toDateString();\r\n                        entityValue = <Label text={dateStr} />;\r\n                    } else if (fieldItem.type == TYPE_STATIC_DROPDOWN) {\r\n                        const options = fieldItem.options;\r\n\r\n                        options.forEach(opt => {\r\n                            if (opt.value == entityValue) {\r\n                                entityValue = opt.text;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                rowValues.push(object && entityValue ? entityValue[fieldItem.name.split(\".\")[1]] : entityValue);\r\n            }\r\n\r\n            rows.push(\r\n                {\r\n                    identifier: entity[idField],\r\n                    values: rowValues,\r\n                    handleDelete: this.handleDelete,\r\n                    handleEdit: this.handleEdit,\r\n                    disabled: entityConfig.disabled == true ? true : false\r\n                }\r\n            )\r\n        }\r\n\r\n        const buttonsData = this.createNavButtons();\r\n        const fixButtonData = new Array();\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + -1) },\r\n            text: 'previous'\r\n        })\r\n\r\n        for (let i = 0; i < buttonsData.length; i++) {\r\n            buttonsData[i].onClick = () => { this.goToPage(buttonsData[i].value) }\r\n            if (buttonsData[i].value == this.props.currentPage) {\r\n                buttonsData[i].status = \" btn-active\";\r\n            }\r\n            buttonsData[i].text = buttonsData[i].text;\r\n\r\n\r\n            fixButtonData.push(buttonsData[i]);\r\n        }\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + 1) },\r\n            text: 'next'\r\n        });\r\n\r\n        let navButtons = <ActionButtons style={{\r\n            backgroundColor: 'white',\r\n            paddingTop: '15px',\r\n            margin: '10px'\r\n        }} buttonsData={fixButtonData} />\r\n\r\n        let entityTable = <div className=\"entity-list-container\">\r\n\r\n            <InstantTable\r\n                style={{\r\n                    width: \"100%\",\r\n                    margin: \"5px\",\r\n                }}\r\n                rows={rows} />\r\n        </div>\r\n\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <div className=\"entity-container\">\r\n                    <div style={{\r\n                        backgroundColor: 'white',\r\n                        margin: '10px'\r\n                    }} > </div>\r\n                    {navButtons}\r\n                    <div className=\"entityForm\">\r\n                        <EntityForm\r\n                            addNew={this.props.addNew}\r\n                            app={this.props.app}\r\n                            updateEntity={this.props.updateEntity}\r\n                            removeManagedEntity={this.props.removeManagedEntity}\r\n                            managedEntity={this.props.managedEntity}\r\n                            entityConfig={entityConfig} />\r\n                    </div>\r\n                    {entityTable}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntityList;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Management.css'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ContentTitle from '../layout/ContentTitle'\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport EntityList from './EntityList';\r\nimport Tab from '../buttons/Tab';\r\n\r\nclass Management extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entityList: [],\r\n            currentPage: 0,\r\n            entityConfig: { entityName: \"main\" }\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n\r\n        this.backToDashboard = () => {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.getEntityInPage(this.state.entityConfig, this.state.currentPage);\r\n        }\r\n\r\n        this.loadEntityManagement = (config) => {\r\n            this.props.removeManagedEntity();\r\n\r\n            this.setState({ currentPage: 0, entityConfig: config });\r\n\r\n            this.props.setEntityConfig(config);\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n        }\r\n\r\n        this.gotoMainPage = () => {\r\n            this.props.resetManagementPage();\r\n            this.setState({ currentPage: 0, entityConfig: { entityName: \"main\" } });\r\n        }\r\n\r\n        this.getEntityInPage = (config, page) => {\r\n            this.setState({ currentPage: page });\r\n\r\n            const request = {\r\n                entityName: config.entityName,\r\n                page: page,\r\n                limit: 10,\r\n                entityConfig: config,\r\n                fieldsFilter: config.filter,\r\n                orderBy: config.orderBy,\r\n                orderType: config.orderType,\r\n            };\r\n\r\n            console.log(\"REQUEST: \", request)\r\n\r\n            this.props.getEntities(request, this.props.app);\r\n        }\r\n\r\n        this.checkIfCurrentMenuName = (name) => {\r\n            return this.state.entityConfig.entityName == name;\r\n        }\r\n\r\n        this.getButtonsData = () => {\r\n            return [\r\n                {\r\n                    text: \"#\",\r\n                    active: this.checkIfCurrentMenuName(\"main\"),\r\n                    onClick: () => { this.gotoMainPage() }\r\n                },\r\n                {\r\n                    text: \"Badan Pengurus\",\r\n                    active: this.checkIfCurrentMenuName(\"division\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.divisionConfig) }\r\n                },\r\n                {\r\n                    text: \"Divisi\",\r\n                    active: this.checkIfCurrentMenuName(\"section\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.sectionConfig) }\r\n                },\r\n                {\r\n                    text: \"Program Kerja\",\r\n                    active: this.checkIfCurrentMenuName(\"program\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.programConfig) }\r\n                },\r\n                {\r\n                    text: \"Kegiatan\",\r\n                    active: this.checkIfCurrentMenuName(\"event\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.eventConfig) }\r\n                },\r\n                {\r\n                    text: \"Posisi\",\r\n                    active: this.checkIfCurrentMenuName(\"position\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.positionConfig) }\r\n                },\r\n                {\r\n                    text: \"Anggota\",\r\n                    active: this.checkIfCurrentMenuName(\"member\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.memberConfig) }\r\n                },\r\n            ];\r\n        }\r\n\r\n        this.updateEntity = (name, entity, flag) => {\r\n            if (!window.confirm(\"Are you sure will update \" + name + \"?\")) {\r\n                return;\r\n            }\r\n\r\n            let newRecord = flag == \"addNew\";\r\n\r\n            this.props.updateEntity({ entityName: name, entity: entity, isNewRecord: newRecord }, this, function (ref) {\r\n                console.log(\"WILL CALLBACK\");\r\n                ref.callbackHandleUpdate();\r\n            });\r\n        }\r\n\r\n        this.getEntityById = (name, id) => {\r\n            this.props.getEntityById(name, id, this.props.app);\r\n        }\r\n        this.removeManagedEntity = () => {\r\n            this.props.removeManagedEntity();\r\n        }\r\n\r\n        this.callbackHandleUpdate = () => {\r\n            this.refresh();\r\n            this.removeManagedEntity();\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Management\";\r\n        this.props.setMenuCode(\"management\");\r\n    }\r\n\r\n    render() {\r\n        console.log(\"managedEntity: \", this.props.managedEntity);\r\n      \r\n\r\n        let entityList = this.props.entitiesData ? this.props.entitiesData.entities : [];\r\n        if (null == entityList) { entityList = []; }\r\n\r\n        let buttonsData = this.getButtonsData();\r\n\r\n        let content = <h2>Content</h2>\r\n\r\n        if (this.props.entitiesData.entityConfig == null) {\r\n            content = <div>\r\n                <h2>{\"Management Page\"}\r\n                </h2></div>\r\n        } else {\r\n            content = <EntityList currentPage={this.state.currentPage}\r\n                app={this.props.app}\r\n                getEntityInPage={this.getEntityInPage}\r\n                entityConfig={this.props.entitiesData.entityConfig}\r\n                entitiesData={this.props.entitiesData}\r\n                managedEntity={this.props.managedEntity}\r\n                getEntityById={this.getEntityById}\r\n                removeManagedEntity={this.removeManagedEntity}\r\n                updateEntity={this.updateEntity}\r\n                addNew={this.props.addNew}\r\n                backToDashboard={this.backToDashboard}\r\n            />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title={\"Management \" + (this.state.entityConfig.title ?\r\n                    this.state.entityConfig.title :\r\n                    this.props.entitiesData && this.props.entitiesData.entityConfig ?\r\n                        this.props.entitiesData.entityConfig.title : \"\")}\r\n\r\n                    description=\"master data management console\" />\r\n                <div className=\"management-container\">\r\n                    <Tab tabsData={buttonsData} />\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        entitiesData: state.managementState.entitiesData,\r\n        managedEntity: state.managementState.managedEntity,\r\n        addNew: state.managementState.addNew\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setEntityConfig:(config)=>dispatch(actions.setEntityConfig(config)),\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEntityById: (name, id, app) => {\r\n        let action = actions.getEntityById(name, id, app);\r\n        dispatch(action);\r\n    },\r\n    resetManagementPage : () =>dispatch(actions.resetManagementPage()),\r\n    removeManagedEntity: () => dispatch(actions.removeManagedEntity()),\r\n    updateEntity: (request, referer, callback) => dispatch(actions.updateEntity(request, referer, callback))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Management))","\nimport React, { Component } from 'react'; \nimport './App.css';\n\nimport Header from './components/layout/Header'\nimport Menu from './components/buttons/Menu'\nimport Home from './components/pages/Home'\nimport About from './components/pages/About'\nimport {  Route, Link, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'  \nimport Login from './components/pages/Login';\nimport Dashboard from './components/pages/Dashboard';\nimport * as menus from './constant/Menus'\nimport Message from './components/Message';\nimport Footer from './components/layout/Footer';\nimport SockJsClient from 'react-stomp';\nimport ChatRoom from './components/pages/ChatRoom';\nimport Management from './components/pages/Management'; \nimport { uniqueId } from './utils/StringUtil'; \nimport * as config from './utils/WebConfig'\nimport * as url from './constant/Url'\n\nconst hostCloud = url.hostCloud;\nconst hostLocal = url.hostLocal;\n\nconst usedHost = () => {\n    if (config.debugMode() == true)\n        return hostLocal;\n    else\n        return hostCloud;\n} \n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      detailMode: false,\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      enableShopping: false,\n      mainAppUpdated:new Date()\n    };\n\n    this.setDetailMode = (detailMode) => {\n      this.setState({ detailMode: detailMode });\n    }\n\n    this.setMenuCode = (code) => { \n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.setEnableShopping = (val) => {\n      this.setState({ enableShopping: val })\n    }\n\n    this.handleMenuCLick = (menu) => {\n      switch (menu.code) {\n\n        case menus.LOGOUT:\n          if (!window.confirm(\"Are you sure want to logout?\")) {\n            return;\n          }\n          this.props.performLogout(this);\n          break;\n\n        default:\n          break;\n      }\n\n\n    }\n\n\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n\n    this.startLoading = (realtime) => {\n      this.setState({ loading: true, realtime: realtime });\n    }\n    this.endLoading = () => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }\n\n    this.handleMessage = (msg) => {\n      let percentage = Math.floor(msg.percentage);\n      // this.startLoading(true);\n     \n      // if(msg.requestId != localStorage.getItem(\"requestId\")){\n      //   return;\n      // }\n\n      // if (msg.percentage < 0 || msg.percentage > 100) {\n      //   this.endLoading();\n      // }\n      // this.setState({ loadingPercentage: percentage });\n    }\n  }\n\n\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      localStorage.setItem(\"requestId\", this.props.requestId);\n      this.props.refreshLogin(this.props.loginStatus);\n    }\n\n    console.log(\"App componentDidUpdate LOGIN STATUS: \",this.props.loginStatus)\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    let additionalMenus = this.props.menus\n    let menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      let menu = additionalMenus[i];\n\n      if(!this.state.enableShopping && menu.code == 'cart')\n        continue;\n\n      if (this.props.loginStatus != true && menu.authenticated == true)\n        continue;\n\n      menus.push(menu);\n\n    }\n \n    return menus;\n\n  }\n\n  render() {\n\n    const header =  <Header app={this} title=\"MPI Monitoring\"   />;\n\n    if (!this.state.requestId) {\n      return (\n        <div key={uniqueId()}>\n          {header}\n          Please wait..\n        </div>\n      )\n    }\n\n    let loginComponent = <Login main={this} setMenuCode={this.setMenuCode}\n      setDetailMode={this.setDetailMode}\n      detailMode={this.state.detailMode}\n      doLogin={this.props.performLogin}\n      loginFailed={this.props.loginFailed}\n      loginAttempt={this.props.loginAttempt}\n      loginStatus={this.props.loginStatus}\n    />;\n\n    let loadingComponent = \"\";\n    if (this.state.loading == true) {\n      loadingComponent = <Message realtime={this.state.realtime} progress={this.state.loadingPercentage} text=\"Please wait...\" type=\"loading\" />;\n    }\n\n    let menus = this.setMenus();\n \n    \n    return (\n      <div className=\"App\">\n        {loadingComponent}\n        {header}\n        {/*this.props.loginStatus == true?\"Logged In\":\"Un Logged\"*/}\n      \n        <div id=\"main-layout\">\n          <div id=\"main-menu\">\n            <Menu loggedUser={this.props.loggedUser}\n              division = {this.props.division}\n              handleMenuCLick={this.handleMenuCLick}\n              activeCode={this.state.menuCode}\n              menus={menus} />\n          </div>\n         \n          <div id=\"main-content\" > \n            <Switch>\n              <Route exact path=\"/\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is default page\" />\n              } />\n              <Route exact path=\"/home\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is home page\" />\n              } />\n              \n              <Route exact path=\"/chatroom\" render={\n                (renderProps) =>\n                  <ChatRoom app={this} setMenuCode={this.setMenuCode} />\n              } />\n              <Route exact path=\"/about\" render={\n                (renderProps) =>\n                  <About setMenuCode={this.setMenuCode} />\n              }></Route>\n               \n               <Route exact path=\"/login\" render={\n                (renderProps) => loginComponent\n\n              }></Route>\n\n              {/*\n                     =============================\n                     ======== need login =========\n                     =============================\n                     */}\n              <Route exact path=\"/dashboard\" render={\n                (renderProps) =>\n                  <Dashboard app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n               <Route exact path=\"/management\" render={\n                (renderProps) =>\n                  <Management app={this} loginStatus={this.props.loginStatus}   setMenuCode={this.setMenuCode} />\n\n              }></Route>\n            </Switch>\n           \n          </div>\n         \n        </div>\n        <SockJsClient url={usedHost()+'/realtime-app'} topics={['/wsResp/progress']}\n          onMessage={(msg) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    entities: state.shopState.entities,\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    loginKey: state.userState.loginStatus,\n    loginFailed: state.userState.loginFailed,\n    menus: state.userState.menus,\n    loggedUser: state.userState.loggedUser,\n    loginAttempt: state.userState.loginAttempt,\n    requestId: state.userState.requestId,\n    division: state.userState.division,\n    cart: state.shopState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogin: (username, password, app) => dispatch(actions.performLogin(username, password, app)),\n  performLogout: (app) => dispatch(actions.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.requestAppId(app)),\n  refreshLogin: (loginStatus) => dispatch(actions.refreshLoginStatus(loginStatus))\n  // getProductCatalog: (page) => dispatch(actions.getProductList(page))\n\n})\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = {\r\n    catalogData: {},\r\n    entities: [],\r\n    entity: {},\r\n    categories: [],\r\n    suppliersData: [], \r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {  \r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ };   \r\n        case types.SEND_MESSAGE:\r\n            return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities }; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nexport const menus = [\r\n  {\r\n    code:\"home\",\r\n    name:\"Home\",\r\n    url:\"home\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"catalog\",\r\n    name:\"Catalog\",\r\n    url:\"catalog\",\r\n    active: false,\r\n     authenticated: false\r\n  } ,\r\n  {\r\n    code:\"about\",\r\n    name:\"About\",\r\n    url:\"about\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"chatroom\",\r\n    name:\"Chat Room\",\r\n    url:\"chatroom\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"login\",\r\n    name:\"Login\",\r\n    url:\"login\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"dashboard\",\r\n    name:\"Dashboard\",\r\n    url:\"dashboard\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"management\",\r\n    name:\"Management\",\r\n    url:\"management\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"logout\",\r\n    name:\"Logout\",\r\n    url:\"#\",\r\n    active: false,\r\n    authenticated: true\r\n  }\r\n];\r\n","import * as types from './types'\r\nimport * as menus from '../utils/HardCodedEntites'\r\nimport * as menuCodes from '../constant/Menus'\r\nimport { initialState } from './reducers';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menus.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    divisions: null,\r\n    division: null,\r\n    requestId: null\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    let updatedMenus = new Array();\r\n    if (action.payload) {\r\n\r\n        let loggedIn = action.payload && action.payload.loginStatus == true;\r\n        for (let index = 0; index < menus.menus.length; index++) {\r\n            const menu = menus.menus[index];\r\n            if (loggedIn && menu.code == menuCodes.LOGIN) { continue; }\r\n\r\n            if (menu.authenticated == false) {\r\n                updatedMenus.push(menu);\r\n            } else {\r\n                if (loggedIn) { updatedMenus.push(menu); }\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case types.DO_LOGIN:\r\n            let result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                localStorage.setItem(\"loginKey\", result.loginKey);\r\n                localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n                result.divisions = action.payload.divisions\r\n            }\r\n\r\n           \r\n            return result;\r\n        case types.REQUEST_ID:\r\n            result = { ...state, requestId: action.payload.message };\r\n\r\n            if (action.payload.loggedIn != true) {\r\n                \r\n                result.loginStatus = false;\r\n                result.loggedUser = null; \r\n\r\n            }else{\r\n                \r\n                if(action.payload.sessionData){\r\n                    \r\n                    result.division = action.payload.sessionData.division;\r\n                    result.loggedUser = action.payload.sessionData.user;\r\n                    result.loginStatus = action.payload.loggedIn;\r\n                }\r\n            }\r\n\r\n           console.log(\"o o o result.loginStatus:\",result.loginStatus)\r\n          //  action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                division:null,\r\n                loggedUser: null\r\n            };\r\n            localStorage.removeItem(\"loginKey\");\r\n            localStorage.removeItem(\"loggedUser\");\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n\r\n            return result;\r\n        case types.GET_DIVISIONS:\r\n            if(action.payload.invalidSession != true){\r\n                result = {\r\n                    ...state,\r\n                    divisions: action.payload.divisions,\r\n                }; \r\n            }else{\r\n                result = {\r\n                    ...state,\r\n                    divisions: [],\r\n                    loggedUser: null,\r\n                    loginStatus: false\r\n                };\r\n            }\r\n           \r\n            \r\n            return result;\r\n        case types.SELECT_DIVISION:\r\n            result = {\r\n                ...state,\r\n                division: action.payload.entity,\r\n            };\r\n            return result;\r\n        default:\r\n            if (action.payload && action.payload.loginStatus != null)\r\n                return { ...state, menus: updatedMenus };\r\n            else {\r\n                return { ...state };\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport { nullLiteral } from '@babel/types';\r\n\r\nexport const initState = {\r\n    productFlowStock: null,\r\n    productFlowStocks: null,\r\n    transactionData: null,\r\n    successTransaction: false,\r\n    customersData: null,\r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n\r\n    switch (action.type) { \r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as entityUtil from '../utils/EntityConfigurations'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    events: [],\r\n    addNew: false\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, addNew: false, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, addNew: false, managedEntity: null };\r\n        case types.GET_EVENTS_BY_DATE:\r\n\r\n            if (action.payload.entities)\r\n                return { ...state, events: action.payload.entities };\r\n        case types.ADD_EVENT_FROM_TIMELINE:\r\n\r\n            const eventsData = { entityConfig: entityUtil.eventConfig };\r\n            console.log(\"EVENTS DATA: \", eventsData);\r\n            return {\r\n                ...state, addNew: true, managedEntity: action.payload.entity,\r\n                entitiesData: eventsData\r\n            };\r\n        case types.RESET_MANAGEMENT_PAGE:\r\n\r\n            return initState;\r\n        case types.SET_ENTITY_CONFIG:\r\n            const entitiesData = state.entitiesData;\r\n\r\n            entitiesData.entityConfig = action.payload.entityConfig;\r\n            entitiesData.entities = [];\r\n\r\n            return { ...state, entitiesData: entitiesData };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\"\r\nimport * as managementReducer from \"./managementReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer,\r\n        managementState: managementReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState,\r\n    managementState: managementReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as actionCreator from './actionCreators';\r\nimport * as types from './types';\r\nimport * as config from '../utils/WebConfig'\r\nimport * as stringUtil from '../utils/StringUtil';\r\nimport * as rc from '../constant/ResponseCode'\r\n\r\nconst commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\")\r\n    }\r\n};\r\nconst POST_METHOD = \"POST\";\r\nconst TIMEOUT = 100000;\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            removeEntityMiddleware,\r\n\r\n            //user related\r\n            performLoginMiddleware,\r\n            performLogoutMiddleware,\r\n            refreshLoginStatusMiddleware,\r\n            getDivisionsMiddleware,\r\n\r\n            //transaction   \r\n            selectDivisionMiddleware,\r\n            getEventByDateMiddleware,\r\n            requestAppIdMiddleware,\r\n\r\n            storeChatMessageLocallyMiddleware,\r\n            getMessagesMiddleware,\r\n            sendChatMessageMiddleware,\r\n\r\n            /*enntity management*/\r\n            getEntityListMiddleware,\r\n            getEntityByIdMiddleware,\r\n            updateEntityMiddleware,\r\n            removeManagedEntityMiddleware,\r\n            addEventFromTimelineMiddleware,\r\n            resetManagementPageMiddleware,\r\n            setEntityConfigMiddleware,\r\n\r\n            getEntitiesWithCallbackMiddleware\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\nfunction timeout(ms, promise) {\r\n    return new Promise(function (resolve, reject) {\r\n        setTimeout(function () {\r\n            reject(new Error(\"timeout\"))\r\n        }, ms)\r\n        promise.then(resolve, reject)\r\n    })\r\n}\r\n\r\nconst getEntitiesWithCallbackMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_WITH_CALLBACK) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n\r\n            action.meta.callback(data, action.meta.referer);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst updateEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_ENTITY) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response updateEntityMiddleware:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error Update Entity!\");\r\n                return;\r\n            }\r\n            alert(\"Update Success!\");\r\n            const callback = action.meta.callback;\r\n            const referer = action.meta.referer;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            callback(referer);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityByIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_BY_ID) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            if(data.code != \"00\"){\r\n                alert(\"error requesting: \"+data.message);\r\n                return;\r\n            }\r\n\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                data.entities = [];\r\n            }\r\n            data.entityConfig = action.meta.entityConfig;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst sendChatMessageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SEND_MESSAGE) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            data.username = action.payload.username;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst addEventFromTimelineMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.ADD_EVENT_FROM_TIMELINE) { return next(action); }\r\n\r\n    let eventEntity = {\r\n        date: stringUtil.dateInputVal(action.payload.day, action.payload.month, action.payload.year)\r\n    };\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entity: eventEntity } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst setEntityConfigMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_ENTITY_CONFIG) { return next(action); }\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entityConfig: action.payload.entityConfig } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst removeManagedEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_MANAGED_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetManagementPageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_MANAGEMENT_PAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n\r\nconst requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = commonAuthorizedHeader();\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    })).then(response => response.json())\r\n        .then(data => { \r\n            console.debug(config.debugMode(), \"requestAppIdMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n\r\n            data.referer = action.meta.app;\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.error(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst getEventByDateMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_EVENTS_BY_DATE) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            data = (data);\r\n\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst selectDivisionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SELECT_DIVISION) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"selectDivisionMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getDivisionsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_DIVISIONS) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"getDivisionsMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(data.message);\r\n                if (data.code == rc.CODE_INVALID_SESSION) {\r\n                    data.invalidSession = true;\r\n                } else {\r\n                    if (data.divisions == null) {\r\n                        alert(\"Server Error\")\r\n                        return;\r\n                    }\r\n                    return;\r\n                } \r\n            }\r\n \r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }))\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n            responseJson = (responseJson);\r\n\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            responseJson = (responseJson);\r\n\r\n            let loginKey = \"\";\r\n            let loginSuccess = false;\r\n\r\n            if (responseJson.code != null && responseJson.code == \"00\") {\r\n                for (var pair of response.headers.entries()) {\r\n                    if (pair[0] == \"loginkey\") {\r\n                        loginKey = pair[1];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                loginSuccess = true;\r\n\r\n            }\r\n\r\n            console.log(\"LOGIN SUCCESS: \", loginSuccess);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user,\r\n                    divisions: responseJson.divisions,\r\n                    division: responseJson.sessionData ? responseJson.sessionData.division : null\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    }\r\n\r\n    let loggedUser = null;\r\n    if (localStorage.getItem(\"loggedUser\")) {\r\n        loggedUser = (localStorage.getItem(\"loggedUser\"));\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload: {\r\n            loginStatus: action.payload.loginStatus,\r\n            loginKey: localStorage.getItem(\"loginKey\"),\r\n            loggedUser: JSON.parse(loggedUser)\r\n        }\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\n\r\nexport default configureStore;","export const CODE_INVALID_SESSION = \"02\";","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'core-js/stable'\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'fast-text-encoding/text';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}