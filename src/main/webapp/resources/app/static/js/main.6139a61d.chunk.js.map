{"version":3,"sources":["utils/StringUtil.js","components/layout/GridComponent.js","components/buttons/ToggleButton.js","utils/WebConfig.js","components/layout/Header.js","constant/Url.js","components/buttons/Menu.js","constant/Menus.js","components/layout/ContentTitle.js","components/pages/Home.js","components/buttons/ActionButtons.js","components/CrudRow.js","components/layout/InstantTable.js","components/pages/About.js","redux/actionCreators.js","redux/types.js","utils/ComponentUtil.js","components/input/InputField.js","components/buttons/ActionButton.js","components/Label.js","components/Message.js","components/pages/Login.js","components/buttons/Tab.js","components/input/ComboBox.js","components/pages/DashboardMain.js","constant/TimelineConstant.js","components/card/Card.js","components/pages/FullCalendar.js","utils/EntityConfigurations.js","components/pages/Timeline.js","components/pages/Dashboard.js","components/layout/Footer.js","components/pages/ChatRoom.js","components/input/DropdownItem.js","components/input/InputDropdown.js","components/input/InputFile.js","components/input/InputFileMultiple.js","components/pages/EntityForm.js","components/pages/EntityList.js","components/pages/Management.js","App.js","redux/shopReducer.js","utils/HardCodedEntites.js","redux/userReducer.js","redux/managementReducer.js","redux/chatReducer.js","redux/reducers.js","redux/configureStore.js","constant/ResponseCode.js","Root.js","serviceWorker.js","index.js"],"names":["index","uniqueId","string","Date","getUTCMilliseconds","beautifyNominal","val","nominal","result","length","zero","i","isNonNullArrayWithIndex","array","months","GridComponent","props","items","this","width","repeat","cols","gridAutoColumns","msGridAutoColumns","gridColumn","gridRow","className","style","verticalAlign","gridTemplateColumns","msGridColumns","map","item","msGridColumn","msGridRow","key","Component","ToggleButton","state","active","onClick","e","setState","outerClass","innerClass","fontSize","text","debugMode","console","log","localStorage","getItem","Header","handleClick","setItem","app","componentDidMount","isDebugMode","title","rootValue","document","getElementById","value","hostLocal","concat","hostCloud","baseImageUrl","config","logoUrl","url","Menu","userLink","divisionInfo","division","name","loggedUser","id","appIcon","src","renderedMenus","icon","menus","handleMenuCLick","activeCode","code","to","LOGOUT","ContentTitle","description","Home","setMenuCode","content","ActionButtons","buttonsData","buttonData","status","stringUtil","CrudRow","handleEdit","identifier","handleDelete","values","Array","newValues","CS","RS","colspan","rowspan","push","trStyle","borderTop","actionButton","disabled","valign","Cells","rowSpan","colSpan","InstantTable","rows","tableStyle","row","About","padding","fontFamily","margin","usedHost","apiEntityBaseUrl","apiAccount","apiMessage","getEntityList","request","startLoading","type","payload","entity","entityName","filter","limit","page","fieldsFilter","orderBy","orderType","meta","entityConfig","_byId","createNavButtons","totalButton","currentPage","Math","ceil","min","max","InputField","handleKeyup","onKeyUp","target","onChange","placeholder","inputField","checked","ActionButton","Label","Message","timer","intervalId","update","clearInterval","endMessage","withTimer","setInterval","messageText","msgStyle","realtime","floor","progress","textAlign","Login","username","password","showMessageLoginFailed","handleUsername","handlePassword","doLogin","main","validateLoginStatus","loginStatus","history","message","loginFailed","withRouter","Tab","tabsData","autoColumns","msAutoColumns","gap","borderBottom","tabData","React","ComboBox","handleOnChange","options","defaultValue","option","DashboardMain","onDivisionListChange","divisionId","selectDivision","divionOptions","divisions","forEach","month","day","Card","titleStyle","height","backgroundRepeat","backgroundColor","backgroundImage","backgroundSize","FullCalendar","selectedMonth","getMonth","inputYearValue","getFullYear","activeId","selectedDay","calendarData","days","month_now","begin","week","dayCount","info","begin_old","year_now","input_month","date_info","running_month","running_year","filterDayId","filterMonthId","dateFormId","entity_Name","entity_Prop","setSelectedMonth","refresh","changeInputYear","createTable","r","getEventByDate","year","getEventDetail","updateFields","focus","loadCalendar","dateID","filterStr","fillDay","setCalendar","updated","doSetCalendar","diff_year","abs","monthCount","less","current_month","endMonth","begin_month","b","prevMonth","m","nextMonth","fillInfo","timeLineConstant","detail","doPrevMonth","prev","begin_prev","findBegin","switch_","doNextMonth","next","begin_old_","totalday","M","begin_prev_","D","val2","data","getDate","getYear","now","strDate","dateAcceptableForHtmlInput","addZero","Val","Min","N","String","MinStr","ValLength","Diff","clear","begin_new","week_","day_","isNow","d","setElementByAttr","selectedYear","totalCalendarData","element","minHeight","marginBottom","events","eventList","event","dateInfoText","TYPE_LONG_DATE","TYPE_DATE","divisionConfig","fieldNames","lableName","formData","inputType","reffEntity","idField","displayField","sectionConfig","programConfig","eventStatus","eventConfig","positionConfig","memberConfig","Timeline","detailView","detailEvents","date","addEvent","getEntities","addEventFromTimeline","y","eventDate","toString","done","location","participant","eventCard","connect","managementState","userState","dispatch","actions","MENU_HOME","MENU_TIMELINE","Dashboard","getButtonsData","menu","getDivisons","Footer","version","MENU_MESSAGE","MENU_LIST","currentRequestId","ChatRoom","messages","receiver","sendChatMessage","alert","handleMessage","response","exist","receivers","storeChatMessageLocally","changeUsername","setReceiver","getMessagesByReceiver","propMessages","sender","getMessages","userAlias","getAvailableSessions","sessionsMap","currentSender","invalidReceiver","invalidSender","currentUser","session","topics","onMessage","msg","ref","client","clientRef","ChatItem","senderComponent","color","chatState","shopState","DropdownItem","hover","innerHTML","onHover","unHover","onMouseLeave","onMouseOver","InputDropdown","hoverIndex","onBlur","onSelect","dataValue","dropdownList","dropdownComponent","onFocus","InputFile","base64Data","file","referer","callback","reader","FileReader","readAsDataURL","files","onload","onerror","error","componentUtil","removeImage","displayImage","trim","accept","InputFileMultiple","handleAddMoreFile","addMoreImage","inputFields","inputFilesData","inputFileData","base64","includes","inputId","EntityForm","managedEntity","formValues","dropdownValues","selectedEntities","base64DataMultiple","validateEntity","formDataItem","getFormDataItemStartWith","arrayOfValues","split","resultValue","updatedValue","join","handleSubmit","addFromOtherPage","addNew","updateEntity","focusActiveId","propName","updateSelectedEntity","removeManagedEntity","populateDropdown","entityname","fieldname","fieldvalue","fieldName","fieldValue","getEntitiesWithCallback","onKeyUpDynamicDropdown","entities","populateDropdownValues","currentDropdownValue","getFormDataItem","getSelectedDropdownItem","formDataList","currentValue","handleRemoveImage","handleChangeBase64Image","handleChangeBase64MultipleImage","propNameRaw","removeElementAtPosition","handleRemoveMultipleImage","newArrayValue","selectFromDynamicDropdown","currentDropdownList","selectedOption","displayPropName","handleStaticDropdownChange","entityExist","actionButtons","formFields","parentPropName","valueAsObject","objectPropName","inputComponent","valueSplit","imagesData","valueSplitItem","requested","entryPoint","EntityList","window","confirm","getEntityById","getHeaderNames","headers","backToDashboard","headerName","toUpperCase","goToPage","orderObject","entitiesData","totalData","getEntityInPage","setOrderBy","createFilterInputs","inputs","input","handleFilterChange","valueDay","valueMonth","valueYear","inputDay","inputMonth","inputYear","orderButton","fontWeight","rowValues","j","fieldItem","entityProp","object","entityValue","href","alt","imgName","dateStr","toDateString","opt","fixButtonData","navButtons","paddingTop","entityTable","Management","entityList","loadEntityManagement","setEntityConfig","gotoMainPage","resetManagementPage","checkIfCurrentMenuName","flag","newRecord","isNewRecord","callbackHandleUpdate","action","exacts","contains","App","detailMode","menuCode","loading","loadingPercentage","requestId","enableShopping","mainAppUpdated","setDetailMode","setEnableShopping","performLogout","requestAppId","endLoading","percentage","refreshLogin","additionalMenus","authenticated","header","loginComponent","performLogin","loginAttempt","loadingComponent","setMenus","exact","path","render","renderProps","loginKey","cart","user","initState","catalogData","categories","suppliersData","getTime","reducer","updatedMenus","loggedIn","JSON","stringify","sessionData","removeItem","invalidSession","eventsData","entityUtil","rootReducer","combineReducers","shopReducer","userReducer","chatReducer","managementReducer","initialState","commonAuthorizedHeader","timeout","ms","promise","Promise","resolve","reject","setTimeout","Error","then","getEntitiesWithCallbackMiddleware","store","fetch","method","body","json","newAction","Object","assign","catch","err","finally","param","updateEntityMiddleware","debug","getEntityByIdMiddleware","getEntityListMiddleware","getMessagesMiddleware","sendChatMessageMiddleware","addEventFromTimelineMiddleware","dd","mm","yyyy","eventEntity","setEntityConfigMiddleware","storeChatMessageLocallyMiddleware","removeManagedEntityMiddleware","resetManagementPageMiddleware","requestAppIdMiddleware","getEventByDateMiddleware","selectDivisionMiddleware","getDivisionsMiddleware","performLogoutMiddleware","all","responseJson","logoutSuccess","performLoginMiddleware","loginSuccess","entries","pair","refreshLoginStatusMiddleware","parse","removeEntityMiddleware","getAvailableSessionsMiddleware","sessions","sessionKeys","filteredSessions","userAgent","configureStore","createStore","applyMiddleware","Root","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6139a61d.chunk.js","sourcesContent":["let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tlet nominal = \"\" + val;\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"...\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\n\r\nexport const dateInputVal = function (dd, mm, yyyy) {\r\n \r\n\tlet month = +mm < 10 ? \"0\" + mm : mm;\r\n\tlet day = +dd < 10 ? \"0\" + dd : dd;\r\n\r\n\treturn yyyy + \"-\" + month + \"-\" + day;\r\n}","import React, { Component } from 'react'\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\nclass GridComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let items = [];\r\n        if (this.props.items) {\r\n            items = this.props.items;\r\n        }\r\n        const width             = this.props.width ? this.props.width : \"auto \";\r\n        const repeat            = this.props.cols ? this.props.cols : items.length;\r\n        const gridAutoColumns   = width.repeat(repeat);\r\n        const msGridAutoColumns = width == \"auto\"? \"1fr\".repeat(repeat) : width.repeat(repeat);\r\n\r\n        let gridColumn = 1;\r\n        let gridRow    = 1;\r\n\r\n        return (\r\n            <div className=\"grid-container\" style={{\r\n                ...this.props.style,\r\n               // display: 'grid',  stated in css\r\n//display: '-ms-grid',\r\n                verticalAlign       : 'middle',\r\n                gridTemplateColumns : gridAutoColumns,\r\n                msGridColumns       : msGridAutoColumns, \r\n            }} >\r\n                {items.map(item => {\r\n\r\n                    let style = {\r\n                        msGridColumn: gridColumn,\r\n                        msGridRow   : gridRow\r\n                    }\r\n\r\n                    gridColumn++;\r\n\r\n                    if(gridColumn > repeat){\r\n                        gridColumn = 1;\r\n                        gridRow++;\r\n                    }  \r\n\r\n                    return <div key={uniqueId()} style={style}>{item}</div>;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GridComponent;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Button.css'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\nclass ToggleButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active:false\r\n        }\r\n\r\n        this.onClick = (e) => {\r\n            this.setState({active:!this.state.active})\r\n            if(this.props.onClick){\r\n                this.props.onClick(e);\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let outerClass = \"toggle-outer\";\r\n        let innerClass = \"toggle-inner\";\r\n\r\n        if(!this.props.active || this.props.active==false){\r\n            outerClass+=\" outer-inactive\";\r\n            innerClass+=\" inner-inactive\";\r\n        }\r\n\r\n        return (\r\n            <div style={{fontSize:'13px'}}>\r\n                <GridComponent items={[\r\n                    <div key={uniqueId()} onClick={this.onClick} className={outerClass}>\r\n                        <div  className={innerClass} ></div></div>,\r\n                    <span  key={uniqueId()}>{this.props.text}</span>\r\n                ]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleButton;","export const debugMode = () => {\r\n    console.log(\"localStorage.getItem(\\\"debugMode\\\")\",localStorage.getItem(\"debugMode\"));\r\n    return localStorage.getItem(\"debugMode\") && localStorage.getItem(\"debugMode\") == \"true\";\r\n}","import React, { Component } from 'react';\r\nimport '../../css/Header.css'\r\nimport ToggleButton from '../buttons/ToggleButton';\r\nimport * as config from '../../utils/WebConfig'\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            debugMode:true\r\n        }\r\n        this.handleClick = (e) => {\r\n            this.setState({ debugMode: !this.state.debugMode })\r\n            if (this.state.debugMode == true) {\r\n                localStorage.setItem(\"debugMode\", \"true\");\r\n            } else {\r\n                localStorage.setItem(\"debugMode\", \"false\");\r\n            }\r\n            console.log(\"ccc localStorage.setItem(\\\"debugMode\\\")\", localStorage.getItem(\"debugMode\"));\r\n            this.props.app.componentDidMount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const debugMode =  localStorage.getItem(\"debugMode\");\r\n        const isDebugMode =  localStorage.getItem(\"debugMode\") == \"true\";\r\n        return (\r\n            <div key={uniqueId()} className=\"App-header\">\r\n                {this.props.title}\r\n                <ToggleButton active={isDebugMode} onClick={this.handleClick} text={\"Debug Mode: \"+debugMode} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import * as config from '../utils/WebConfig'\r\n \r\nconst rootValue = document.getElementById(\"rootPath\").value == \"${basePath}\" ?\r\n     \"/organization-management\" : document.getElementById(\"rootPath\").value;\r\n\r\nexport const hostLocal =\"http://localhost:8080\".concat(rootValue);\r\nexport const hostCloud = (rootValue);\r\nexport const baseImageUrl = config.debugMode()==true?hostLocal:hostCloud;\r\n ","import React, { Component } from 'react'\r\nimport '../../css/Menu.css'\r\nimport '../../css/Common.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst logoUrl = url.baseImageUrl+\"/res/img/transparent.png\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n        let userLink = \"\";\r\n        let divisionInfo = null;\r\n\r\n        if (this.props.division) {\r\n            divisionInfo = <div className=\"fill\" >{this.props.division.name} </div>;\r\n        }\r\n\r\n        if (this.props.loggedUser != null) {\r\n            \r\n            userLink = <li id=\"user-link\">\r\n                <div className=\"fill\" >{\"Welcome, \" + this.props.loggedUser.name} </div>\r\n                {divisionInfo}\r\n            </li>\r\n        }\r\n\r\n        let appIcon = <li><img src={logoUrl} style={{ width: '90%' }} /></li>;\r\n\r\n        let renderedMenus = [{\r\n            icon: true,\r\n            url: logoUrl\r\n        }];\r\n\r\n\r\n        if (this.props.menus != null) {\r\n            renderedMenus = this.props.menus;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"side-menu\" >\r\n                < ul className=\"menu-ul \" >\r\n                    {appIcon}\r\n                    {userLink}\r\n                    {\r\n                        renderedMenus.map(\r\n                            e => {\r\n                                if (e.url == \"#\") {\r\n                                    return (\r\n                                    <li\r\n                                        onClick     ={() => this.props.handleMenuCLick(e)} \r\n                                        className   ={this.props.activeCode == e.code ? \"active\" : \"\"} \r\n                                        key         ={e.name}\r\n                                        id          ={e.name}>\r\n                                            <Link key={e.name} className=\"App-link\" to=\"#\" >\r\n                                                <div className=\"fill\" >\r\n                                                    {e.name}\r\n                                                </div>\r\n                                            </Link>\r\n                                        </li >\r\n                                    )\r\n                                }\r\n                                return (\r\n                                <li \r\n                                    className   ={this.props.activeCode == e.code ? \"menu-active\" : \"\"} \r\n                                    key         ={e.name}\r\n                                    id          ={e.name}>\r\n                                        <Link key={e.name} className=\"App-link\" to={e.url} >\r\n                                            <div className=\"fill\" >{e.name}</div>\r\n                                        </Link>\r\n                                    </li >\r\n                                )\r\n                            }\r\n                        )\r\n                    } </ul>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","export const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const SUPPLIERLIST = \"supplierlist\";","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Content.css'\r\n\r\nclass ContentTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let title       = this.props.title ? this.props.title : \"\";\r\n        let description = this.props.description ? this.props.description : \"\";\r\n        \r\n        return (\r\n            <div className=\"content-title\">\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentTitle;","import React, { Component } from 'react'\r\nimport '../../css/Home.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nimport * as url from '../../constant/Url'\r\nconst logoUrl = url.baseImageUrl + \"/res/img/mpi.png\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Mahasiswa Pencinta Islam\";\r\n        this.props.setMenuCode(menus.HOME);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"Welcome!\" description=\r\n                    {this.props.content} />\r\n                <div className=\"article-content\">\r\n                    <h2 >Admin Console Mahasiswa Pencinta Islam</h2>\r\n                    <img src={logoUrl} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport '../../css/Button.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ActionButtons extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let className = \"action-button-wrapper\";\r\n        if(this.props.className){\r\n            className += \" \"+this.props.className;\r\n        }\r\n        return (\r\n            <div style={this.props.style ? this.props.style : {}} className={className}  >\r\n                {this.props.buttonsData.map(buttonData => {\r\n                    let className = \"action-button rounded\";\r\n                    if (buttonData.status != null) {\r\n                        className =\r\n                            className.concat(\" \").concat(buttonData.status).concat(\" \").concat(buttonData.className);\r\n                    }\r\n                    return (\r\n                        <button \r\n                        style       ={{...buttonData.style}} \r\n                        className   ={className} \r\n                        key         ={\"btnKey-\" + stringUtil.uniqueId()}\r\n                        onClick     ={buttonData.onClick}>\r\n                         {buttonData.text?buttonData.text:\"\"}\r\n                         </button>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ActionButtons;","import React, { Component } from 'react'\r\nimport ActionButtons from './buttons/ActionButtons';\r\nimport * as stringUtil from '../utils/StringUtil'\r\n\r\nclass CrudRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleEdit = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleEdit(this.props.identifier);\r\n            }\r\n        }\r\n        this.handleDelete = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleDelete(this.props.identifier);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let values = this.props.values;\r\n        const defaultRowColSpan = 1;\r\n        if (null == values) {\r\n            values = new Array();\r\n        } else {\r\n            let newValues = new Array();\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (this.props.CS || this.props.RS) {\r\n                    let colspan = stringUtil.isNonNullArrayWithIndex(this.props.CS, i) ?\r\n                        this.props.CS[i] : defaultRowColSpan;\r\n                    let rowspan = stringUtil.isNonNullArrayWithIndex(this.props.RS, i) ?\r\n                        this.props.RS[i] : defaultRowColSpan;\r\n                    newValues.push({ value: value, colspan: colspan, rowspan: rowspan });\r\n                } else\r\n                    newValues.push({ value: value });\r\n            }\r\n            values = newValues;\r\n        }\r\n\r\n        let trStyle = this.props.style ? this.props.style : {\r\n            borderTop: 'solid 1px gray',\r\n        };\r\n        let actionButton = <td style={trStyle}>\r\n            <ActionButtons buttonsData={[\r\n                {\r\n                    id: \"k-btn-edit-\" + this.props.identifier,\r\n                    status: 'warning',\r\n                    onClick: this.handleEdit,\r\n                    text: \"Edit\"\r\n                },\r\n                {\r\n                    id: \"k-btn-dlt-\" + this.props.identifier,\r\n                    status: 'danger',\r\n                    onClick: this.handleDelete,\r\n                    text: \"Delete\"\r\n                }\r\n            ]} />\r\n        </td>;\r\n\r\n        if (this.props.disabled == true) {\r\n            actionButton = null;\r\n            trStyle = this.props.style ? this.props.style : {};\r\n        }\r\n      \r\n        return (\r\n            <tr style={trStyle} key={stringUtil.uniqueId()}\r\n                valign={this.props.valign}>\r\n                <Cells values={values} trStyle={trStyle} />\r\n                {actionButton}</tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst Cells = (props) => { \r\n\r\n    let values = props.values;\r\n\r\n    return  values.map(value => { \r\n        \r\n        return (\r\n            <td key={ stringUtil.uniqueId()} id={ stringUtil.uniqueId()} \r\n                style={props.trStyle} rowSpan={value.rowspan} \r\n                colSpan={value.colspan}>\r\n                {value.value}\r\n            </td>\r\n        )\r\n    });\r\n}\r\n\r\nexport default CrudRow;","import React, { Component } from 'react'\r\nimport CrudRow from '../CrudRow';\r\nimport '../../css/Common.css'\r\nimport '../../css/InstantTable.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass InstantTable extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let rows = [];\r\n        if (this.props.rows) { rows = this.props.rows; }\r\n        let className   = \"table\";\r\n        let tableStyle  = this.props.style ? this.props.style : {};\r\n\r\n        if (this.props.className) {\r\n            className += \" \" + this.props.className;\r\n        }\r\n        return (\r\n            <table style={tableStyle} className={className}><tbody>\r\n                {rows.map(row => {\r\n                    let disabled = row.disabled == false? false : true; \r\n                    \r\n                    return (\r\n                        <CrudRow\r\n                            style       ={row.style}\r\n                            valign      ={this.props.valign ? this.props.valign : \"top\"}\r\n                            RS          ={row.RS}\r\n                            identifier  ={row.identifier ? row.identifier : \"0000\"}\r\n                            handleEdit  ={row.handleEdit}\r\n                            handleDelete={row.handleDelete}\r\n                            CS          ={row.CS}\r\n                            values      ={row.values ? row.values : []}\r\n                            key         ={stringUtil.uniqueId()}\r\n                            disabled    ={disabled}\r\n                        />\r\n                    )\r\n                })}\r\n            </tbody></table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstantTable;","import React, { Component } from 'react'\r\nimport '../../css/About.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport * as url from '../../constant/Url'\r\nimport '../../css/Common.css'\r\nimport ContentTitle from '../layout/ContentTitle' \r\n\r\nconst logoUrl = url.baseImageUrl + \"/res/img/asp.png\";\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n        this.props.setMenuCode(menus.ABOUT);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container about-section  \" >\r\n                <ContentTitle title=\"About Us\" />\r\n                <div className=\" abount-content\" style={{\r\n                    padding     : '5px',\r\n                    width       : '90%',\r\n                    fontFamily  : 'Consolas', margin: '5px'\r\n                }}>\r\n                    <InstantTable\r\n                        rows={[\r\n                            { values: [\"Name\", \"Organization Management Admin\"] },\r\n                            { values: [\"Version\", \"1.0.0\"] },\r\n                            { values: [\"Description\", \"managing your organization activities effectively\"] },\r\n\r\n\r\n                        ]} />\r\n                    <h2>Powered By</h2>\r\n                    <img style={{ width: '50%' }} src={logoUrl} />\r\n                </div></div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import * as types from './types'\r\nimport * as config from '../utils/WebConfig'\r\nimport * as url from '../constant/Url'\r\n\r\nconst hostCloud = url.hostCloud+\"/api/\";\r\nconst hostLocal = url.hostLocal+\"/api/\";\r\n\r\nconst usedHost = () => {\r\n    if (config.debugMode() == true)\r\n        return hostLocal;\r\n    else\r\n        return hostCloud;\r\n} \r\nconst apiBaseUrl  = () => usedHost() + \"public/\";\r\nconst apiEntityBaseUrl  = () => usedHost() + \"management/\"\r\nconst apiAccount = () => usedHost() + \"account/\"\r\nconst apiAdmin = () => usedHost() + \"admin/\" \r\nconst apiMessage = () => usedHost() + \"message/\" \r\n\r\nexport const addEventFromTimeline = (day,month,year) => {\r\n    return { type: types.ADD_EVENT_FROM_TIMELINE, payload: {\r\n        day:day,\r\n        month:month,\r\n        year:year\r\n    }, meta: { type: types.ADD_EVENT_FROM_TIMELINE } };\r\n}\r\n\r\nexport const setEntityConfig = (entityConfig) => {\r\n    return { \r\n        type: types.SET_ENTITY_CONFIG,\r\n        payload: {  entityConfig : entityConfig  }, \r\n        meta: { type: types.SET_ENTITY_CONFIG } };\r\n}\r\n \r\nexport const resetManagementPage = () => {\r\n    return {\r\n        type: types.RESET_MANAGEMENT_PAGE,\r\n        payload: {},\r\n        meta: { type: types.RESET_MANAGEMENT_PAGE }\r\n    };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            entity: request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl().concat(\"add\") : apiEntityBaseUrl().concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: 10,\r\n                fieldsFilter: {},\r\n                entryPoint:\"inputField\"\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            entity: name,\r\n            filter: {\r\n                limit: 1,\r\n                page: 0,\r\n                exacts: true,\r\n                contains: false,\r\n                fieldsFilter: { id: id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n \r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl().concat(\"generateappid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiMessage().concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            messages: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const sendChatMessage = (message, username, receiver, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SEND_MESSAGE,\r\n        payload: {\r\n            message:{\r\n                receiver:receiver,\r\n                text:message\r\n            }, \r\n            username: username, \r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.SEND_MESSAGE,\r\n            url: apiMessage().concat(\"sendmessage\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getAvailableSessions = ( app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_SESSIONS,\r\n        payload: { },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_SESSIONS,\r\n            url: apiMessage().concat(\"getsessions\")\r\n        }\r\n    };\r\n}\r\n\r\n\r\nexport const getEventByDate = (month, year, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_EVENTS_BY_DATE,\r\n        payload: { year: year, month: month },\r\n        meta: {\r\n            app: app, type: types.GET_EVENTS_BY_DATE,\r\n            url: apiAdmin().concat(\"event\")\r\n        }\r\n    };\r\n}\r\nexport const selectDivision = (id, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SELECT_DIVISION,\r\n        payload: { divisionId: id },\r\n        meta: {\r\n            app: app, type: types.SELECT_DIVISION, url: apiAccount().concat(\"setdivision\")\r\n        }\r\n    };\r\n}\r\n \r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount().concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n///ok\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {\r\n            user: { username: username, password: password }\r\n        },\r\n        meta: { type: types.DO_LOGIN, url: apiAccount().concat(\"login\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const refreshLoginStatus = (loginStatus) => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {loginStatus:loginStatus},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\n//ok\r\nexport const getDivisons = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.GET_DIVISIONS,\r\n        payload: {\r\n\r\n        },\r\n        meta: { type: types.GET_DIVISIONS, url: apiAccount().concat(\"divisions\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n \r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n \r\n\r\n"," \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const GET_DIVISIONS = \"GET_DIVISIONS\";\r\nexport const SELECT_DIVISION = \"SET_DIVISION\";\r\nexport const GET_EVENTS_BY_DATE = \"GET_EVENTS_BY_DATE\";\r\n     \r\nexport const REQUEST_ID = \"req_ID\";\r\n\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const RESET_MANAGEMENT_PAGE = \"reset_management_page\";\r\n\r\nexport const ADD_EVENT_FROM_TIMELINE = \"add_event_from_timeline\";\r\nexport const SET_ENTITY_CONFIG = \"set-entity-config\";\r\n \r\nexport const SEND_MESSAGE = \"send_message\";\r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\"; \r\nexport const GET_SESSIONS = \"GET_SESSIONS\"; ","export const _byId = (id) => { return document.getElementById(id) }\r\n\r\nexport const clearFields = (...ignore) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n    let withIgnore = ignore != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore)\r\n            for (let y = 0; y < ignore.length; y++)\r\n                if (inputs[i].id == ignore[y]) continue loop;\r\n\r\n        if (inputs[i].type == \"text\") inputs[i].value = \"\";\r\n        if (inputs[i].type == \"number\") inputs[i].value = 0;\r\n    }\r\n}\r\n\r\nexport function toBase64(file, referer, callback){\r\n\tconst reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n    \talert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (_byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array(); \r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton  ? totalButton  : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton  ) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton -1 \r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\n\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyup = (e) => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(e.target.value, this.props.id);\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            if (this.props.type == \"date\") {\r\n                this.handleKeyup(e);\r\n            }\r\n            if (this.props.id && this.props.type == \"checkbox\") {\r\n                this.props.onChange(this.props.id);\r\n            }\r\n            if (this.props.onChange && this.props.id) {\r\n                this.props.onChange();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let type = this.props.type ? this.props.type : \"text\";\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let name = this.props.name ? this.props.name : \"\";\r\n        let style = this.props.style ? this.props.style : {};\r\n\r\n        let inputField = <input style={style}\r\n            className=\"rounded\"\r\n            name={name}\r\n            key={\"KEY-input-\" + this.props.id}\r\n            id={this.props.id}\r\n            type={type}\r\n            onKeyUp={this.handleKeyup}\r\n            placeholder={placeholder}\r\n            checked={this.props.checked}\r\n            onChange={this.onChange}\r\n           \r\n        />;\r\n\r\n        if (this.props.disabled == true) {\r\n            inputField = <input style={style}\r\n                className=\"rounded\"\r\n                onChange={this.onChange}\r\n                name={name} key={\"KEY-input-\" + this.props.id}\r\n                checked={this.props.checked}\r\n                id={this.props.id}\r\n                type={type} onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n               \r\n                disabled />\r\n        }\r\n\r\n        if (type == \"textarea\") {\r\n            inputField = <textarea style={style}\r\n                className=\"rounded\"\r\n                name={name}\r\n                key={\"KEY-input-\" + this.props.id}\r\n                id={this.props.id}\r\n                type={type}\r\n                onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n                onChange={this.onChange}\r\n                checked={this.props.checked} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field \">\r\n                {inputField}\r\n                {this.props.type == \"radio\" || this.props.type == \"checkbox\" ? <span style={{ fontSize: '0.9em' }}>\r\n\r\n                    {this.props.text} </span> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\n\r\nclass ActionButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = () => {\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"action-button rounded\";\r\n\r\n        if(this.props.status!= null ){\r\n            className=className.concat(\" \").concat(this.props.status);\r\n        }\r\n        return (\r\n            <div >\r\n                <button \r\n                style       ={{...this.props.style}} \r\n                className   ={className} \r\n                id          ={this.props.id} \r\n                onClick     ={this.onClick}>\r\n                {this.props.text}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ActionButton;","import React, {Component} from 'react'\r\nimport '../css/Input.css'\r\n\r\nclass Label extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onClick = () =>{\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let style = this.props.style?this.props.style:{};\r\n        let className = \"input-field \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n        if(this.props.onClick){\r\n            className+=\" clickable\";\r\n        }\r\n        return(\r\n            <div onClick={this.onClick} style={style} className={className}>\r\n                <label>{this.props.text}</label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react'\r\nimport '../css/Common.css'\r\nimport '../css/Message.css'\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {\r\n            let progress = Math.floor( this.props.progress);\r\n            msgStyle = {\r\n                width:progress + \"%\",\r\n                textAlign: 'left'\r\n            };\r\n            className+=\" rounded\";\r\n            messageText =  <span className=\"loader\">{this.props.progress + \"%\"}</span>          \r\n        }\r\n        return (\r\n            <div style={msgStyle} className={className} >{messageText}</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Message;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Login.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport Label from '../Label';\r\nimport Message from '../Message'\r\nimport { withRouter } from 'react-router';\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            showMessageLoginFailed: false\r\n        }\r\n\r\n\r\n\r\n        this.handleUsername = (value) => {\r\n            this.setState({ username: value });\r\n        }\r\n        this.handlePassword = (value) => {\r\n            this.setState({ password: value });\r\n        }\r\n\r\n        this.doLogin = () => {\r\n\r\n            console.log(\"u:\", this.state.username, \",p:\", this.state.password);\r\n            this.props.doLogin(document.getElementById(\"username-field\").value,\r\n                document.getElementById(\"password-field\").value, this.props.main);\r\n        }\r\n\r\n        this.endMessage = () => {\r\n            this.setState({ showMessageLoginFailed: false })\r\n        }\r\n\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.props.setMenuCode(menus.LOGIN);\r\n        document.title = \"Login\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        // if(this.props.loginAttempt == false && this.state.showMessageLoginFailed == false){\r\n        //     this.setState({showMessageLoginFailed:true})\r\n        // }\r\n    }\r\n\r\n    render() {\r\n\r\n        let message = <p>\r\n            {this.props.loginFailed ? <Message endMessage={this.endMessage} type=\"failed\" text=\"Login Failed\" /> : \"\"}\r\n        </p>\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                < ContentTitle title=\"Login Page\" />\r\n                {message}\r\n                <div className=\"login-container\">\r\n                    <Label text=\"Username\" />\r\n                    <InputField id=\"username-field\" onKeyUp={this.handleUsername} />\r\n                    <Label text=\"Password\" />\r\n                    <InputField id=\"password-field\" type=\"password\" onKeyUp={this.handlePassword} />\r\n                    <ActionButton style={{margin:'5px'}} id=\"btn-login\" status=\"submit\" onClick={this.doLogin} text=\"Login\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport '../../css/Tab.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Tab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let tabsData = this.props.tabsData ? this.props.tabsData : [];\r\n\r\n        let autoColumns = \"5% \" + (\"max-content \".repeat(tabsData.length)) + \" auto\";\r\n        let msAutoColumns = \"5% \" + (\"max-content \".repeat(tabsData.length)) + \" 1fr\";\r\n        let i = 0;\r\n        return (\r\n            <div className=\"tab-container  grid-container\" style={{\r\n                ...this.props.style,\r\n                width               : 'auto',\r\n                gap                 : '0px',\r\n               // display: 'grid',\r\n                msGridColumns       : autoColumns,\r\n                gridTemplateColumns : msAutoColumns\r\n            }} >\r\n                <div style={{ width: '100%', borderBottom: 'solid 1px lightgray', msGridColumn:1 }}></div>\r\n                {tabsData.map(tabData => {\r\n\r\n                    i++;\r\n\r\n                    return <div \r\n\r\n                    key         ={stringUtil.uniqueId()} \r\n                    className   ={tabData.active ? \"tab-element tab-item-active rounded-top\" :  \"tab-element tab-item\"} \r\n                    onClick     ={tabData.onClick ? tabData.onClick : () => { }}\r\n                    style       = {{msGridColumn: i} }\r\n                    >\r\n                        {tabData.text}\r\n                    </div>\r\n                })}\r\n                <div style={{ width: '100%', borderBottom: 'solid 1px lightgray', msGridColumn: 1 + tabsData.length }}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ComboBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = (e) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(e.target.value); \r\n            }\r\n            else {\r\n                console.log(\"Not supported\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let options = [];\r\n        if (this.props.options) {\r\n            options = this.props.options;\r\n        } \r\n        return (\r\n            <div className=\"input-field \">\r\n                <select value={this.props.defaultValue ? this.props.defaultValue : \"\"} className=\"rounded\" id={this.props.id}\r\n                    onChange={this.handleOnChange} >\r\n                    {options.map(\r\n                        option => {\r\n                            return <option key={\"opt_\" + stringUtil.uniqueId()} value={option.value} >{option.text}</option>\r\n                        }\r\n                    )}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComboBox;","import  React  from 'react'\r\nimport '../../css/Common.css'\r\nimport ComboBox from '../input/ComboBox';\r\n\r\nclass DashboardMain extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            divisionId:null\r\n        }\r\n    }\r\n\r\n    onDivisionListChange = (value) => {\r\n        if(value == 0){\r\n            return;\r\n        }\r\n\r\n        this.setState({divisionId:value});\r\n        this.props.selectDivision(value);\r\n    }\r\n    \r\n    divionOptions = () => {\r\n        let options = [{\r\n            value: 0,\r\n            text:\"-Pilih BPD-\"\r\n        }];\r\n        let divisions = this.props.divisions? this.props.divisions : [];\r\n\r\n        divisions.forEach(division => {\r\n            options.push({\r\n                value: division.id,\r\n                text: division.name\r\n            })\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render(){\r\n \r\n        const division = this.props.division;\r\n        let divisionId = this.state.divisionId;\r\n        if(this.props.division){\r\n            divisionId = this.props.division.id;\r\n        }\r\n\r\n        return(\r\n            <div >\r\n                <p>Login Sebagai</p>\r\n                <ComboBox \r\n                    defaultValue    ={divisionId} \r\n                    onChange        ={this.onDivisionListChange} \r\n                    options         ={this.divionOptions()} \r\n                    />\r\n\r\n                <p>Current Selection:</p>\r\n                <p>{division?division.name:\"\"}</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default DashboardMain;","export  const month = [\r\n    { name: \"Januari\", day: 31, text:\"Januari\",value:\"1\" },\r\n    { name: \"Februari\", day: 28, text:\"Februari\",value:\"2\" },\r\n    { name: \"Maret\", day: 31, text:\"Maret\",value:\"3\" },\r\n    { name: \"April\", day: 30, text:\"April\",value:\"4\" },\r\n    { name: \"Mei\", day: 31 , text:\"Mei\",value:\"5\"},\r\n    { name: \"Juni\", day: 30, text:\"Juni\",value:\"6\" },\r\n    { name: \"Juli\", day: 31 , text:\"Juli\",value:\"7\"},\r\n    { name: \"Agustus\", day: 31 , text:\"Agustus\",value:\"8\"},\r\n    { name: \"September\", day: 30 , text:\"September\",value:\"9\"},\r\n    { name: \"Oktober\", day: 31 , text:\"Oktober\",value:\"10\"},\r\n    { name: \"November\", day: 30 , text:\"November\",value:\"11\"},\r\n    { name: \"Desember\", day: 31 , text:\"Desember\",value:\"12\"},\r\n];","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Card.css'\r\n\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let titleStyle = {height:'auto'}\r\n        if (this.props.icon) {\r\n            titleStyle = {\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundColor: 'white',\r\n                backgroundImage: \"url(\" + this.props.icon + \")\",\r\n                backgroundSize: '200px 160px',\r\n                \r\n            }\r\n        }\r\n\r\n        let className= \"card \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.onClick} style={this.props.style} className={className}>\r\n                <div className=\"card-title  \" style={titleStyle}>\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\n\r\nclass FullCalendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth() + 1,\r\n            inputYearValue: new Date().getFullYear(),\r\n            activeId: \"\", \r\n            selectedDay: 0\r\n        }\r\n\r\n        this.calendarData = [];\r\n        this.days = [\"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\", \"Ahad\"];\r\n\r\n\r\n        this.month_now = 7;// 0; \r\n        this.begin = { week: 1, day: 3, dayCount: 31, info: \"\" };\r\n        this.begin_old = { week: 0, day: 0, dayCount: 0, info: \"\" };\r\n        this.year_now = 1945; \r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n        this.running_month = 7;\r\n        this.running_year = 1945;\r\n        this.filterDayId = 0;\r\n        this.filterMonthId = 0; this.dateFormId = 0;\r\n        this.entity_Name = 0; this.entity_Prop = 0; this.dateFormId = 0;\r\n\r\n        this.setSelectedMonth = (val) => {\r\n            this.setState({ selectedMonth: val });\r\n            this.props.refresh(val, this.year_now);\r\n        }\r\n        this.changeInputYear = (val, id) => {\r\n            this.setState({ inputYearValue: val, activeId: id });\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => { \r\n            this.props.getEventByDate(month, year );\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            if(this.props.getEventDetail){\r\n                return this.props.getEventDetail(day);\r\n            }\r\n\r\n            return [];\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        } \r\n        this.updateFields();\r\n        if (_byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n         this.loadCalendar();\r\n    }\r\n\r\n    setDateElementId(dateID) { \r\n        this.dateFormId = dateID;\r\n        let filterStr = \"filter-\" + dateID;\r\n        this.filterDayId = (filterStr + \".day\");\r\n        this.filterMonthId = (filterStr + \".month\");\r\n        this.dateFormId = (filterStr + \".year\");\r\n    }\r\n\r\n    updateFields() {\r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n    }\r\n\r\n    loadCalendar() {\r\n        this.updateFields();\r\n        this.createTable();\r\n        this.begin_old = this.begin;\r\n        this.begin = this.fillDay(this.month_now, true, this.begin);\r\n\r\n        this.input_month.value = new Date().getMonth() + 1; \r\n        this.setCalendar();\r\n        this.setState({ updated: new Date(), inputYearValue: new Date().getFullYear() });\r\n    }\r\n    setCalendar() {\r\n        this.doSetCalendar();\r\n    }\r\n\r\n    doSetCalendar() {\r\n        console.log(\"==start==\");\r\n\r\n        this.running_month = this.input_month ? this.input_month.value - 1 : new Date().getMonth();\r\n        this.running_year = this.state.inputYearValue ? this.state.inputYearValue : new Date().getFullYear();\r\n        let diff_year = +Math.abs(this.running_year - this.year_now);\r\n        // alert(\"diff_year year:\" + diff_year);\r\n        let monthCount = 0;\r\n        if (diff_year > 0)\r\n            monthCount = (11 - this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (+this.running_month);\r\n        else\r\n            monthCount = this.running_month - this.month_now;\r\n        let less = false;\r\n        if (this.running_year - this.year_now > 0) {\r\n            less = false;\r\n        } else if (this.running_year - this.year_now < 0) {\r\n            less = true;\r\n        } else {\r\n            if (this.running_month - this.month_now > 0) {\r\n                less = false;\r\n            } else {\r\n                less = true;\r\n            }\r\n        }\r\n        monthCount = Math.abs(monthCount);\r\n        //console.log(\"kurang dari: \", less);\r\n        let current_month = this.month_now;\r\n        let endMonth = (monthCount + this.month_now);\r\n        if (monthCount <= 0)\r\n            return;\r\n        if (!less)\r\n        ////console.log(\"month now\",this.month_now,\"diff_year\",monthCount,\"to\",to);\r\n        {\r\n            for (let m = this.month_now + 1; m <= endMonth + 1; m++) {\r\n                if (current_month > 11) {\r\n                    current_month = 0;\r\n\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.nextMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"month\",current_month,\"this.running_year\",this.year_now);\r\n                current_month++;\r\n            }\r\n        } else if (less) {\r\n            let pastMonthCount = (this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (11 - this.running_month);\r\n            endMonth = (pastMonthCount + this.month_now);\r\n            //console.log(\"month now\", this.month_now, \"diff_year\", monthCount, \"from\", to);\r\n            let begin_month = this.month_now;\r\n            for (let b = endMonth + 1; b >= begin_month + 1; b--) {\r\n                if (current_month < 0) {\r\n                    current_month = 11;\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.prevMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"b\",b,\"month\",current_month);\r\n                current_month--;\r\n            } \r\n        }\r\n\r\n        this.fillInfo();\r\n        console.log(\"==end==\")\r\n    }\r\n\r\n    fillInfo() {\r\n        if (this.date_info)\r\n            this.date_info.value = timeLineConstant.month[this.month_now].name + \" \" + this.year_now;\r\n        this.refresh();\r\n\r\n    } \r\n\r\n    detail(day, month, year) { \r\n        if(this.props.detail){\r\n            this.props.detail(day, month, year);\r\n        } \r\n    }\r\n\r\n    prevMonth() {\r\n\r\n        this.setState({ updated:new Date()})\r\n        return this.doPrevMonth(false);\r\n    }\r\n\r\n    doPrevMonth(prev) {\r\n        this.month_now--;\r\n        if (prev) {\r\n            this.running_month--;\r\n        }\r\n        if (this.month_now < 0) {\r\n            this.month_now = 11;\r\n            this.year_now--;\r\n            if (prev) {\r\n                this.running_month = 11;\r\n                this.running_year--;\r\n            }\r\n        }\r\n        let begin_prev = this.findBegin(this.begin_old, this.begin_old.dayCount);\r\n\r\n        this.begin_old = {\r\n            week: begin_prev.week,\r\n            day: begin_prev.day,\r\n            dayCount: begin_prev.dayCount,\r\n        }\r\n        let switch_ = this.fillDay(this.month_now, false, begin_prev);\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n    }\r\n\r\n    nextMonth() {\r\n        \r\n        return this.doNextMonth(false);\r\n    }\r\n\r\n    refresh() {\r\n        if(this.props.refresh){\r\n            this.props.refresh(this.month_now, this.year_now);\r\n        }\r\n    }\r\n\r\n    doNextMonth(next) {\r\n        console.log(\"NEXT\")\r\n        this.month_now++;\r\n        if (next) {\r\n            this.running_month++;\r\n        }\r\n        if (this.month_now > 11) {\r\n            this.month_now = 0;\r\n            this.year_now++;\r\n            if (next) {\r\n                this.running_month = 0;\r\n                this.running_year++;\r\n            }\r\n        }\r\n\r\n        let switch_ = this.fillDay(this.month_now, true, this.begin);\r\n        this.begin_old = {\r\n            week: this.begin.week,\r\n            day: this.begin.day,\r\n            dayCount: this.begin.dayCount,\r\n        }\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount,\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n\r\n    }\r\n\r\n    findBegin(begin_old_, totalday) {\r\n        let M = this.month_now - 1;\r\n        if (M < 0) {\r\n            M = 11;\r\n        }\r\n        let day = begin_old_.day;\r\n        let week = 6;\r\n        let begin_prev_ = {\r\n            week: 0,\r\n            day: 0,\r\n            dayCount: timeLineConstant.month[M].day\r\n        }\r\n\r\n        for (let D = totalday; D >= 0; D--) {\r\n            if (day <= 0) {\r\n                day = 7;\r\n                week--;\r\n            }\r\n            day--;\r\n        }\r\n        begin_prev_.week = week;\r\n        begin_prev_.day = day + 1;\r\n        return begin_prev_;\r\n    }\r\n\r\n    setElementByAttr(val, val2, day) {\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            let data = this.calendarData[i];\r\n\r\n            if (data.week == val && data.day == val2) {\r\n                if (new Date().getDate() == day &&\r\n                    new Date().getMonth() == this.month_now &&\r\n                    new Date().getYear() + 1900 == this.year_now) {\r\n\r\n                    console.log(\"NOW\", i);\r\n                    this.calendarData[i].now = true;\r\n                } else {\r\n                 //   console.log(\"NOT NOW\", i);\r\n                    this.calendarData[i].now = false;\r\n                }\r\n                this.calendarData[i].text = day;\r\n            }\r\n        }\r\n    }\r\n\r\n    addNewEvent(day, month, year) {\r\n\r\n        let strDate = this.dateAcceptableForHtmlInput(day, month, year);\r\n        document.getElementById(this.dateFormId).value = strDate;\r\n    }\r\n\r\n    dateAcceptableForHtmlInput(day, month, year) {\r\n        return year + \"-\" + this.addZero(month, 10) + \"-\" + this.addZero(day, 10);\r\n    }\r\n\r\n    addZero(Val, Min) {\r\n        let N = new String(Val);\r\n        let MinStr = new String(Min);\r\n\r\n        let ValLength = N.length;\r\n        let MinLength = MinStr.length;\r\n        let Diff = MinLength - ValLength;\r\n        for (let i = 1; i <= Diff; i++) {\r\n            N = new String(\"0\").concat(N);\r\n        }\r\n\r\n        return N;\r\n    }\r\n\r\n    clear() {\r\n\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            this.calendarData[i].text = \"\";\r\n        }\r\n\r\n        timeLineConstant.month[1].day = 28 + (+this.year_now % 4 == 0 ? 1 : 0);\r\n    }\r\n\r\n    fillDay(current_month, next, begin) {\r\n        this.clear();\r\n        let begin_new = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let begin_old_ = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let week_ = begin_new.week;\r\n        let begin_week = week_;\r\n        if (begin_new.week > 1 && begin_new.day > 1) {\r\n            week_ = 1;\r\n            begin_week = 1;\r\n        }\r\n        let day_ = begin_new.day;\r\n        let begin_day = day_;\r\n        let isNow = this.running_month == current_month && this.running_year == this.year_now;\r\n        //  console.log(\"isNow\", isNow,this.running_month,'=',current_month, this.running_month == current_month,this.running_year,'=',this.year_now, this.running_year == this.year_now)\r\n        for (let d = 1; d <= timeLineConstant.month[current_month].day; d++) {\r\n            if (day_ > 7) {\r\n                day_ = 1;\r\n                week_++;\r\n            }\r\n            if (isNow) {\r\n                this.setElementByAttr(week_, day_, d);\r\n            }\r\n            day_++;\r\n        }\r\n        begin_new.week = week_ >= 5 ? 2 : 1;\r\n        begin_new.day = day_;\r\n        begin_new.dayCount = timeLineConstant.month[current_month].day;\r\n        //console.log(\"old\", begin_old_.day, begin_old_.week);\r\n        //console.log(\"   \");\r\n        //console.log(\"new\", begin_new.day, begin_new.week);\r\n        this.fillInfo();\r\n        if (isNow) {\r\n            // this.detail(null, (+this.running_month + 1), this.running_year);\r\n            begin_new.info = \"NOW\";\r\n            this.getEventByDate(this.running_month + 1, this.running_year);\r\n        } else {\r\n            begin_new.info = \"SOME-DAY\";\r\n        }\r\n\r\n\r\n\r\n        return begin_new;\r\n    }\r\n\r\n    render() {\r\n        //validate division\r\n        let selectedYear = this.state.inputYearValue;\r\n\r\n        let totalCalendarData = this.days.map(day => {\r\n            return ({ text: day, title: true })\r\n        })\r\n\r\n        this.calendarData.forEach(element => {\r\n            totalCalendarData.push(element);\r\n        });\r\n\r\n        let calendarData = totalCalendarData.map(\r\n            data => {\r\n\r\n                if (data.text == null || data.text == \"\") {\r\n                    return <div key={uniqueId()}></div>\r\n                }\r\n\r\n                let style = { width: '80%', minHeight: '150px', marginBottom: '15px' };\r\n\r\n                if (data.title == true) {\r\n                    return (<div key={uniqueId()}>{data.text}</div>)\r\n                }\r\n\r\n                if (data.now == true) {\r\n                    style = {\r\n                        ...style,\r\n                        backgroundColor: 'lightgreen'\r\n                    }\r\n                }\r\n\r\n                let events = this.getEventDetail(+data.text);\r\n                let i = 0;\r\n                let eventList = events.map(event => {\r\n                    i++;\r\n                    if (i <= 3) {\r\n\r\n                        return <p key={\"EVT_\" + i}>{event.name}</p>\r\n                    } else if (i == 4) {\r\n                        return <ActionButton key={uniqueId()} onClick={() => { }} text={\"more\"} />\r\n                    } else {\r\n                        return null;\r\n                    }\r\n\r\n\r\n                });\r\n             //   console.log(data.text, \"EVENTS: \", events);\r\n\r\n                return (\r\n                    <Card key={uniqueId()} style={style} title={data.text}\r\n                        onClick={() => this.detail(data.text, this.month_now, this.year_now)}\r\n                        content={eventList}\r\n                    />\r\n                )\r\n            }\r\n        )\r\n\r\n        let dateInfoText = timeLineConstant.month[this.month_now].name + \" \" + this.year_now;\r\n        let content = <div id=\"calendar-wrapper\">\r\n\r\n            <GridComponent cols={3} style={{\r\n                textAlign: 'center', width: '400px'\r\n            }} items={[\r\n                <ComboBox key={uniqueId()} id=\"input_month\" defaultValue={this.state.selectedMonth} onChange={this.setSelectedMonth}\r\n                    options={timeLineConstant.month} />,\r\n                <InputField key={uniqueId()}  type=\"number\" id=\"input_year\" value={selectedYear} onKeyUp={this.changeInputYear} />,\r\n                <ActionButton key={uniqueId()}  onClick={(e) => this.setCalendar()} text={\"Go\"} />,\r\n                <ActionButton key={uniqueId()}  onClick={(e) => this.doPrevMonth(true)} text={\"Prev\"} />,\r\n                <input key={uniqueId()} value={dateInfoText}  disabled className=\"form-control\" id=\"date-info\" />,\r\n                <ActionButton key={uniqueId()}  onClick={(e) => this.doNextMonth(true)} text={\"Next\"} />\r\n            ]}\r\n\r\n            />\r\n            <p></p>\r\n            <p></p>\r\n            <GridComponent cols={7} items={calendarData} />\r\n        </div>;\r\n\r\n\r\n        return (\r\n             content  \r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default FullCalendar;","export const TYPE_DYNAMIC_DROPDOWN  = \"dynamicDropdown\";\r\nexport const TYPE_TEXTAREA = \"textarea\";\r\n\r\nexport const TYPE_LONG_DATE = \"longDate\";\r\nexport const TYPE_DATE = \"date\";\r\nexport const TYPE_STATIC_DROPDOWN = \"staticDropdown\";\r\nexport const TYPE_NUMBER = \"number\";\r\nexport const TYPE_TEXT = \"text\";\r\n\r\nexport const TYPE_MULTIPLE_IMAGE = \"multipleImage\";\r\nexport const TYPE_SINGLE_IMAGE = \"singleImage\";\r\n\r\nexport const divisionConfig = {\r\n    title: \"Badan Pengurus\",\r\n    entityName: \"division\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\", lableName: \"Nama\" },\r\n        { name: \"description\" }, { name: \"institution.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama BPD\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"Deskripsi BPD\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Division Insitusi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"institution.name\",\r\n            reffEntity: \"Institution\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const sectionConfig = {\r\n    title: \"Divisi\",\r\n    entityName: \"section\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"division.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"BPD\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"division.name\",\r\n            reffEntity: \"division\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const programConfig = {\r\n    title: \"Program Kerja\",\r\n    entityName: \"program\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" }\r\n        ,\r\n        { name: \"section.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Proker\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi Proker\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst eventStatus =  [\r\n    { text: \"-Not Configured-\", value: -1 },\r\n    { text: \"Done\", value: 1 },\r\n    { text: \"UnDone\", value: 0 }\r\n];\r\n\r\nexport const eventConfig = {\r\n    title: \"Kegiatan\",\r\n    entityName: \"event\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"info\" },\r\n        { name: \"date\", type: TYPE_LONG_DATE },\r\n        { name: \"location\" },\r\n        { name: \"program.name\" },\r\n        { name: \"participant\" },\r\n        {\r\n            name: \"done\", type: TYPE_STATIC_DROPDOWN, options:eventStatus\r\n        }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Kegiatan\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Waktu Kegiatan\",\r\n            inputType: \"date\",\r\n            name: \"date\"\r\n        },\r\n        {\r\n            lableName: \"Info Kegiatan\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"info\"\r\n        }, {\r\n            lableName: \"Lokasi Kegiatan\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"location\"\r\n        },\r\n        {\r\n            lableName: \"Nama Program\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"program.name\",\r\n            reffEntity: \"program\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Status Kegiatan\",\r\n            inputType: TYPE_STATIC_DROPDOWN,\r\n            name: \"done\",\r\n            options:eventStatus\r\n        },\r\n        {\r\n            lableName: \"Peserta\",\r\n            inputType: TYPE_NUMBER,\r\n            name: \"participant\"\r\n        },\r\n    ]\r\n}\r\n\r\nexport const positionConfig = {\r\n    title: \"Posisi\",\r\n    entityName: \"position\",\r\n    id: \"id\",\r\n    disabled: true,\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" },\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\nexport const memberConfig = {\r\n    title: \"Anggota\",\r\n    entityName: \"member\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"position.name\" },\r\n        { name: \"section.name\" },\r\n        { name: \"description.name\" }\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Anggota\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"position.name\",\r\n            reffEntity: \"position\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==============OLD STUFF==============//\r\n\r\n/**\r\n * SAMPLE\r\n */\r\n\r\nexport const productConfig = {\r\n    title: \"Product\",\r\n    entityName: \"product\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"code\" },\r\n        { name: \"description\" }, { name: \"unit.name\" },\r\n        { name: \"price\", type: TYPE_NUMBER }, { name: \"category.name\" },\r\n        { name: \"imageUrl\", type: \"imageMultiple\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Product Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Code\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Product Image(s)\",\r\n            inputType: \"multipleImage\",\r\n            name: \"imageUrl\"\r\n        },\r\n        {\r\n            lableName: \"Product Description\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Product Unit\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"unit.name\",\r\n            reffEntity: \"Unit\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Price\",\r\n            inputType: TYPE_NUMBER,\r\n            name: \"price\"\r\n        },\r\n        {\r\n            lableName: \"Product Category\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"category.name\",\r\n            reffEntity: \"Category\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport const supplierList = {\r\n    title: \"Supplier\",\r\n    entityName: \"supplier\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"address\" }, { name: \"contact\" }, { name: \"website\", type: \"link\" },\r\n        { name: \"iconUrl\", type: \"image\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Supplier Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Address\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Contact\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"contact\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Icon\",\r\n            inputType: \"singleImage\",\r\n            name: \"iconUrl\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Website\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"website\"\r\n        }\r\n    ]\r\n}\r\nexport const customerList = {\r\n    title: \"Customer\",\r\n    entityName: \"customer\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"username\" }, { name: \"name\" }, { name: \"address\" }, { name: \"phone\" }, { name: \"email\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Customer Unique Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"username\"\r\n        },\r\n        {\r\n            lableName: \"Customer Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Customer Address\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Customer Phone\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"phone\"\r\n        },\r\n        {\r\n            lableName: \"Customer Email\",\r\n            inputType: \"email\",\r\n            name: \"email\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const transactionConfig = {\r\n    title: \"Transaction\",\r\n    entityName: \"transaction\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"code\" }, { name: \"transactionDate\", type: TYPE_LONG_DATE },\r\n        { name: \"type\" }, { name: \"supplier.name\" },\r\n        { name: \"customer.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Transaction Code\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Date\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"transactionDate\"\r\n        },\r\n        {\r\n            lableName: \"Transaction Type\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"type\"\r\n        },\r\n        {\r\n            lableName: \"Supplier\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"supplier.name\"\r\n        },\r\n        {\r\n            lableName: \"Customer\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"customer.name\",\r\n        },\r\n\r\n    ]\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport FullCalendar from './FullCalendar';\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth(),\r\n            selectedYear: new Date().getFullYear(),\r\n            detailView: false,\r\n            detailEvents: [],\r\n            selectedDay: 0\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => {\r\n            console.log(\"_________\", month, year);\r\n            this.setState({\r\n                update: new Date(), selectedMonth: month, selectedYear: year\r\n            });\r\n            this.props.getEventByDate(month, year, this.props.app);\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            let events = this.props.events;\r\n            let result = [];\r\n\r\n            events.forEach(event => {\r\n                let date = new Date(event.date);\r\n                if (date.getDate() == day) {\r\n                    result.push(event);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n        this.detail = (day, month, year) => {\r\n            console.log(\"@DETAIL:\", day, month, year);\r\n            let events = this.getEventDetail(+day);\r\n            this.setState({\r\n                detailView: true, detailEvents: events, selectedDay: day,\r\n                selectedMonth: month, selectedYear: year\r\n            })\r\n        }\r\n\r\n        this.refresh = (selectedMonth, selectedYear) => {\r\n            this.setState({\r\n                updated: new Date(),\r\n                selectedMonth: selectedMonth, selectedYear: selectedYear\r\n            })\r\n        }\r\n\r\n        this.addEvent = () => {\r\n            let config = entityConfig.eventConfig;\r\n\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n\r\n            this.props.addEventFromTimeline(\r\n                this.state.selectedDay,\r\n                this.state.selectedMonth + 1, /*IMPORTANT*/\r\n                this.state.selectedYear\r\n            );\r\n\r\n            this.props.history.push(\"/management\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n\r\n        //validate division\r\n        if (this.props.division == null) {\r\n            return <h2>Silakan Pilih Badan Pengurus MPI</h2>\r\n        }\r\n        let title = <h2>TimeLine {this.props.division.name + \" \" + this.state.selectedYear}</h2>;\r\n\r\n        let detailEvents = [];\r\n        if (this.state.detailView == true) {\r\n            this.state.detailEvents.forEach(event => {\r\n\r\n                const eventDate = new Date(event.date).toString();\r\n\r\n                let eventStatus = \"Done\";\r\n                if(event.done == 0){\r\n                    eventStatus = \"Not Done\";\r\n                }else if(event.done != 1){\r\n                    eventStatus = \"Not Configured\";\r\n                }\r\n\r\n                let content = <div>\r\n                     <p>{eventDate}</p>\r\n                    <GridComponent cols={2} items={[  \r\n                        <label>Location</label>, <label>{event.location}</label>,\r\n\r\n                        <label>Participant</label>, <label>{event.participant}</label>,\r\n\r\n                        <label>Status</label>, <label>{eventStatus}</label>,\r\n\r\n                        <label>Info</label>, <label>{event.info}</label>,\r\n                    ]} />\r\n                </div>\r\n\r\n                let eventCard = <Card title={event.name}\r\n                    content={content} style={{ width: '90%' }}\r\n                />\r\n                detailEvents.push(eventCard);\r\n            });\r\n\r\n            if (detailEvents.length == 0) {\r\n                detailEvents = [\r\n                    <div>No Agenda.</div>\r\n                ]\r\n            }\r\n            return <div>\r\n                {title}\r\n                <p>Detail in {this.state.selectedDay + \" \" + stringUtil.monthYearString(\r\n                    this.state.selectedMonth + 1,\r\n                    this.state.selectedYear\r\n                )}</p>\r\n                <ActionButton onClick={() => { this.setState({ detailView: false }) }} text=\"Back\" />\r\n                <GridComponent width={\"30%\"} cols={3} items={detailEvents} />\r\n                <ActionButton status=\"success\" onClick={() => { this.addEvent() }} text=\"Add Event\" />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {title}\r\n                <FullCalendar\r\n                    division={this.props.division}\r\n                    detail={this.detail} getEventByDate={this.getEventByDate}\r\n                    refresh={this.refresh}\r\n                    events={this.props.events} getEventDetail={this.getEventDetail}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        events: state.managementState.events,\r\n        division: state.userState.division\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEventByDate: (m, y, app) => dispatch(actions.getEventByDate(m, y, app)),\r\n    addEventFromTimeline: (d, m, y) => dispatch(actions.addEventFromTimeline(d, m, y))\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Timeline)) ","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Dashboard.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport Tab from '../buttons/Tab';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport DashboardMain from './DashboardMain';\r\nimport Timeline from './Timeline'\r\n\r\nconst MENU_HOME ='home';\r\nconst MENU_TIMELINE = 'timeline';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: MENU_HOME\r\n        }\r\n\r\n        this.setMenuCode = (code) => {\r\n            this.setState({ menu: code });\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n        this.getDivisons = () => {  \r\n            this.props.getDivisons( this.props.app);  \r\n        }\r\n\r\n        this.selectDivision = (divisionId) => {\r\n            this.props.selectDivision(divisionId, this.props.app);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        if (this.props.loginStatus != true)\r\n            return;\r\n        this.props.setMenuCode(menus.DASHBOARD);\r\n        document.title = \"Dashboard\";\r\n\r\n        this.getDivisons();\r\n    }\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                text: \"Home\",\r\n                active: this.state.menu == MENU_HOME,\r\n                onClick: () => {this.setMenuCode(MENU_HOME) }\r\n            },\r\n            {\r\n                text: \"Time Line\",\r\n                active: this.state.menu == MENU_TIMELINE, \r\n                onClick: () => {this.setMenuCode(MENU_TIMELINE) }\r\n            } \r\n        ];\r\n    }\r\n \r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const buttonsData = this.getButtonsData();\r\n\r\n        let content = null;\r\n        switch (this.state.menu) {\r\n            case MENU_HOME:\r\n                    content         = <DashboardMain  division={this.props.division} \r\n                    selectDivision  ={this.selectDivision} \r\n                    divisions       ={this.props.divisions} />\r\n                break;\r\n            case MENU_TIMELINE:\r\n                    content         = <Timeline app={this.props.app} />\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (<div className=\"section-container\">\r\n            <ContentTitle title={\"Admin Page\"}\r\n                description=\"Welcome to the admin console\" />\r\n            <div className=\"management-container\">\r\n                <Tab tabsData={buttonsData} />\r\n                {content}\r\n            </div>\r\n        </div>)\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        divisions: state.userState.divisions,\r\n        division: state.userState.division,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getDivisons: ( app) => dispatch(actions.getDivisons( app)),\r\n    selectDivision: (divisionId, app) => dispatch(actions.selectDivision(divisionId, app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)); ","import React, { Component } from 'react';\r\nimport '../../css/Footer.css'\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let date = new Date().getFullYear();\r\n\r\n        return (\r\n            <div className=\"App-footer\">\r\n               BPP MPI Divisi Media {date+\" powered by React Js \"+React.version}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport SockJsClient from 'react-stomp'; \r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport Label from '../Label'; \r\nimport { uniqueId } from '../../utils/StringUtil';\r\nimport Tab from '../buttons/Tab';\r\nimport '../../css/Chat.css'\r\nimport * as config from '../../utils/WebConfig'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst hostCloud = url.hostCloud;\r\nconst hostLocal = url.hostLocal; \r\nconst MENU_MESSAGE = \"0xfffre\";\r\nconst MENU_LIST = \"0x44444\";\r\n\r\nconst usedHost = () => {\r\n    if (config.debugMode() == true)\r\n        return hostLocal;\r\n    else\r\n        return hostCloud;\r\n} \r\n \r\n\r\nconst currentRequestId = () => {\r\n    return localStorage.getItem(\"requestId\");\r\n}\r\n\r\nclass ChatRoom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [], //NEVER NULL\r\n            username: null,\r\n            activeId: null,\r\n            receiver: null,\r\n            menu: MENU_LIST\r\n\r\n        }\r\n\r\n        this.sendChatMessage = () => {\r\n            if (!_byId(\"input-msg\").value) {\r\n                alert(\"Message must not be null\");\r\n                return;\r\n            }\r\n            this.props.sendChatMessage(_byId(\"input-msg\").value, this.state.username,\r\n                this.state.receiver,\r\n                this.props.app);\r\n            _byId(\"input-msg\").value = \"\";\r\n        }\r\n\r\n        this.handleMessage = (response) => {\r\n            console.log(\"Responses handleMessage: \", response.code);\r\n            if (response.code != currentRequestId() && !this.exist(response.receivers)) {\r\n                return;\r\n            }\r\n            this.props.storeChatMessageLocally(response.messages);\r\n            this.setState({ messages: response.messages });\r\n        }\r\n\r\n        this.exist = (receivers) =>{\r\n            for (let i = 0; i < receivers.length; i++) {\r\n                const receiver = receivers[i];\r\n                if(receiver == currentRequestId()){\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        this.changeUsername = (value, id) => {\r\n            this.setState({ username: value, activeId: id });\r\n        }\r\n\r\n        this.setMenuCode = (code) => {\r\n            this.setState({ menu: code });\r\n        }\r\n\r\n        this.setReceiver = (receiver) => {\r\n            const messages = this.getMessagesByReceiver(receiver);\r\n            this.setState({ receiver: receiver, menu: MENU_MESSAGE, messages: messages });\r\n        }\r\n\r\n        this.getMessagesByReceiver = (receiver) => {\r\n            let messages = [];\r\n            const propMessages = this.props.messages ? this.props.messages : [];\r\n            console.log(\"propMessages with c: \",receiver, propMessages);\r\n            for (let i = 0; i < propMessages.length; i++) {\r\n                const message = propMessages[i];\r\n                console.log(message.receiver,\":\", message.receiver == receiver);\r\n                console.log(message.sender,\":\", message.sender == receiver)\r\n                if (message.receiver == receiver || message.sender == receiver) {\r\n                    messages.push(message);\r\n                }\r\n            }\r\n            console.log(\"[filtered] propMessages: \",messages);\r\n            return messages;\r\n        }\r\n    }\r\n\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                text: \"Online Users\",\r\n                active: this.state.menu == MENU_LIST,\r\n                onClick: () => { this.setMenuCode(MENU_LIST) }\r\n            },\r\n            {\r\n                text: \"Message\",\r\n                active: this.state.menu == MENU_MESSAGE,\r\n                onClick: () => { this.setMenuCode(MENU_MESSAGE) }\r\n            }\r\n        ];\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.setMenuCode('chatroom');\r\n        document.title = \"Chat Room\";\r\n        this.props.getMessages(this.props.app);\r\n        if (this.props.userAlias) {\r\n            this.setState({ username: this.props.userAlias })\r\n        }\r\n        this.props.getAvailableSessions(this.props.app);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.activeId && _byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        } \r\n    }\r\n\r\n    render() {\r\n\r\n        const sessionsMap = this.props.sessionsMap;\r\n\r\n        const buttonsData = this.getButtonsData();\r\n\r\n        let content = \"\";\r\n\r\n        if (this.state.menu == MENU_MESSAGE) {\r\n            let messages = this.state.messages;\r\n            content = <div style={{padding: '2%', width: '80%',  backgroundColor: 'yellow', margin: '3%'}}>\r\n                <Label text={\"Receiver: \" + this.state.receiver} />\r\n                <div>\r\n                    {messages.map(message => {\r\n                        const currentSender = message.sender == currentRequestId();\r\n                        const invalidReceiver = !currentSender && this.state.receiver != message.sender;\r\n                        const invalidSender = currentSender && message.receiver != this.state.receiver;\r\n\r\n                        if(invalidReceiver || invalidSender){\r\n                            return null;\r\n                        } \r\n\r\n                        return <ChatItem message={message} currentUser={currentSender} />\r\n                    })}\r\n                </div>\r\n                <InputField style={{  width: '100%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />\r\n                <ActionButton status=\"success\" text=\"Send\" onClick={this.sendChatMessage} />\r\n            </div>;\r\n        } else if (this.state.menu == MENU_LIST) {\r\n            content = <div>\r\n                {sessionsMap.map(session => {\r\n                    return <ActionButton \r\n                        key     ={uniqueId()} \r\n                        onClick ={() => this.setReceiver(session.key)} \r\n                        text    ={session.value} />;\r\n                })}\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            // <div className=\"section-container\">\r\n            //     <ContentTitle title=\"What Do You Feel?\" description=\r\n            //         {\"Identified as [\" + this.state.username + \"]\"} />\r\n            //     <InputField\r\n            //         value={userAlias}\r\n            //         onKeyUp={this.changeUsername}\r\n            //         id=\"input-username\"\r\n            //         placeholder=\"identify your name\" />\r\n            //     <div style={{ textAlign: 'left' }} id=\"chat-room\">\r\n\r\n            //         <div className=\"chat-container\"  >\r\n            //             <ChatList username={this.state.username} messages={this.props.messages} />\r\n            //         </div>\r\n\r\n            //         <GridComponent style={{ width: '50%', textAlign: 'right' }} items={[\r\n            //             <InputField style={{ width: '130%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />,\r\n            //             <ActionButton style={{ margin: '5px' }} status=\"success\" onClick={this.sendChatMessage} text=\"send\" />\r\n\r\n            //         ]} />\r\n\r\n            //         <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/messages']}\r\n            //             onMessage={(msg) => { this.handleMessage(msg) }}\r\n            //             ref={(client) => { this.clientRef = client }} />\r\n            //     </div>\r\n            // </div>\r\n            <div>\r\n                <ContentTitle title=\"under construction\" />\r\n                <Tab tabsData={buttonsData} />\r\n                {content}\r\n\r\n                <SockJsClient url={usedHost() + '/realtime-app'} topics={['/wsResp/messages/'+currentRequestId()]}\r\n                    onMessage={(msg) => { this.handleMessage(msg) }}\r\n                    ref={(client) => { this.clientRef = client }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ChatItem = props => {\r\n    let className = \"chat-item rounded paper-shadow  \"  + (props.currentUser == false ? \" admin \" : \"user\");\r\n     \r\n    let sender = props.message.sender;\r\n    let senderComponent = <span>\r\n        {sender}<span style={{ fontSize: '0.7em'  }} >{props.message.date}</span>\r\n    </span>\r\n    return (\r\n        <div className={className} style={{width:'90%' }}>\r\n            <Label style={{ fontSize: '0.8em', color: 'black' }} text={senderComponent} />\r\n            <Label text={props.message.text} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        messages: state.chatState.messages,\r\n        userAlias: state.shopState.userAlias,\r\n        sessionsMap: state.chatState.sessionsMap\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    sendChatMessage: (message, username, receiver, app) => dispatch(actions.sendChatMessage(message, username, receiver, app)),\r\n    storeChatMessageLocally: (messages) => dispatch(actions.storeMessageLocally(messages)),\r\n    getMessages: (app) => dispatch(actions.getMessageList(app)),\r\n    getAvailableSessions: (app) => dispatch(actions.getAvailableSessions(app))\r\n\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ChatRoom)","import React, { Component } from 'react'\r\n\r\nimport '../../css/Input.css'\r\n\r\nclass DropdownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false\r\n        }\r\n\r\n        this.handleClick = (e) => {\r\n            console.log(\"selected: \",e.target.innerHTML);\r\n            if(this.props.onClick){\r\n                this.props.onClick(e);\r\n            }\r\n        }\r\n\r\n        this.onHover = (e) => {\r\n          \r\n            if(this.props.onHover)\r\n                this.props.onHover( this.props.index); \r\n        }\r\n        this.unHover = (e) => { \r\n            this.setState({ hover: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n          return (\r\n              <div>\r\n                \r\n                <div    onMouseLeave={this.unHover} onMouseOver ={this.onHover}  >\r\n                {this.props.text}</div>\r\n              </div>\r\n          \r\n        )\r\n    }\r\n}\r\nexport default DropdownItem;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport DropdownItem from './DropdownItem';\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            focus: true, hover: false, hoverIndex: -1,\r\n\r\n        }\r\n\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(document.getElementById(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onBlur = () => {\r\n            console.log(\"blur\");\r\n            this.setState({ focus: false, hover: false })\r\n        }\r\n\r\n        this.onSelect = (dataValue, text) => {\r\n            console.log(\"select value:\", dataValue);\r\n            if (this.props.onSelect) { this.props.onSelect(dataValue); }\r\n            if (this.props.id) {\r\n                document.getElementById(this.props.id).value = text;\r\n            }\r\n        }\r\n\r\n        this.onHover = (i) => {\r\n            if (this.state.hoverIndex != i)\r\n                this.setState({ hoverIndex: i });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let dropdownList = [];\r\n        let dropdownComponent = \"\";\r\n        if (this.props.dropdownList && this.props.dropdownList.length > 0) {\r\n            dropdownList = this.props.dropdownList;\r\n\r\n            dropdownComponent = <div className=\"dropdown\">\r\n                {dropdownList.map(\r\n                    (data, i) => {\r\n                        let className = \"dropdown-item\";\r\n                        const key = \"dropdown-item-\" + i;\r\n\r\n                        if (this.state.hoverIndex == i) className = \"dropdown-item-hovered\";\r\n                        return (\r\n                            <div\r\n                                key={key}\r\n                                onClick={(e) => this.onSelect(data.value, data.text)}\r\n                                className={className}>\r\n                                <DropdownItem onClick={(e) => this.onSelect(data.value, data.text)}\r\n                                    onHover={this.onHover}\r\n                                    index={i} text={data.text} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        }\r\n\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let inputClassName = \"rounded\";\r\n        return (\r\n            <div\r\n                onMouseOver={() => this.setState({ focus: true })}\r\n                onMouseLeave={this.onBlur}\r\n                className=\"dropdown-wrapper input-field\">\r\n\r\n                <input\r\n                    className={inputClassName}\r\n                    onFocus={() => this.setState({ focus: true })}\r\n                    id={this.props.id}\r\n                    type=\"text\"\r\n                    onKeyUp={this.handleKeyup}\r\n                    placeholder={placeholder} />\r\n                {dropdownComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default InputDropdown;","import React, { Component } from 'react'\r\nimport '../../css/Input.css'\r\nimport '../../css/Common.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport * as url from '../../constant/Url'\r\nimport ActionButton from '../buttons/ActionButton'\r\n\r\nclass InputFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            base64Data: null\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            componentUtil.toBase64(e.target, this, function (result, referer) {\r\n                referer.setState({ base64Data: result });\r\n\r\n            });\r\n        }\r\n\r\n        this.removeImage = () => {\r\n            if(this.props.removeImage){\r\n                this.props.removeImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.base64Data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let displayImage = null;\r\n        if (this.state.base64Data) {\r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.state.base64Data} width=\"60\" height=\"60\" />\r\n            </div>;\r\n        }\r\n        if (this.props.value && this.props.value.trim() != \"\") {\r\n            \r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.props.value} width=\"60\" height=\"60\" />\r\n                <ActionButton text=\"cancel\" status=\"danger\" onClick={this.removeImage} />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field\" >\r\n                <input accept=\"image/*\" onChange={this.onChange} type=\"file\" key={\"input_file_\" + stringUtil.uniqueId()} />\r\n                {displayImage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFile;\r\n\r\n","import React, { Component } from 'react';\r\nimport * as url from '../../constant/Url'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InputFile from './InputFile';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFileMultiple extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAddMoreFile = () => {\r\n            if(this.props.addMoreImage){\r\n                this.props.addMoreImage();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let inputFields = [];\r\n        if (this.props.inputFilesData) {\r\n            inputFields = this.props.inputFilesData;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {inputFields.map(\r\n                    inputFileData => {\r\n                        let value = inputFileData.value;\r\n                        return (\r\n                            <InputFile\r\n                                key={stringUtil.uniqueId() + \"_multiple_file_item\"}\r\n                                onChange={(base64) => {\r\n                                    if (inputFileData.onChange)\r\n                                        inputFileData.onChange(base64)\r\n                                }}\r\n                                value={value && value.includes(\"base64\") ? value : value ?\r\n                                    url.baseImageUrl + value : null}\r\n                                id={inputFileData.inputId}\r\n                                removeImage={() => {\r\n                                    if (inputFileData.removeImage)\r\n                                        inputFileData.removeImage()\r\n                                }\r\n                                }\r\n\r\n                            />\r\n                        )\r\n                    }\r\n                )}\r\n                <ActionButton text=\"add more\" onClick={this.handleAddMoreFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFileMultiple;","import React, { Component } from 'react'\r\nimport '../../css/Entity.css'\r\nimport '../../css/Common.css'\r\nimport Label from '../Label'\r\nimport InputDropdown from '../input/InputDropdown'\r\nimport ComboBox from '../input/ComboBox'\r\nimport InputField from '../input/InputField';\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport InputFile from '../input/InputFile'\r\nimport * as url from '../../constant/Url'\r\nimport InputFileMultiple from '../input/InputFileMultiple'\r\nimport { TYPE_DYNAMIC_DROPDOWN, TYPE_STATIC_DROPDOWN, TYPE_MULTIPLE_IMAGE, TYPE_SINGLE_IMAGE } from '../../utils/EntityConfigurations'\r\n\r\nclass EntityForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            managedEntity: null,\r\n            activeId: null,\r\n            formValues: {},\r\n            dropdownList: {},\r\n            dropdownValues: {},\r\n            selectedEntities: {},\r\n            base64Data: {},\r\n            base64DataMultiple: {},\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * valudate before submit\r\n         */\r\n        this.validateEntity = (entity) => {\r\n            const result = entity;\r\n            for (let key in entity) {\r\n                console.log(key);\r\n                const formDataItem = this.getFormDataItemStartWith(key);\r\n                if (formDataItem) {\r\n                    if (formDataItem.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle single Image\r\n                         */\r\n                        if (entity[key] && !entity[key].includes(\"base64\")) {\r\n                            result[key] = null;\r\n                        }\r\n                    } else if (formDataItem.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle MULTIPLE Image\r\n                         */\r\n\r\n                        if (entity[key]) {\r\n                            let arrayOfValues = entity[key].split(\"~\");\r\n                            let resultValue = new Array();\r\n                            for (let i = 0; i < arrayOfValues.length; i++) {\r\n                                const element = arrayOfValues[i];\r\n                                /**\r\n                                 * if not modified\r\n                                 */\r\n                                if (!this.state.base64DataMultiple[key] ||\r\n                                    !this.state.base64DataMultiple[key][i]) {\r\n                                    resultValue.push(\"{ORIGINAL>>\" + element + \"}\");\r\n                                } else\r\n                                    /**\r\n                                     * if modified\r\n                                     */\r\n                                    if (this.state.base64DataMultiple[key] &&\r\n                                        this.state.base64DataMultiple[key][i]) {\r\n                                        const updatedValue = this.state.base64DataMultiple[key][i];\r\n                                        resultValue.push(\"{ORIGINAL>>\" + element + \"}\" + updatedValue);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            if (this.state.base64DataMultiple[key] && this.state.base64DataMultiple[key].length > arrayOfValues.length) {\r\n                                for (let i = arrayOfValues.length - 1; i < this.state.base64DataMultiple[key].length; i++) {\r\n                                    const element = this.state.base64DataMultiple[key][i];\r\n                                    if (element && element.includes(\"base64\")) {\r\n                                        resultValue.push(element);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (resultValue.length > 0)\r\n                                result[key] = resultValue.join(\"~\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.setState({ updated: new Date() })\r\n        }\r\n\r\n        this.handleSubmit = () => {\r\n            let addFromOtherPage = false;\r\n\r\n            const updateMode = this.props.managedEntity != null && this.props.addNew == false;\r\n            if (updateMode) {\r\n                console.log(\"WILL UPDATE(props):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"update\");\r\n                }\r\n            }else{\r\n                if( this.props.managedEntity != null && this.props.addNew == true){\r\n                    addFromOtherPage = true;\r\n                }\r\n            }\r\n\r\n            const addNewMod = this.state.managedEntity != null;\r\n            if (addNewMod  ) {\r\n                console.log(\"WILL SUBMIT NEW(state):\", this.state.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.state.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n\r\n            /**\r\n             * SPECIAL CASE\r\n             */\r\n\r\n            if ( addFromOtherPage) {\r\n                console.log(\"WILL SUBMIT NEW(SPECIAL CASE):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n            this.clear();\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.onKeyUp = (value, id, propName) => {\r\n            this.setState({ activeId: id });\r\n            this.updateSelectedEntity(propName, value);\r\n\r\n        }\r\n\r\n        this.clear = () => {\r\n            this.setState({\r\n                managedEntity: null,\r\n                dropdownList: {},\r\n                dropdownValues: {},\r\n                selectedEntities: {},\r\n                base64Data: {},\r\n                base64DataMultiple: {}\r\n            });\r\n            if (this.props.removeManagedEntity) {\r\n                this.props.removeManagedEntity();\r\n            }\r\n        }\r\n\r\n        this.populateDropdown = (entityname, fieldname, fieldvalue) => {\r\n            const request = {\r\n                entityName: entityname,\r\n                fieldName: fieldname.split(\".\")[1],\r\n                fieldValue: fieldvalue\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"DATA FOR DROPDOWN: \", data);\r\n            });\r\n\r\n        }\r\n\r\n        this.onKeyUpDynamicDropdown = (value, id, propName, reffEntity) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            const request = {\r\n                entityName: reffEntity,\r\n                fieldName: 'name',\r\n                fieldValue: value\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"LIST FOR DROPDOWN: \", data.entities)\r\n                referer.populateDropdownValues(data.entities, propName);\r\n            });\r\n            let currentDropdownValue = this.state.dropdownValues;\r\n            currentDropdownValue[propName] = value;\r\n            this.setState({ activeId: id, dropdownValues: currentDropdownValue });\r\n        }\r\n\r\n        this.populateDropdownValues = (entities, propName) => {\r\n            console.log(\"ENTITIES:\", entities)\r\n            let options = new Array();\r\n            const formDataItem = this.getFormDataItem(propName);\r\n            if (null == formDataItem) {\r\n                console.log(\"FORM DATA NOT FOUND\");\r\n                return;\r\n            }\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                options.push({\r\n                    value: entity[formDataItem.idField],\r\n                    text: entity[formDataItem.displayField],\r\n                    entity: entity\r\n                })\r\n            }\r\n            let currentDropdownList = this.state.dropdownList;\r\n            currentDropdownList[propName] = options;\r\n            //  this.setState({ dropdownList: currentDropdownList })\r\n            return options;\r\n        }\r\n\r\n        this.getSelectedDropdownItem = (value, propName) => {\r\n            if (this.state.dropdownList[propName] == null) {\r\n                return null;\r\n            }\r\n            const dropdownList = this.state.dropdownList[propName];\r\n            for (let i = 0; i < dropdownList.length; i++) {\r\n                const option = dropdownList[i];\r\n                if (option.value == value) {\r\n                    return option;\r\n                }\r\n\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getFormDataItem = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.addMoreImage = (propName) => {\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    currentValue = currentValue.trim() + \"~DEFAULT.BMP\";\r\n                    this.updateSelectedEntity(propName, currentValue);\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                let currentValue;\r\n                if (!managedEntity) {\r\n                    managedEntity = {};\r\n                    currentValue = \"\";\r\n                } else\r\n                    currentValue = managedEntity[propName] + \"~\";\r\n                currentValue = currentValue.trim() + \"DEFAULT.BMP\";\r\n                this.updateSelectedEntity(propName, currentValue);\r\n            }\r\n        }\r\n\r\n        this.updateSelectedEntity = (propName, value) => {\r\n            if (this.props.managedEntity) {\r\n                this.props.managedEntity[propName] = value;\r\n                this.refresh();\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) managedEntity = {};\r\n                managedEntity[propName] = value;\r\n                this.setState({ managedEntity: managedEntity });\r\n            }\r\n\r\n        }\r\n\r\n        this.getFormDataItemStartWith = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                    if (formDataItem.name.split(\".\").length > 1) {\r\n                        if (formDataItem.name.split(\".\")[0] == propName) {\r\n                            return formDataItem;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.handleRemoveImage = (propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = null;\r\n\r\n            this.updateSelectedEntity(propName, null);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64Image = (base64, propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = base64;\r\n\r\n            this.updateSelectedEntity(propName, base64);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64MultipleImage = function (base64, propNameRaw, i) {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = base64;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n        }\r\n\r\n        this.removeElementAtPosition = (array, index) => {\r\n            let result = new Array();\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (i != index) {\r\n                    result.push(array[i])\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.handleRemoveMultipleImage = (propNameRaw, i) => {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = null;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity; \r\n                if (!managedEntity) {\r\n                    return;\r\n                }\r\n                let currentValue = managedEntity[propName];\r\n                if(currentValue){\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.selectFromDynamicDropdown = (value, propName) => {\r\n            console.log(propName, \":\", value);\r\n            const currentDropdownList = this.state.dropdownList;\r\n            const dropdownValues = this.state.dropdownValues;\r\n            const selectedEntities = this.state.selectedEntities;\r\n\r\n            const selectedOption = this.getSelectedDropdownItem(value, propName);\r\n            if (null == selectedOption) {\r\n                return;\r\n            }\r\n\r\n            dropdownValues[propName] = selectedOption.text;\r\n            currentDropdownList[propName] = [];\r\n            selectedEntities[propName] = selectedOption.entity;\r\n\r\n            /**\r\n             * time to modify entity\r\n             */\r\n            const displayPropName = propName.split(\".\")[0];\r\n\r\n            this.updateSelectedEntity(displayPropName, selectedOption.entity);\r\n            this.setState({ activeId: null, dropdownList: currentDropdownList, dropdownValues: dropdownValues, selectedEntities: selectedEntities });\r\n        }\r\n\r\n        this.handleStaticDropdownChange = (value, propName) =>{\r\n            \r\n            this.updateSelectedEntity(propName, value);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        let formData = this.props.entityConfig && this.props.entityConfig.formData ? this.props.entityConfig.formData : [];\r\n\r\n        const entityExist = this.props.managedEntity != null || this.state.managedEntity;\r\n\r\n\r\n        let actionButtons = null;\r\n        if(!this.props.entityConfig.disabled){\r\n            actionButtons  =   <ActionButtons buttonsData={[\r\n                {\r\n                    text: this.props.managedEntity && this.props.addNew == false ? \"Update\" : \"Add Record\",\r\n                    onClick: this.handleSubmit,\r\n                    status:\"success\"\r\n                },\r\n                {\r\n                    text: \"Clear\",\r\n                    status:\"warning\",\r\n                    onClick: this.clear\r\n                }\r\n            ]} />;\r\n        }\r\n\r\n        let formFields = <div className=\"entity-form  \">\r\n            {formData.map(\r\n                data => {\r\n                    const parentPropName = data.name.split(\".\")[0];\r\n                    let value = null;\r\n                    if (entityExist) {\r\n                        const entity = this.props.managedEntity ? this.props.managedEntity : this.state.managedEntity;\r\n                        const propName = data.name;\r\n\r\n                        if (propName.split(\".\").length > 1 && this.state.activeId != \"input-for-\" + data.name) {\r\n                            const valueAsObject = entity[propName.split(\".\")[0]];\r\n                            const objectPropName = propName.split(\".\")[1];\r\n\r\n                            value = valueAsObject ? valueAsObject[objectPropName] : null;\r\n                        } else {\r\n                            value = entity[propName];\r\n                        }\r\n                    }\r\n\r\n                    let inputComponent = null;\r\n                    const inputId = \"input-for-\" + data.name;\r\n\r\n                    if (data.inputType == TYPE_DYNAMIC_DROPDOWN) {\r\n                        /**\r\n                         * if dynamic dropDown\r\n                         */\r\n\r\n                        if (null == value) {\r\n                            value = this.state.dropdownValues[data.name]\r\n                        }\r\n\r\n                        inputComponent = <InputDropdown\r\n                            onSelect={(value) => this.selectFromDynamicDropdown(value, data.name)}\r\n                            id={inputId}\r\n                            placeholder={data.lableName}\r\n                            value={value}\r\n                            dropdownList={this.state.dropdownList[data.name]}\r\n                            onKeyUp={(value, id) => { this.onKeyUpDynamicDropdown(value, id, data.name, data.reffEntity) }} />\r\n\r\n                    } else  if (data.inputType == TYPE_STATIC_DROPDOWN) {\r\n                        /**\r\n                         * if static drop down\r\n                         */\r\n                        console.log(\"STATIC DROPDOWN VALUE: \",value);\r\n                        inputComponent = <ComboBox \r\n                             defaultValue={new String(value)}\r\n                            onChange={(val)=>this.handleStaticDropdownChange(val,data.name)}\r\n                            options={data.options} id={stringUtil.uniqueId()}\r\n                         />\r\n\r\n                    } else if (data.inputType == TYPE_SINGLE_IMAGE) {\r\n                        /**\r\n                         * handle image single\r\n                         */\r\n                        inputComponent = <InputFile\r\n                            onChange={(base64) => this.handleChangeBase64Image(base64, data.name)}\r\n                            value={value && value.includes(\"base64\") ? value : value ? url.baseImageUrl + value : null}\r\n                            id={inputId}\r\n                            removeImage={() => this.handleRemoveImage(data.name)}\r\n\r\n                        />\r\n\r\n                    } else if (data.inputType == TYPE_MULTIPLE_IMAGE) {\r\n                        /**\r\n                         * handle multiple single\r\n                         */\r\n                        let valueSplit = value ? value.split(\"~\") : [];\r\n\r\n                        let imagesData = new Array();\r\n                        for (let i = 0; i < valueSplit.length; i++) {\r\n                            let valueSplitItem = valueSplit[i];\r\n                            if (this.state.base64DataMultiple[parentPropName] &&\r\n                                this.state.base64DataMultiple[parentPropName][i]\r\n                                && this.state.base64DataMultiple[parentPropName][i].includes(\"base64\")) {\r\n                                valueSplitItem = this.state.base64DataMultiple[parentPropName][i];\r\n                            }\r\n                            imagesData.push({\r\n                                value: valueSplitItem,\r\n                                onChange: (base64) => {\r\n                                    this.handleChangeBase64MultipleImage(base64, data.name, i);\r\n                                },\r\n                                removeImage: () => this.handleRemoveMultipleImage(data.name, i)\r\n\r\n                            })\r\n                        }\r\n                        inputComponent = <InputFileMultiple\r\n                            addMoreImage={() => this.addMoreImage(data.name)}\r\n                            inputFilesData={imagesData}\r\n\r\n                        />\r\n                    }\r\n\r\n                    else {\r\n                        /**\r\n                         * regular\r\n                         */\r\n                        inputComponent = <InputField\r\n                            onKeyUp={(value, id) => { this.onKeyUp(value, id, data.name) }}\r\n                            id={inputId} value={value}\r\n                            type={data.inputType} placeholder={data.lableName} />;\r\n                    }\r\n\r\n                    return (\r\n                        <div key={\"FORM-FIELD-\" + stringUtil.uniqueId()}>\r\n                            <Label text={data.lableName} />\r\n                            {inputComponent}\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n\r\n            {actionButtons}                \r\n        </div>\r\n\r\n        return (\r\n            <div className=\"entity-form-wrapper\">\r\n                {formFields}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntitiesWithCallback: (request, referer, callback) => dispatch(actions.getEntitiesWithCallback(request, referer, callback)),\r\n\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EntityForm))","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport '../../css/Management.css'\r\nimport '../../css/Entity.css'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport InputField from '../input/InputField'\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport EntityForm from './EntityForm';\r\nimport * as url from '../../constant/Url'\r\nimport Label from '../Label'\r\nimport GridComponent from '../layout/GridComponent'\r\nimport { TYPE_LONG_DATE, TYPE_STATIC_DROPDOWN, TYPE_MULTIPLE_IMAGE, TYPE_DATE } from '../../utils/EntityConfigurations'\r\n\r\nclass EntityList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: {},\r\n            activeId: null,\r\n            orderBy: null,\r\n            orderType: null\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are your sure for deleting this entity?\")) { return; }\r\n            console.log(\"Will DELETE: \", id)\r\n        }\r\n        this.handleEdit = (id) => {\r\n            this.getEntityById(id);\r\n        }\r\n        this.getHeaderNames = (fieldNames) => {\r\n            const headers = [];\r\n\r\n            if (fieldNames == null) {\r\n                this.props.backToDashboard();\r\n\r\n            } else\r\n\r\n                for (let i = 0; i < fieldNames.length; i++) {\r\n                    const name = fieldNames[i];\r\n                    let headerName = name.name;\r\n                    if (headerName.split(\".\").length > 1) {\r\n                        headerName = headerName.split(\".\")[0];\r\n                    }\r\n                    headers.push(headerName.toUpperCase());\r\n                }\r\n            headers.push(\"OPTION\");\r\n            return headers;\r\n        }\r\n\r\n        this.goToPage = (page, orderObject) => {\r\n            if (page > this.props.entitiesData.totalData / 10) {\r\n                page = 0;\r\n            }\r\n            if (page < 0) {\r\n                page = Math.ceil(this.props.entitiesData.totalData / 10 - 1);\r\n            }\r\n\r\n            let config = this.props.entityConfig;\r\n            config.filter = this.state.filter;\r\n            if (orderObject != null) {\r\n                config.orderBy = orderObject.orderBy;\r\n                config.orderType = orderObject.orderType;\r\n                this.setState({ orderBy: orderObject.orderBy, orderType: orderObject.orderType });\r\n            }\r\n\r\n            this.props.getEntityInPage(config, page);\r\n\r\n        }\r\n\r\n        this.getEntityById = (id) => {\r\n            const config = this.props.entityConfig;\r\n            if (config == null) {\r\n                alert(\"Config Not Found!\");\r\n                return;\r\n            }\r\n\r\n            this.props.getEntityById(config.entityName, id);\r\n        }\r\n\r\n        this.createNavButtons = () => {\r\n            let displayedButtons = componentUtil.createNavButtons(this.props.entitiesData.totalData / 10, this.props.currentPage);\r\n            return displayedButtons;\r\n        }\r\n\r\n        this.setOrderBy = (fieldName, orderType) => {\r\n            this.goToPage(this.props.currentPage, { orderBy: fieldName, orderType: orderType });\r\n        }\r\n\r\n        this.createFilterInputs = (fieldNames) => {\r\n            let inputs = new Array();\r\n\r\n            if (!fieldNames) {\r\n                return inputs;\r\n            }\r\n\r\n            for (let i = 0; i < fieldNames.length; i++) {\r\n                const fieldName = fieldNames[i];\r\n                let headerName = fieldName.name;\r\n                if (headerName.split(\".\").length > 1) {\r\n                    headerName = headerName.split(\".\")[0];\r\n                }\r\n\r\n                let value = \"\";\r\n\r\n                if (this.state.filter[headerName] != null) {\r\n                    value = this.state.filter[headerName];\r\n\r\n                }\r\n\r\n                let input = <InputField value={value} id={headerName + \"_filter_id\"}\r\n                    onKeyUp={this.handleFilterChange} key={\"input_field_\" + stringUtil.uniqueId()}\r\n                    placeholder={headerName} />\r\n\r\n                if (fieldName.type == TYPE_DATE || fieldName.type == TYPE_LONG_DATE) {\r\n                    const valueDay = this.state.filter[headerName + \"-day\"];\r\n                    const valueMonth = this.state.filter[headerName + \"-month\"];\r\n                    const valueYear = this.state.filter[headerName + \"-year\"];\r\n\r\n                    const inputDay = <InputField value={valueDay} id={headerName + \"-day_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_d\" + stringUtil.uniqueId()}\r\n                        placeholder={\"day\"} />;\r\n                    const inputMonth = <InputField value={valueMonth} id={headerName + \"-month_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_m\" + stringUtil.uniqueId()}\r\n                        placeholder={\"month\"} />;\r\n                    const inputYear = <InputField value={valueYear} id={headerName + \"-year_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_y\" + stringUtil.uniqueId()}\r\n                        placeholder={\"year\"} />;\r\n\r\n                    input = <GridComponent width=\"50px\" items={[inputDay, inputMonth, inputYear]} />\r\n                }\r\n\r\n\r\n                let orderType = \"asc\";\r\n                if (this.state.orderBy && this.state.orderBy == headerName) {\r\n                    if (this.state.orderType == \"asc\") {\r\n                        orderType = \"desc\";\r\n                    }\r\n                }\r\n\r\n\r\n                const orderButton = <ActionButton\r\n                    onClick={() => { this.setOrderBy(headerName, orderType) }}\r\n                    text={orderType} />\r\n\r\n                inputs.push(<div className=\"filter-wrapper\">\r\n                    {input}{orderButton}\r\n                </div>);\r\n            }\r\n            inputs.push(\"\");\r\n            return inputs;\r\n        }\r\n\r\n        this.handleFilterChange = (value, id) => {\r\n\r\n            let filter = this.state.filter;\r\n            if (value != null && value.trim() == \"\") {\r\n                filter[id.split(\"_filter_id\")[0]] = null;\r\n\r\n            } else {\r\n                filter[id.split(\"_filter_id\")[0]] = value;\r\n\r\n            }\r\n\r\n            this.setState({ filter: filter, activeId: id });\r\n            this.goToPage(this.props.currentPage);\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        const entitiesData = this.props.entitiesData;\r\n        const entityConfig = this.props.entityConfig;\r\n        console.log(\"1\");\r\n        if (null == entitiesData || null == entityConfig) {\r\n            return (<h2>Please Select One Of Menu</h2>)\r\n        }\r\n\r\n\r\n        if (null == entitiesData.entities) {\r\n            entitiesData.entities = [];\r\n        }\r\n\r\n        const rows = [\r\n            //header\r\n            {\r\n                values: this.getHeaderNames(entityConfig.fieldNames),\r\n                disabled: true,\r\n                style: { textAlign: 'center', fontWeight: 'bold' }\r\n            },\r\n            //filter\r\n            {\r\n                values: this.createFilterInputs(entityConfig.fieldNames),\r\n                disabled: true\r\n            }\r\n        ];\r\n\r\n\r\n        const entities = entitiesData.entities;\r\n        const idField = entityConfig.id;\r\n\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const entity = entities[i];\r\n            let rowValues = [];\r\n            for (let j = 0; j < entityConfig.fieldNames.length; j++) {\r\n                const fieldItem = entityConfig.fieldNames[j];\r\n                let entityProp = fieldItem.name;\r\n                let object = false\r\n\r\n                if (entityProp.split(\".\").length > 1) {\r\n                    entityProp = entityProp.split(\".\")[0];\r\n                    object = true;\r\n                }\r\n\r\n                let entityValue = entity[entityProp];\r\n                if (fieldItem.type) {\r\n                    if (fieldItem.type == \"number\") {\r\n                        entityValue = stringUtil.beautifyNominal(entityValue);\r\n                    } else if (fieldItem.type == \"link\") {\r\n                        entityValue = <a href={entityValue}><u>{entityValue}</u></a>\r\n                    } else if (fieldItem.type == \"image\") {\r\n                        entityValue = <img width=\"60\" height=\"60\" alt={url.baseImageUrl + entityValue} src={url.baseImageUrl + entityValue} />\r\n                    } else if (fieldItem.type == TYPE_MULTIPLE_IMAGE) {\r\n                        let imgName = entityValue.split(\"~\")[0];\r\n\r\n                        entityValue = <img width=\"60\" height=\"60\" src={url.baseImageUrl + imgName} />\r\n                    } else if (fieldItem.type == TYPE_LONG_DATE) {\r\n                        const dateStr = new Date(entityValue).toDateString();\r\n                        entityValue = <Label text={dateStr} />;\r\n                    } else if (fieldItem.type == TYPE_STATIC_DROPDOWN) {\r\n                        const options = fieldItem.options;\r\n\r\n                        options.forEach(opt => {\r\n                            if (opt.value == entityValue) {\r\n                                entityValue = opt.text;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                rowValues.push(object && entityValue ? entityValue[fieldItem.name.split(\".\")[1]] : entityValue);\r\n            }\r\n\r\n            rows.push(\r\n                {\r\n                    identifier: entity[idField],\r\n                    values: rowValues,\r\n                    handleDelete: this.handleDelete,\r\n                    handleEdit: this.handleEdit,\r\n                    disabled: entityConfig.disabled == true ? true : false\r\n                }\r\n            )\r\n        }\r\n\r\n        const buttonsData = this.createNavButtons();\r\n        const fixButtonData = new Array();\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + -1) },\r\n            text: 'previous'\r\n        })\r\n\r\n        for (let i = 0; i < buttonsData.length; i++) {\r\n            buttonsData[i].onClick = () => { this.goToPage(buttonsData[i].value) }\r\n            if (buttonsData[i].value == this.props.currentPage) {\r\n                buttonsData[i].status = \" btn-active\";\r\n            }\r\n            buttonsData[i].text = buttonsData[i].text;\r\n\r\n\r\n            fixButtonData.push(buttonsData[i]);\r\n        }\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + 1) },\r\n            text: 'next'\r\n        });\r\n\r\n        let navButtons = <ActionButtons style={{\r\n            backgroundColor: 'white',\r\n            paddingTop: '15px',\r\n            margin: '10px'\r\n        }} buttonsData={fixButtonData} />\r\n\r\n        let entityTable = <div className=\"entity-list-container\">\r\n\r\n            <InstantTable\r\n                style={{\r\n                    width: \"100%\",\r\n                    margin: \"5px\",\r\n                }}\r\n                rows={rows} />\r\n        </div>\r\n\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <div className=\"entity-container\">\r\n                    <div style={{\r\n                        backgroundColor: 'white',\r\n                        margin: '10px'\r\n                    }} > </div>\r\n                    {navButtons}\r\n                    <div className=\"entityForm\">\r\n                        <EntityForm\r\n                            addNew={this.props.addNew}\r\n                            app={this.props.app}\r\n                            updateEntity={this.props.updateEntity}\r\n                            removeManagedEntity={this.props.removeManagedEntity}\r\n                            managedEntity={this.props.managedEntity}\r\n                            entityConfig={entityConfig} />\r\n                    </div>\r\n                    {entityTable}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntityList;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Management.css'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ContentTitle from '../layout/ContentTitle'\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport EntityList from './EntityList';\r\nimport Tab from '../buttons/Tab';\r\n\r\nclass Management extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entityList: [],\r\n            currentPage: 0,\r\n            entityConfig: { entityName: \"main\" }\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n\r\n        this.backToDashboard = () => {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.getEntityInPage(this.state.entityConfig, this.state.currentPage);\r\n        }\r\n\r\n        this.loadEntityManagement = (config) => {\r\n            this.props.removeManagedEntity();\r\n\r\n            this.setState({ currentPage: 0, entityConfig: config });\r\n\r\n            this.props.setEntityConfig(config);\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n        }\r\n\r\n        this.gotoMainPage = () => {\r\n            this.props.resetManagementPage();\r\n            this.setState({ currentPage: 0, entityConfig: { entityName: \"main\" } });\r\n        }\r\n\r\n        this.getEntityInPage = (config, page) => {\r\n            this.setState({ currentPage: page });\r\n\r\n            const request = {\r\n                entityName: config.entityName,\r\n                page: page,\r\n                limit: 10,\r\n                entityConfig: config,\r\n                fieldsFilter: config.filter,\r\n                orderBy: config.orderBy,\r\n                orderType: config.orderType,\r\n            };\r\n\r\n            console.log(\"REQUEST: \", request)\r\n\r\n            this.props.getEntities(request, this.props.app);\r\n        }\r\n\r\n        this.checkIfCurrentMenuName = (name) => {\r\n            return this.state.entityConfig.entityName == name;\r\n        }\r\n\r\n        this.getButtonsData = () => {\r\n            return [\r\n                {\r\n                    text: \"#\",\r\n                    active: this.checkIfCurrentMenuName(\"main\"),\r\n                    onClick: () => { this.gotoMainPage() }\r\n                },\r\n                {\r\n                    text: \"Badan Pengurus\",\r\n                    active: this.checkIfCurrentMenuName(\"division\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.divisionConfig) }\r\n                },\r\n                {\r\n                    text: \"Divisi\",\r\n                    active: this.checkIfCurrentMenuName(\"section\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.sectionConfig) }\r\n                },\r\n                {\r\n                    text: \"Program Kerja\",\r\n                    active: this.checkIfCurrentMenuName(\"program\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.programConfig) }\r\n                },\r\n                {\r\n                    text: \"Kegiatan\",\r\n                    active: this.checkIfCurrentMenuName(\"event\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.eventConfig) }\r\n                },\r\n                {\r\n                    text: \"Posisi\",\r\n                    active: this.checkIfCurrentMenuName(\"position\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.positionConfig) }\r\n                },\r\n                {\r\n                    text: \"Anggota\",\r\n                    active: this.checkIfCurrentMenuName(\"member\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.memberConfig) }\r\n                },\r\n            ];\r\n        }\r\n\r\n        this.updateEntity = (name, entity, flag) => {\r\n            if (!window.confirm(\"Are you sure will update \" + name + \"?\")) {\r\n                return;\r\n            }\r\n\r\n            let newRecord = flag == \"addNew\";\r\n\r\n            this.props.updateEntity({ entityName: name, entity: entity, isNewRecord: newRecord }, this, function (ref) {\r\n                console.log(\"WILL CALLBACK\");\r\n                ref.callbackHandleUpdate();\r\n            });\r\n        }\r\n\r\n        this.getEntityById = (name, id) => {\r\n            this.props.getEntityById(name, id, this.props.app);\r\n        }\r\n        this.removeManagedEntity = () => {\r\n            this.props.removeManagedEntity();\r\n        }\r\n\r\n        this.callbackHandleUpdate = () => {\r\n            this.refresh();\r\n            this.removeManagedEntity();\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Management\";\r\n        this.props.setMenuCode(\"management\");\r\n    }\r\n\r\n    render() {\r\n        console.log(\"managedEntity: \", this.props.managedEntity);\r\n      \r\n\r\n        let entityList = this.props.entitiesData ? this.props.entitiesData.entities : [];\r\n        if (null == entityList) { entityList = []; }\r\n\r\n        let buttonsData = this.getButtonsData();\r\n\r\n        let content = <h2>Content</h2>\r\n\r\n        if (this.props.entitiesData.entityConfig == null) {\r\n            content = <div>\r\n                <h2>{\"Management Page\"}\r\n                </h2></div>\r\n        } else {\r\n            content = <EntityList currentPage={this.state.currentPage}\r\n                app={this.props.app}\r\n                getEntityInPage={this.getEntityInPage}\r\n                entityConfig={this.props.entitiesData.entityConfig}\r\n                entitiesData={this.props.entitiesData}\r\n                managedEntity={this.props.managedEntity}\r\n                getEntityById={this.getEntityById}\r\n                removeManagedEntity={this.removeManagedEntity}\r\n                updateEntity={this.updateEntity}\r\n                addNew={this.props.addNew}\r\n                backToDashboard={this.backToDashboard}\r\n            />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title={\"Management \" + (this.state.entityConfig.title ?\r\n                    this.state.entityConfig.title :\r\n                    this.props.entitiesData && this.props.entitiesData.entityConfig ?\r\n                        this.props.entitiesData.entityConfig.title : \"\")}\r\n\r\n                    description=\"master data management console\" />\r\n                <div className=\"management-container\">\r\n                    <Tab tabsData={buttonsData} />\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        entitiesData: state.managementState.entitiesData,\r\n        managedEntity: state.managementState.managedEntity,\r\n        addNew: state.managementState.addNew\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setEntityConfig:(config)=>dispatch(actions.setEntityConfig(config)),\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEntityById: (name, id, app) => {\r\n        let action = actions.getEntityById(name, id, app);\r\n        dispatch(action);\r\n    },\r\n    resetManagementPage : () =>dispatch(actions.resetManagementPage()),\r\n    removeManagedEntity: () => dispatch(actions.removeManagedEntity()),\r\n    updateEntity: (request, referer, callback) => dispatch(actions.updateEntity(request, referer, callback))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Management))","\nimport React, { Component } from 'react'; \nimport './App.css';\n\nimport Header from './components/layout/Header'\nimport Menu from './components/buttons/Menu'\nimport Home from './components/pages/Home'\nimport About from './components/pages/About'\nimport {  Route, Link, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'  \nimport Login from './components/pages/Login';\nimport Dashboard from './components/pages/Dashboard';\nimport * as menus from './constant/Menus'\nimport Message from './components/Message';\nimport Footer from './components/layout/Footer';\nimport SockJsClient from 'react-stomp';\nimport ChatRoom from './components/pages/ChatRoom';\nimport Management from './components/pages/Management'; \nimport { uniqueId } from './utils/StringUtil'; \nimport * as config from './utils/WebConfig'\nimport * as url from './constant/Url'\n\nconst hostCloud = url.hostCloud;\nconst hostLocal = url.hostLocal;\n\nconst usedHost = () => {\n    if (config.debugMode() == true)\n        return hostLocal;\n    else\n        return hostCloud;\n} \n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      detailMode: false,\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      enableShopping: false,\n      mainAppUpdated:new Date()\n    };\n\n    this.setDetailMode = (detailMode) => {\n      this.setState({ detailMode: detailMode });\n    }\n\n    this.setMenuCode = (code) => { \n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.setEnableShopping = (val) => {\n      this.setState({ enableShopping: val })\n    }\n\n    this.handleMenuCLick = (menu) => {\n      switch (menu.code) {\n\n        case menus.LOGOUT:\n          if (!window.confirm(\"Are you sure want to logout?\")) {\n            return;\n          }\n          this.props.performLogout(this);\n          break;\n\n        default:\n          break;\n      }\n\n\n    }\n\n\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n\n    this.startLoading = (realtime) => {\n      this.setState({ loading: true, realtime: realtime });\n    }\n    this.endLoading = () => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }\n\n    this.handleMessage = (msg) => {\n      let percentage = Math.floor(msg.percentage);\n      // this.startLoading(true);\n     \n      // if(msg.requestId != localStorage.getItem(\"requestId\")){\n      //   return;\n      // }\n\n      // if (msg.percentage < 0 || msg.percentage > 100) {\n      //   this.endLoading();\n      // }\n      // this.setState({ loadingPercentage: percentage });\n    }\n  }\n\n\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      localStorage.setItem(\"requestId\", this.props.requestId);\n      this.props.refreshLogin(this.props.loginStatus);\n    }\n\n    console.log(\"App componentDidUpdate LOGIN STATUS: \",this.props.loginStatus)\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    let additionalMenus = this.props.menus\n    let menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      let menu = additionalMenus[i];\n\n      if(!this.state.enableShopping && menu.code == 'cart')\n        continue;\n\n      if (this.props.loginStatus != true && menu.authenticated == true)\n        continue;\n\n      menus.push(menu);\n\n    }\n \n    return menus;\n\n  }\n\n  render() {\n\n    const header =  <Header app={this} title=\"MPI Monitoring\"   />;\n\n    if (!this.state.requestId) {\n      return (\n        <div key={uniqueId()}>\n          {header}\n          Please wait..\n        </div>\n      )\n    }\n\n    let loginComponent = <Login main={this} setMenuCode={this.setMenuCode}\n      setDetailMode={this.setDetailMode}\n      detailMode={this.state.detailMode}\n      doLogin={this.props.performLogin}\n      loginFailed={this.props.loginFailed}\n      loginAttempt={this.props.loginAttempt}\n      loginStatus={this.props.loginStatus}\n    />;\n\n    let loadingComponent = \"\";\n    if (this.state.loading == true) {\n      loadingComponent = <Message realtime={this.state.realtime} progress={this.state.loadingPercentage} text=\"Please wait...\" type=\"loading\" />;\n    }\n\n    let menus = this.setMenus();\n \n    \n    return (\n      <div className=\"App\">\n        {loadingComponent}\n        {header}\n        {/*this.props.loginStatus == true?\"Logged In\":\"Un Logged\"*/}\n      \n        <div id=\"main-layout\">\n          <div id=\"main-menu\">\n            <Menu loggedUser={this.props.loggedUser}\n              division = {this.props.division}\n              handleMenuCLick={this.handleMenuCLick}\n              activeCode={this.state.menuCode}\n              menus={menus} />\n          </div>\n         \n          <div id=\"main-content\" > \n            <Switch>\n              <Route exact path=\"/\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is default page\" />\n              } />\n              <Route exact path=\"/home\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is home page\" />\n              } />\n              \n              <Route exact path=\"/chatroom\" render={\n                (renderProps) =>\n                  <ChatRoom app={this} setMenuCode={this.setMenuCode} />\n              } />\n              <Route exact path=\"/about\" render={\n                (renderProps) =>\n                  <About setMenuCode={this.setMenuCode} />\n              }></Route>\n               \n               <Route exact path=\"/login\" render={\n                (renderProps) => loginComponent\n\n              }></Route>\n\n              {/*\n                     =============================\n                     ======== need login =========\n                     =============================\n                     */}\n              <Route exact path=\"/dashboard\" render={\n                (renderProps) =>\n                  <Dashboard app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n               <Route exact path=\"/management\" render={\n                (renderProps) =>\n                  <Management app={this} loginStatus={this.props.loginStatus}   setMenuCode={this.setMenuCode} />\n\n              }></Route>\n            </Switch>\n           \n          </div>\n         \n        </div>\n        <SockJsClient url={usedHost()+'/realtime-app'} topics={['/wsResp/progress']}\n          onMessage={(msg) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    entities: state.shopState.entities,\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    loginKey: state.userState.loginStatus,\n    loginFailed: state.userState.loginFailed,\n    menus: state.userState.menus,\n    loggedUser: state.userState.loggedUser,\n    loginAttempt: state.userState.loginAttempt,\n    requestId: state.userState.requestId,\n    division: state.userState.division,\n    cart: state.shopState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogin: (username, password, app) => dispatch(actions.performLogin(username, password, app)),\n  performLogout: (app) => dispatch(actions.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.requestAppId(app)),\n  refreshLogin: (loginStatus) => dispatch(actions.refreshLoginStatus(loginStatus))\n  // getProductCatalog: (page) => dispatch(actions.getProductList(page))\n\n})\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = {\r\n    catalogData: {},\r\n    entities: [],\r\n    entity: {},\r\n    categories: [],\r\n    suppliersData: [], \r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {  \r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ };   \r\n        case types.SEND_MESSAGE:\r\n            return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities }; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nexport const menus = [\r\n  {\r\n    code:\"home\",\r\n    name:\"Home\",\r\n    url:\"home\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"catalog\",\r\n    name:\"Catalog\",\r\n    url:\"catalog\",\r\n    active: false,\r\n     authenticated: false\r\n  } ,\r\n  {\r\n    code:\"about\",\r\n    name:\"About\",\r\n    url:\"about\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"chatroom\",\r\n    name:\"Chat Room\",\r\n    url:\"chatroom\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"login\",\r\n    name:\"Login\",\r\n    url:\"login\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"dashboard\",\r\n    name:\"Dashboard\",\r\n    url:\"dashboard\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"management\",\r\n    name:\"Management\",\r\n    url:\"management\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"logout\",\r\n    name:\"Logout\",\r\n    url:\"#\",\r\n    active: false,\r\n    authenticated: true\r\n  }\r\n];\r\n","import * as types from './types'\r\nimport * as menus from '../utils/HardCodedEntites'\r\nimport * as menuCodes from '../constant/Menus'\r\nimport { initialState } from './reducers';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menus.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    divisions: null,\r\n    division: null,\r\n    requestId: null\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    let updatedMenus = new Array();\r\n    if (action.payload) {\r\n\r\n        let loggedIn = action.payload && action.payload.loginStatus == true;\r\n        for (let index = 0; index < menus.menus.length; index++) {\r\n            const menu = menus.menus[index];\r\n            if (loggedIn && menu.code == menuCodes.LOGIN) { continue; }\r\n\r\n            if (menu.authenticated == false) {\r\n                updatedMenus.push(menu);\r\n            } else {\r\n                if (loggedIn) { updatedMenus.push(menu); }\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case types.DO_LOGIN:\r\n            let result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                localStorage.setItem(\"loginKey\", result.loginKey);\r\n                localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n                result.divisions = action.payload.divisions\r\n            }\r\n\r\n           \r\n            return result;\r\n        case types.REQUEST_ID:\r\n            result = { ...state, requestId: action.payload.message };\r\n\r\n            if (action.payload.loggedIn != true) {\r\n                \r\n                result.loginStatus = false;\r\n                result.loggedUser = null; \r\n\r\n            }else{\r\n                \r\n                if(action.payload.sessionData){\r\n                    \r\n                    result.division = action.payload.sessionData.division;\r\n                    result.loggedUser = action.payload.sessionData.user;\r\n                    result.loginStatus = action.payload.loggedIn;\r\n                }\r\n            }\r\n\r\n           console.log(\"o o o result.loginStatus:\",result.loginStatus)\r\n          //  action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                division:null,\r\n                loggedUser: null\r\n            };\r\n            localStorage.removeItem(\"loginKey\");\r\n            localStorage.removeItem(\"loggedUser\");\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n\r\n            return result;\r\n        case types.GET_DIVISIONS:\r\n            if(action.payload.invalidSession != true){\r\n                result = {\r\n                    ...state,\r\n                    divisions: action.payload.divisions,\r\n                }; \r\n            }else{\r\n                result = {\r\n                    ...state,\r\n                    divisions: [],\r\n                    loggedUser: null,\r\n                    loginStatus: false\r\n                };\r\n            }\r\n           \r\n            \r\n            return result;\r\n        case types.SELECT_DIVISION:\r\n            result = {\r\n                ...state,\r\n                division: action.payload.entity,\r\n            };\r\n            return result;\r\n        default:\r\n            if (action.payload && action.payload.loginStatus != null)\r\n                return { ...state, menus: updatedMenus };\r\n            else {\r\n                return { ...state };\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as entityUtil from '../utils/EntityConfigurations'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    events: [],\r\n    addNew: false\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, addNew: false, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, addNew: false, managedEntity: null };\r\n        case types.GET_EVENTS_BY_DATE:\r\n\r\n            if (action.payload.entities)\r\n                return { ...state, events: action.payload.entities };\r\n        case types.ADD_EVENT_FROM_TIMELINE:\r\n\r\n            const eventsData = { entityConfig: entityUtil.eventConfig };\r\n            console.log(\"EVENTS DATA: \", eventsData);\r\n            return {\r\n                ...state, addNew: true, managedEntity: action.payload.entity,\r\n                entitiesData: eventsData\r\n            };\r\n        case types.RESET_MANAGEMENT_PAGE:\r\n\r\n            return initState;\r\n        case types.SET_ENTITY_CONFIG:\r\n            const entitiesData = state.entitiesData;\r\n\r\n            entitiesData.entityConfig = action.payload.entityConfig;\r\n            entitiesData.entities = [];\r\n\r\n            return { ...state, entitiesData: entitiesData };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n    sessionsMap: [],\r\n    messages: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_SESSIONS:\r\n            return { ...state, sessionsMap: action.payload    };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload    };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload    };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as managementReducer from \"./managementReducer\"\r\nimport * as chatReducer from \"./chatReducer\"\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        chatState: chatReducer.reducer,\r\n        managementState: managementReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    chatState: chatReducer.initState,\r\n    managementState: managementReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as actionCreator from './actionCreators';\r\nimport * as types from './types';\r\nimport * as config from '../utils/WebConfig'\r\nimport * as stringUtil from '../utils/StringUtil';\r\nimport * as rc from '../constant/ResponseCode'\r\n\r\nconst commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\")\r\n    }\r\n};\r\nconst POST_METHOD = \"POST\";\r\nconst TIMEOUT = 100000;\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            removeEntityMiddleware,\r\n\r\n            //user related\r\n            performLoginMiddleware,\r\n            performLogoutMiddleware,\r\n            refreshLoginStatusMiddleware,\r\n            getDivisionsMiddleware,\r\n\r\n            //transaction   \r\n            selectDivisionMiddleware,\r\n            getEventByDateMiddleware,\r\n            requestAppIdMiddleware,\r\n\r\n            storeChatMessageLocallyMiddleware,\r\n            getMessagesMiddleware,\r\n            sendChatMessageMiddleware,\r\n\r\n            /*enntity management*/\r\n            getEntityListMiddleware,\r\n            getEntityByIdMiddleware,\r\n            updateEntityMiddleware,\r\n            removeManagedEntityMiddleware,\r\n            addEventFromTimelineMiddleware,\r\n            resetManagementPageMiddleware,\r\n            setEntityConfigMiddleware,\r\n\r\n            getEntitiesWithCallbackMiddleware,\r\n            getAvailableSessionsMiddleware\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\nfunction timeout(ms, promise) {\r\n    return new Promise(function (resolve, reject) {\r\n        setTimeout(function () {\r\n            reject(new Error(\"timeout\"))\r\n        }, ms)\r\n        promise.then(resolve, reject)\r\n    })\r\n}\r\n\r\nconst getEntitiesWithCallbackMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_WITH_CALLBACK) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n\r\n            action.meta.callback(data, action.meta.referer);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst updateEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_ENTITY) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response updateEntityMiddleware:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error Update Entity!\");\r\n                return;\r\n            }\r\n            alert(\"Update Success!\");\r\n            const callback = action.meta.callback;\r\n            const referer = action.meta.referer;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            callback(referer);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityByIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_BY_ID) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            if(data.code != \"00\"){\r\n                alert(\"error requesting: \"+data.message);\r\n                return;\r\n            }\r\n\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                data.entities = [];\r\n            }\r\n            data.entityConfig = action.meta.entityConfig;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data.messages });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst sendChatMessageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SEND_MESSAGE) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            data.username = action.payload.username;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst addEventFromTimelineMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.ADD_EVENT_FROM_TIMELINE) { return next(action); }\r\n\r\n    let eventEntity = {\r\n        date: stringUtil.dateInputVal(action.payload.day, action.payload.month, action.payload.year)\r\n    };\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entity: eventEntity } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst setEntityConfigMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_ENTITY_CONFIG) { return next(action); }\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entityConfig: action.payload.entityConfig } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload.messages });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst removeManagedEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_MANAGED_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetManagementPageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_MANAGEMENT_PAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n\r\nconst requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = commonAuthorizedHeader();\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    })).then(response => response.json())\r\n        .then(data => { \r\n            console.debug(config.debugMode(), \"requestAppIdMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n\r\n            data.referer = action.meta.app;\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.error(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst getEventByDateMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_EVENTS_BY_DATE) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            data = (data);\r\n\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst selectDivisionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SELECT_DIVISION) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"selectDivisionMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getDivisionsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_DIVISIONS) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"getDivisionsMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(data.message);\r\n                if (data.code == rc.CODE_INVALID_SESSION) {\r\n                    data.invalidSession = true;\r\n                } else {\r\n                    if (data.divisions == null) {\r\n                        alert(\"Server Error\")\r\n                        return;\r\n                    }\r\n                    return;\r\n                } \r\n            }\r\n \r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }))\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n            responseJson = (responseJson);\r\n\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            responseJson = (responseJson);\r\n\r\n            let loginKey = \"\";\r\n            let loginSuccess = false;\r\n\r\n            if (responseJson.code != null && responseJson.code == \"00\") {\r\n                for (var pair of response.headers.entries()) {\r\n                    if (pair[0] == \"loginkey\") {\r\n                        loginKey = pair[1];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                loginSuccess = true;\r\n\r\n            }\r\n\r\n            console.log(\"LOGIN SUCCESS: \", loginSuccess);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user,\r\n                    divisions: responseJson.divisions,\r\n                    division: responseJson.sessionData ? responseJson.sessionData.division : null\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    }\r\n\r\n    let loggedUser = null;\r\n    if (localStorage.getItem(\"loggedUser\")) {\r\n        loggedUser = (localStorage.getItem(\"loggedUser\"));\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload: {\r\n            loginStatus: action.payload.loginStatus,\r\n            loginKey: localStorage.getItem(\"loginKey\"),\r\n            loggedUser: JSON.parse(loggedUser)\r\n        }\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\n  const getAvailableSessionsMiddleware  = store => next => action => {\r\n\r\n    const requestId = localStorage.getItem(\"requestId\");\r\n\r\n    if (!action.meta || action.meta.type !== types.GET_SESSIONS) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': requestId }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            const sessions = data.sessionKeys;\r\n            const filteredSessions = new Array();\r\n\r\n            for(var i in sessions){\r\n                if(sessions[i].key != requestId){\r\n                    filteredSessions.push({\r\n                        key:sessions[i].key,\r\n                        value:sessions[i].userAgent\r\n                    });\r\n                }\r\n            }\r\n\r\n\r\n            console.debug(\"getAvailableSessionsMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: filteredSessions });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n    }\r\n\r\nexport default configureStore;","export const CODE_INVALID_SESSION = \"02\";","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'core-js/stable'\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'fast-text-encoding/text';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}