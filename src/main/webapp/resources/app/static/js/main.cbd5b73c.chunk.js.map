{"version":3,"sources":["components/layout/GridComponent.js","components/buttons/ToggleButton.js","utils/WebConfig.js","components/layout/Header.js","constant/Url.js","components/buttons/Menu.js","constant/Menus.js","components/layout/ContentTitle.js","components/pages/Home.js","utils/StringUtil.js","components/buttons/ActionButtons.js","components/CrudRow.js","components/layout/InstantTable.js","components/pages/About.js","redux/actionCreators.js","redux/types.js","utils/ComponentUtil.js","components/input/InputField.js","components/buttons/ActionButton.js","components/Label.js","components/Message.js","components/pages/Login.js","components/buttons/Tab.js","components/input/ComboBox.js","components/pages/DashboardMain.js","constant/TimelineConstant.js","components/card/Card.js","components/pages/FullCalendar.js","utils/EntityConfigurations.js","components/pages/Timeline.js","components/pages/Dashboard.js","components/layout/Footer.js","components/ChatList.js","components/pages/ChatRoom.js","components/input/DropdownItem.js","components/input/InputDropdown.js","components/input/InputFile.js","components/input/InputFileMultiple.js","components/pages/EntityForm.js","components/pages/EntityList.js","components/pages/Management.js","App.js","redux/shopReducer.js","utils/HardCodedEntites.js","redux/userReducer.js","redux/transactionReducer.js","redux/managementReducer.js","redux/reducers.js","redux/configureStore.js","constant/ResponseCode.js","Root.js","serviceWorker.js","index.js"],"names":["GridComponent","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","items","width","repeat","cols","length","gridAutoColumns","react_default","a","createElement","style","objectSpread","display","verticalAlign","gridTemplateColumns","map","item","Component","ToggleButton","_this","state","active","onClick","e","setState","outerClass","innerClass","fontSize","layout_GridComponent","className","text","debugMode","console","log","localStorage","getItem","Header","handleClick","setItem","app","componentDidMount","isDebugMode","title","buttons_ToggleButton","rootValue","document","getElementById","value","hostLocal","concat","hostCloud","baseImageUrl","config","logoUrl","url","Menu","userLink","divisionInfo","division","name","loggedUser","id","appIcon","src","renderedMenus","icon","menus","handleMenuCLick","activeCode","code","key","Link","to","LOGOUT","ContentTitle","description","Home","setMenuCode","layout_ContentTitle","content","index","uniqueId","string","Date","getUTCMilliseconds","beautifyNominal","val","nominal","result","zero","i","isNonNullArrayWithIndex","array","months","ActionButtons","buttonsData","buttonData","status","stringUtil","CrudRow","handleEdit","identifier","handleDelete","values","Array","newValues","CS","RS","colspan","rowspan","push","trStyle","borderTop","actionButton","buttons_ActionButtons","disabled","valign","CrudRow_Cells","Cells","rowSpan","colSpan","InstantTable","rows","tableStyle","row","components_CrudRow","About","padding","fontFamily","margin","layout_InstantTable","usedHost","apiBaseUrl","apiEntityBaseUrl","apiAccount","apiAdmin","getEntityList","request","startLoading","type","payload","entity","entityName","filter","limit","page","fieldsFilter","orderBy","orderType","meta","entityConfig","_byId","createNavButtons","totalButton","currentPage","Math","ceil","min","max","InputField","handleKeyup","onKeyUp","target","onChange","placeholder","inputField","checked","ActionButton","Label","Message","timer","intervalId","update","clearInterval","endMessage","withTimer","setInterval","messageText","msgStyle","realtime","floor","progress","textAlign","Login","username","password","showMessageLoginFailed","handleUsername","handlePassword","doLogin","main","validateLoginStatus","loginStatus","history","message","loginFailed","components_Message","components_Label","input_InputField","buttons_ActionButton","withRouter","Tab","tabsData","autoColumns","gap","borderBottom","tabData","React","ComboBox","handleOnChange","options","defaultValue","option","DashboardMain","onDivisionListChange","divisionId","selectDivision","divionOptions","divisions","forEach","input_ComboBox","month","day","Card","titleStyle","height","backgroundRepeat","backgroundColor","backgroundImage","backgroundSize","FullCalendar","selectedMonth","getMonth","inputYearValue","getFullYear","activeId","selectedDay","calendarData","days","month_now","begin","week","dayCount","info","begin_old","year_now","input_month","date_info","running_month","running_year","filterDayId","filterMonthId","dateFormId","entity_Name","entity_Prop","setSelectedMonth","refresh","changeInputYear","createTable","r","getEventByDate","year","getEventDetail","updateFields","focus","loadCalendar","dateID","filterStr","fillDay","setCalendar","updated","doSetCalendar","diff_year","abs","monthCount","less","current_month","endMonth","begin_month","b","prevMonth","m","nextMonth","fillInfo","timeLineConstant","detail","doPrevMonth","prev","begin_prev","findBegin","switch_","doNextMonth","next","begin_old_","totalday","M","begin_prev_","D","val2","data","getDate","getYear","now","strDate","dateAcceptableForHtmlInput","addZero","Val","Min","N","String","MinStr","ValLength","Diff","clear","begin_new","week_","day_","isNow","d","setElementByAttr","_this2","selectedYear","totalCalendarData","element","minHeight","marginBottom","events","eventList","event","card_Card","divisionConfig","fieldNames","lableName","formData","inputType","reffEntity","idField","displayField","sectionConfig","programConfig","eventStatus","eventConfig","positionConfig","memberConfig","Timeline","detailView","detailEvents","date","addEvent","getEntities","addEventFromTimeline","y","eventDate","toString","done","location","participant","eventCard","pages_FullCalendar","connect","managementState","userState","dispatch","actions","Dashboard","getButtonsData","menu","getDivisons","pages_DashboardMain","pages_Timeline","buttons_Tab","Footer","version","ChatItem","admin","sender","senderComponent","marginLeft","float","color","ChatRoom","messages","sendChatMessage","alert","handleMessage","response","storeChatMessageLocally","entities","changeUsername","getMessages","userAlias","shopState","DropdownItem","hover","onHover","unHover","onMouseLeave","onMouseOver","InputDropdown","hoverIndex","onBlur","onSelect","dataValue","dropdownList","dropdownComponent","input_DropdownItem","onFocus","InputFile","base64Data","file","referer","callback","reader","FileReader","readAsDataURL","files","onload","onerror","error","componentUtil","assertThisInitialized","removeImage","displayImage","trim","accept","InputFileMultiple","handleAddMoreFile","addMoreImage","inputFields","inputFilesData","inputFileData","input_InputFile","base64","includes","inputId","EntityForm","managedEntity","formValues","dropdownValues","selectedEntities","base64DataMultiple","validateEntity","formDataItem","getFormDataItemStartWith","arrayOfValues","split","resultValue","updatedValue","join","handleSubmit","addFromOtherPage","addNew","updateEntity","focusActiveId","propName","updateSelectedEntity","removeManagedEntity","populateDropdown","entityname","fieldname","fieldvalue","fieldName","fieldValue","getEntitiesWithCallback","onKeyUpDynamicDropdown","populateDropdownValues","currentDropdownValue","getFormDataItem","getSelectedDropdownItem","formDataList","currentValue","handleRemoveImage","handleChangeBase64Image","handleChangeBase64MultipleImage","propNameRaw","removeElementAtPosition","handleRemoveMultipleImage","newArrayValue","selectFromDynamicDropdown","currentDropdownList","selectedOption","displayPropName","handleStaticDropdownChange","entityExist","actionButtons","formFields","parentPropName","valueAsObject","objectPropName","inputComponent","input_InputDropdown","valueSplit","imagesData","_loop","valueSplitItem","input_InputFileMultiple","requested","EntityList","window","confirm","getEntityById","getHeaderNames","headers","backToDashboard","headerName","toUpperCase","goToPage","orderObject","entitiesData","totalData","getEntityInPage","setOrderBy","createFilterInputs","inputs","input","handleFilterChange","valueDay","valueMonth","valueYear","inputDay","inputMonth","inputYear","orderButton","fontWeight","rowValues","_loop2","j","fieldItem","entityProp","object","entityValue","href","alt","imgName","dateStr","toDateString","opt","fixButtonData","_loop3","navButtons","paddingTop","entityTable","pages_EntityForm","Management","entityList","loadEntityManagement","setEntityConfig","gotoMainPage","resetManagementPage","checkIfCurrentMenuName","flag","newRecord","isNewRecord","ref","callbackHandleUpdate","pages_EntityList","action","exacts","contains","App","detailMode","menuCode","loading","loadingPercentage","requestId","enableShopping","mainAppUpdated","setDetailMode","setEnableShopping","performLogout","requestAppId","endLoading","msg","percentage","refreshLogin","additionalMenus","authenticated","header","layout_Header","loginComponent","pages_Login","performLogin","loginAttempt","loadingComponent","setMenus","buttons_Menu","Switch","Route","exact","path","render","renderProps","pages_Home","pages_ChatRoom","pages_About","pages_Dashboard","pages_Management","client_default","topics","onMessage","client","clientRef","layout_Footer","loginKey","cart","user","initState","catalogData","categories","suppliersData","getTime","reducer","arguments","undefined","currentProduct","loadedSupplier","suppliers","referrer","updatedMenus","loggedIn","JSON","stringify","sessionData","removeItem","invalidSession","productFlowStock","productFlowStocks","transactionData","successTransaction","customersData","productsData","cashflowInfoOut","cashflowInfoIn","cashflowDetail","productSalesData","productSalesDetails","transactionYears","eventsData","entityUtil","rootReducer","combineReducers","shopReducer","userReducer","transactionState","transactionReducer","managementReducer","initialState","commonAuthorizedHeader","Content-Type","timeout","ms","promise","Promise","resolve","reject","setTimeout","Error","then","getEntitiesWithCallbackMiddleware","store","fetch","method","body","json","newAction","assign","catch","err","finally","param","updateEntityMiddleware","debug","getEntityByIdMiddleware","getEntityListMiddleware","entitie","getMessagesMiddleware","sendChatMessageMiddleware","addEventFromTimelineMiddleware","dd","mm","yyyy","eventEntity","setEntityConfigMiddleware","storeChatMessageLocallyMiddleware","removeManagedEntityMiddleware","resetManagementPageMiddleware","requestAppIdMiddleware","getEventByDateMiddleware","selectDivisionMiddleware","getDivisionsMiddleware","performLogoutMiddleware","all","_ref","_ref2","slicedToArray","responseJson","logoutSuccess","performLoginMiddleware","_ref3","_ref4","loginSuccess","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","pair","return","refreshLoginStatusMiddleware","parse","removeEntityMiddleware","configureStore","createStore","applyMiddleware","Root","es","HashRouter","src_App_0","Boolean","hostname","match","ReactDOM","src_Root","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbd5b73c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass GridComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let items = [];\r\n        if (this.props.items) {\r\n            items = this.props.items;\r\n        }\r\n        const width = this.props.width?this.props.width : \"auto \";\r\n        const repeat = this.props.cols ? this.props.cols : items.length;\r\n        const gridAutoColumns = width.repeat(repeat);\r\n\r\n       \r\n        return (\r\n            <div style={{ ...this.props.style, display: 'grid',   verticalAlign: 'middle', gridTemplateColumns: gridAutoColumns }} >\r\n                {items.map(item => {\r\n                    return item;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GridComponent;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Button.css'\r\nimport GridComponent from '../layout/GridComponent';\r\n\r\nclass ToggleButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active:false\r\n        }\r\n\r\n        this.onClick = (e) => {\r\n            this.setState({active:!this.state.active})\r\n            if(this.props.onClick){\r\n                this.props.onClick(e);\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let outerClass = \"toggle-outer\";\r\n        let innerClass = \"toggle-inner\";\r\n\r\n        if(!this.props.active || this.props.active==false){\r\n            outerClass+=\" outer-inactive\";\r\n            innerClass+=\" inner-inactive\";\r\n        }\r\n\r\n        return (\r\n            <div style={{fontSize:'13px'}}>\r\n                <GridComponent items={[\r\n                    <div onClick={this.onClick} className={outerClass}>\r\n                        <div  className={innerClass} > \r\n                         \r\n                            </div>\r\n                    </div>,\r\n                    <span>{this.props.text}</span>\r\n                ]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleButton;","export const debugMode = () => {\r\n    console.log(\"localStorage.getItem(\\\"debugMode\\\")\",localStorage.getItem(\"debugMode\"));\r\n    return localStorage.getItem(\"debugMode\") && localStorage.getItem(\"debugMode\") == \"true\";\r\n}","import React, { Component } from 'react';\r\nimport '../../css/Header.css'\r\nimport ToggleButton from '../buttons/ToggleButton';\r\nimport * as config from '../../utils/WebConfig'\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            debugMode:true\r\n        }\r\n        this.handleClick = (e) => {\r\n            this.setState({ debugMode: !this.state.debugMode })\r\n            if (this.state.debugMode == true) {\r\n                localStorage.setItem(\"debugMode\", \"true\");\r\n            } else {\r\n                localStorage.setItem(\"debugMode\", \"false\");\r\n            }\r\n            console.log(\"ccc localStorage.setItem(\\\"debugMode\\\")\", localStorage.getItem(\"debugMode\"));\r\n            this.props.app.componentDidMount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const debugMode =  localStorage.getItem(\"debugMode\");\r\n        const isDebugMode =  localStorage.getItem(\"debugMode\") == \"true\";\r\n        return (\r\n            <div className=\"App-header\">\r\n                {this.props.title}\r\n                <ToggleButton active={isDebugMode} onClick={this.handleClick} text={\"Debug Mode: \"+debugMode} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import * as config from '../utils/WebConfig'\r\n \r\nconst rootValue = document.getElementById(\"rootPath\").value == \"${basePath}\" ?\r\n     \"/organization-management\" : document.getElementById(\"rootPath\").value;\r\n\r\nexport const hostLocal =\"http://localhost:8080\".concat(rootValue);\r\nexport const hostCloud = (rootValue);\r\nexport const baseImageUrl = config.debugMode()==true?hostLocal:hostCloud;\r\n ","import React, { Component } from 'react'\r\nimport '../../css/Menu.css'\r\nimport '../../css/Common.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst logoUrl = url.baseImageUrl+\"/res/img/transparent.png\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n        let userLink = \"\";\r\n        let divisionInfo = null;\r\n        if (this.props.division) {\r\n            divisionInfo = <div className=\"fill\" >{this.props.division.name} </div>;\r\n        }\r\n\r\n        if (this.props.loggedUser != null) {\r\n            userLink = <li id=\"user-link\">\r\n                <div className=\"fill\" >{\"Welcome, \" + this.props.loggedUser.name} </div>\r\n                {divisionInfo}\r\n            </li>\r\n        }\r\n\r\n        let appIcon = <li><img src={logoUrl} style={{ width: '90%' }} /></li>;\r\n\r\n        let renderedMenus = [{\r\n            icon: true,\r\n            url: logoUrl\r\n        }];\r\n\r\n\r\n        if (this.props.menus != null) {\r\n            renderedMenus = this.props.menus;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"side-menu\" >\r\n                < ul className=\"menu-ul \" >\r\n                    {appIcon}\r\n                    {userLink}\r\n                    {\r\n                        renderedMenus.map(\r\n                            e => {\r\n                                if (e.url == \"#\") {\r\n                                    return (<li onClick={() => this.props.handleMenuCLick(e)} className={this.props.activeCode == e.code ? \"active\" : \"\"} key={e.name}\r\n                                        id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                            to=\"#\" ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                    )\r\n                                }\r\n                                return (<li className={this.props.activeCode == e.code ? \"menu-active\" : \"\"} key={e.name}\r\n                                    id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                        to={e.url} ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                )\r\n                            }\r\n                        )\r\n                    } </ul>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","export const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const SUPPLIERLIST = \"supplierlist\";","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Content.css'\r\n\r\nclass ContentTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let title = this.props.title ? this.props.title : \"\";\r\n        let description = this.props.description ? this.props.description : \"\";\r\n        return (\r\n            <div className=\"content-title\">\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentTitle;","import React, { Component } from 'react'\r\nimport '../../css/Home.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nimport * as url from '../../constant/Url'\r\nconst logoUrl = url.baseImageUrl + \"/res/img/mpi.png\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Mahasiswa Pencinta Islam\";\r\n        this.props.setMenuCode(menus.HOME);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"Welcome!\" description=\r\n                    {this.props.content} />\r\n                <div className=\"article-content\">\r\n                    <h2 >Admin Console Mahasiswa Pencinta Islam</h2>\r\n                    <img src={logoUrl} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tlet nominal = \"\" + val;\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"...\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\n\r\nexport const dateInputVal = function (dd, mm, yyyy) {\r\n \r\n\tlet month = +mm < 10 ? \"0\" + mm : mm;\r\n\tlet day = +dd < 10 ? \"0\" + dd : dd;\r\n\r\n\treturn yyyy + \"-\" + month + \"-\" + day;\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport '../../css/Button.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ActionButtons extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let className = \"action-button-wrapper\";\r\n        if(this.props.className){\r\n            className += \" \"+this.props.className;\r\n        }\r\n        return (\r\n            <div style={this.props.style ? this.props.style : {}} className={className}  >\r\n                {this.props.buttonsData.map(buttonData => {\r\n                    let className = \"action-button rounded\";\r\n                    if (buttonData.status != null) {\r\n                        className =\r\n                            className.concat(\" \").concat(buttonData.status).concat(\" \").concat(buttonData.className);\r\n                    }\r\n                    return (\r\n                        <button style={{...buttonData.style}} className={className} key={\"btnKey-\" + stringUtil.uniqueId()} onClick={buttonData.onClick}>{buttonData.text}</button>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ActionButtons;","import React, { Component } from 'react'\r\nimport ActionButtons from './buttons/ActionButtons';\r\nimport * as stringUtil from '../utils/StringUtil'\r\n\r\nclass CrudRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleEdit = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleEdit(this.props.identifier);\r\n            }\r\n        }\r\n        this.handleDelete = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleDelete(this.props.identifier);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let values = this.props.values;\r\n        const defaultRowColSpan = 1;\r\n        if (null == values) {\r\n            values = new Array();\r\n        } else {\r\n            let newValues = new Array();\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (this.props.CS || this.props.RS) {\r\n                    let colspan = stringUtil.isNonNullArrayWithIndex(this.props.CS, i) ?\r\n                        this.props.CS[i] : defaultRowColSpan;\r\n                    let rowspan = stringUtil.isNonNullArrayWithIndex(this.props.RS, i) ?\r\n                        this.props.RS[i] : defaultRowColSpan;\r\n                    newValues.push({ value: value, colspan: colspan, rowspan: rowspan });\r\n                } else\r\n                    newValues.push({ value: value });\r\n            }\r\n            values = newValues;\r\n        }\r\n\r\n        let trStyle = this.props.style ? this.props.style : {\r\n            borderTop: 'solid 1px gray',\r\n        };\r\n        let actionButton = <td style={trStyle}>\r\n            <ActionButtons buttonsData={[\r\n                {\r\n                    id: \"k-btn-edit-\" + this.props.identifier,\r\n                    status: 'warning',\r\n                    onClick: this.handleEdit,\r\n                    text: \"Edit\"\r\n                },\r\n                {\r\n                    id: \"k-btn-dlt-\" + this.props.identifier,\r\n                    status: 'danger',\r\n                    onClick: this.handleDelete,\r\n                    text: \"Delete\"\r\n                }\r\n            ]} />\r\n        </td>;\r\n\r\n        if (this.props.disabled == true) {\r\n            actionButton = null;\r\n            trStyle = this.props.style ? this.props.style : {};\r\n        }\r\n      \r\n        return (\r\n            <tr style={trStyle} key={stringUtil.uniqueId()}\r\n                valign={this.props.valign}>\r\n                <Cells values={values} trStyle={trStyle} />\r\n                {actionButton}</tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst Cells = (props) => {\r\n\r\n    return props.values.map(value => {\r\n        return (\r\n            <td key={\"td-key-\" + stringUtil.uniqueId()} id={\"td-\" + stringUtil.uniqueId()} style={props.trStyle} rowSpan={value.rowspan} colSpan={value.colspan}>\r\n                {value.value}\r\n            </td>\r\n        )\r\n    });\r\n}\r\n\r\nexport default CrudRow;","import React, { Component } from 'react'\r\nimport CrudRow from '../CrudRow';\r\nimport '../../css/Common.css'\r\nimport '../../css/InstantTable.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass InstantTable extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let rows = [];\r\n        if (this.props.rows) { rows = this.props.rows; }\r\n        let className = \"table\";\r\n        let tableStyle = this.props.style ? this.props.style : {};\r\n        if (this.props.className) {\r\n            className += \" \" + this.props.className;\r\n        }\r\n        return (\r\n            <table style={tableStyle} className={className}><tbody>\r\n                {rows.map(row => {\r\n                    let disabled = row.disabled == false? false:true;\r\n                  \r\n                    \r\n                    return (\r\n                        <CrudRow\r\n                            style={row.style}\r\n                            valign={this.props.valign ? this.props.valign : \"top\"}\r\n                            RS={row.RS}\r\n                            identifier={row.identifier ? row.identifier : \"0000\"}\r\n                            handleEdit={row.handleEdit}\r\n                            handleDelete={row.handleDelete}\r\n                            CS={row.CS}\r\n                            values={row.values ? row.values : []}\r\n                            key={stringUtil.uniqueId()}\r\n                            disabled={disabled}\r\n                        />\r\n                    )\r\n                })}\r\n            </tbody></table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstantTable;","import React, { Component } from 'react'\r\nimport '../../css/About.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport * as url from '../../constant/Url'\r\nimport '../../css/Common.css'\r\nimport ContentTitle from '../layout/ContentTitle' \r\n\r\nconst logoUrl = url.baseImageUrl + \"/res/img/asp.png\";\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n        this.props.setMenuCode(menus.ABOUT);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container about-section  \" >\r\n                <ContentTitle title=\"About Us\" />\r\n                <div className=\" abount-content\" style={{\r\n                    padding: '5px',\r\n                    width: '90%',\r\n                    fontFamily: 'Consolas', margin: '5px'\r\n                }}>\r\n                    <InstantTable\r\n                        rows={[\r\n                            { values: [\"Name\", \"Organization Management Admin\"] },\r\n                            { values: [\"Version\", \"1.0.0\"] },\r\n                            { values: [\"Description\", \"managing your organization activities effectively\"] },\r\n\r\n\r\n                        ]} />\r\n                    <h2>Powered By</h2>\r\n                    <img style={{ width: '50%' }} src={logoUrl} />\r\n                </div></div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import * as types from './types'\r\nimport * as config from '../utils/WebConfig'\r\nimport * as url from '../constant/Url'\r\n\r\nconst hostCloud = url.hostCloud+\"/api/\";\r\nconst hostLocal = url.hostLocal+\"/api/\";\r\nconst usedHost = () => {\r\n    if (config.debugMode() == true)\r\n        return hostLocal;\r\n    else\r\n        return hostCloud;\r\n} \r\nconst apiBaseUrl  = () => usedHost() + \"public/\";\r\nconst apiEntityBaseUrl  = () => usedHost() + \"management/\"\r\nconst apiAccount = () => usedHost() + \"account/\"\r\nconst apiAdmin = () => usedHost() + \"admin/\"\r\nconst apiTransaction = usedHost() + \"api/transaction/\";\r\n\r\nexport const addEventFromTimeline = (day,month,year) => {\r\n    return { type: types.ADD_EVENT_FROM_TIMELINE, payload: {\r\n        day:day,\r\n        month:month,\r\n        year:year\r\n    }, meta: { type: types.ADD_EVENT_FROM_TIMELINE } };\r\n}\r\n\r\nexport const setEntityConfig = (entityConfig) => {\r\n    return { type: types.SET_ENTITY_CONFIG, payload: {\r\n        entityConfig:entityConfig\r\n    }, meta: { type: types.SET_ENTITY_CONFIG } };\r\n}\r\n\r\nexport const resetProductStocks = () => {\r\n    return { type: types.RESET_PRODUCT_STOCKS, payload: {}, meta: { type: types.RESET_PRODUCT_STOCKS } };\r\n}\r\n\r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n}\r\nexport const resetSuppliers = () => {\r\n    return { type: types.RESET_SUPPLIERS, payload: {}, meta: { type: types.RESET_SUPPLIERS } };\r\n}\r\nexport const resetCustomers = () => {\r\n    return { type: types.RESET_CUSTOMERS, payload: {}, meta: { type: types.RESET_CUSTOMERS } };\r\n}\r\n\r\nexport const resetManagementPage = () => {\r\n    return {\r\n        type: types.RESET_MANAGEMENT_PAGE,\r\n        payload: {},\r\n        meta: { type: types.RESET_MANAGEMENT_PAGE }\r\n    };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl().concat(\"add\") : apiEntityBaseUrl().concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getProductStocks = (name, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_STOCKS,\r\n        payload: { product: { name: name } },\r\n        meta: {\r\n            app: app, type: types.GET_PRODUCT_STOCKS,\r\n            url: apiTransaction().concat(\"stocks\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl().concat(\"generateappid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin().concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const sendChatMessage = (message, username, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SEND_MESSAGE,\r\n        payload: {\r\n            value: message,\r\n            username: username\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.SEND_MESSAGE,\r\n            url: apiAdmin().concat(\"sendmessage\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSalesDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES_DETAIL,\r\n        payload: {\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_PRODUCT_SALES_DETAIL,\r\n            loadMore: request.loadMore == true, url: apiTransaction().concat(\"productsalesdetail/\" + request.productId)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getEventByDate = (month, year, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_EVENTS_BY_DATE,\r\n        payload: { year: year, month: month },\r\n        meta: {\r\n            app: app, type: types.GET_EVENTS_BY_DATE,\r\n            url: apiAdmin().concat(\"event\")\r\n        }\r\n    };\r\n}\r\nexport const selectDivision = (id, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SELECT_DIVISION,\r\n        payload: { divisionId: id },\r\n        meta: {\r\n            app: app, type: types.SELECT_DIVISION, url: apiAccount().concat(\"setdivision\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductListTrx = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_PRODUCT_LIST_TRX,\r\n        payload: {\r\n            entity: \"product\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST, url: apiEntityBaseUrl().concat(\"get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCustomerList = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_CUSTOMER_LIST,\r\n        payload: {\r\n            entity: \"customer\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_CUSTOMER_LIST, url: apiEntityBaseUrl().concat(\"get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetPurchaseTransaction = () => ({\r\n    type: types.RESET_TRX_PURCHASE,\r\n    payload: {},\r\n    meta: { type: types.RESET_TRX_PURCHASE }\r\n})\r\nexport const submitPurchaseTransaction = (request, app) => {\r\n    app.startLoading(true);\r\n    console.log(\"Submit Supply Purchase...\")\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_PURCHASE,\r\n        payload: {\r\n            customer: request.customer,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_PURCHASE, url: apiTransaction().concat(\"purchase\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const submitSupplyTrx = (request, app) => {\r\n    console.log(\"Submit Supply Trx...\")\r\n    app.startLoading(true);\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_SUPPLY,\r\n        payload: {\r\n            supplier: request.supplier,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_SUPPLY, url: apiTransaction().concat(\"supply\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getStockInfo = (stockId, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_STOCK_INFO,\r\n        payload: { productFlow: { id: stockId } },\r\n        meta: {\r\n            app: app, type: types.GET_STOCK_INFO, url: apiTransaction().concat(\"stockinfo\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount().concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n///ok\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {\r\n            user: { username: username, password: password }\r\n        },\r\n        meta: { type: types.DO_LOGIN, url: apiAccount().concat(\"login\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\n//ok\r\nexport const getDivisons = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.GET_DIVISIONS,\r\n        payload: {\r\n\r\n        },\r\n        meta: { type: types.GET_DIVISIONS, url: apiAccount().concat(\"divisions\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getAllProductCategories = () => ({\r\n    type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n    payload: {\r\n        entity: \"category\",\r\n        filter: {\r\n            limit: 0,\r\n            page: 0,\r\n            orderBy: null,\r\n            orderType: null,\r\n            fieldsFilter: {}\r\n        }\r\n    },\r\n    meta: {\r\n        type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n        url: apiEntityBaseUrl().concat(\"get\")\r\n    }\r\n})\r\n\r\nexport const getSupplierList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.FETCH_SUPPLIER_LIST,\r\n        payload: {\r\n            entity: \"supplier\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_SUPPLIER_LIST,\r\n            url: apiBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\nexport const getProductList = (request, app) => {\r\n    app.startLoading(request.withStock == true);\r\n    let requested = {\r\n        type: types.FETCH_PRODUCT_LIST,\r\n        payload: {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name,\r\n                    withStock: request.withStock\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST,\r\n            url: apiBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getProductDetail = (code, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.FETCH_PRODUCT_DETAIL,\r\n        payload: {\r\n\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                exacts: true,\r\n                contains: false,\r\n                fieldsFilter: {\r\n                    code: code,\r\n                    withStock: true,\r\n                    withSupplier: true\r\n                }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_DETAIL,\r\n            url: apiBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const loadMoreSupplier = (page, productId, referrer) => {\r\n    referrer.props.app.startLoading();\r\n    return {\r\n        type: types.LOAD_MORE_SUPPLIER,\r\n        payload: { filter: { page: page, fieldsFilter: { \"productId\": productId } } },\r\n        meta: {\r\n            type: types.LOAD_MORE_SUPPLIER,\r\n            url: apiBaseUrl().concat(\"moresupplier\"),\r\n            referrer: referrer\r\n        }\r\n    }\r\n}\r\n\r\n","export const FETCH_PRODUCT_LIST = \"fetch_product_list\";\r\nexport const FETCH_PRODUCT_DETAIL= \"fetch_product_detail\";\r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\";\r\nexport const FETCH_SUPPLIER_LIST = \"fetch_supplier_list\";\r\nexport const LOAD_MORE_SUPPLIER = \"load_more_supplier\";\r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";\r\nexport const GET_STOCK_INFO = \"get_stock_info\";\r\nexport const SUBMIT_TRX_PURCHASE = \"submit_purchase\";\r\nexport const SUBMIT_TRX_SUPPLY = \"submit_supply\";\r\nexport const RESET_TRX_PURCHASE = \"reset_purchase\";\r\nexport const FETCH_CUSTOMER_LIST = \"fetch_cust_list\";\r\nexport const FETCH_PRODUCT_LIST_TRX = \"fetch_product_list\";\r\nexport const GET_DIVISIONS = \"GET_DIVISIONS\";\r\nexport const SELECT_DIVISION = \"SET_DIVISION\";\r\nexport const GET_EVENTS_BY_DATE = \"GET_EVENTS_BY_DATE\";\r\n\r\nexport const RESET_SUPPLIERS = \"reset_suppliers\";\r\nexport const RESET_PRODUCTS = \"reset_products\";\r\nexport const RESET_PRODUCT_STOCKS = \"RESET_PRODUCT_STOCKS\";\r\nexport const RESET_CUSTOMERS = \"RESET_CUSTOMERS\";\r\nexport const GET_PRODUCT_STOCKS = \"get_product_stocks\";\r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\";\r\nexport const SEND_MESSAGE = \"send_message\";\r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const RESET_MANAGEMENT_PAGE = \"reset_management_page\";\r\n\r\nexport const ADD_EVENT_FROM_TIMELINE = \"add_event_from_timeline\";\r\nexport const SET_ENTITY_CONFIG = \"set-entity-config\";","export const _byId = (id) => { return document.getElementById(id) }\r\n\r\nexport const clearFields = (...ignore) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n    let withIgnore = ignore != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore)\r\n            for (let y = 0; y < ignore.length; y++)\r\n                if (inputs[i].id == ignore[y]) continue loop;\r\n\r\n        if (inputs[i].type == \"text\") inputs[i].value = \"\";\r\n        if (inputs[i].type == \"number\") inputs[i].value = 0;\r\n    }\r\n}\r\n\r\nexport function toBase64(file, referer, callback){\r\n\tconst reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n    \talert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (_byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array(); \r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton  ? totalButton  : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton  ) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton -1 \r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\n\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyup = (e) => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(e.target.value, this.props.id);\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            if (this.props.type == \"date\") {\r\n                this.handleKeyup(e);\r\n            }\r\n            if (this.props.id && this.props.type == \"checkbox\") {\r\n                this.props.onChange(this.props.id);\r\n            }\r\n            if (this.props.onChange && this.props.id) {\r\n                this.props.onChange();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let type = this.props.type ? this.props.type : \"text\";\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let name = this.props.name ? this.props.name : \"\";\r\n        let style = this.props.style ? this.props.style : {};\r\n\r\n        let inputField = <input style={style}\r\n            className=\"rounded\"\r\n            name={name}\r\n            key={\"KEY-input-\" + this.props.id}\r\n            id={this.props.id}\r\n            type={type}\r\n            onKeyUp={this.handleKeyup}\r\n            placeholder={placeholder}\r\n            checked={this.props.checked}\r\n            onChange={this.onChange}\r\n           \r\n        />;\r\n\r\n        if (this.props.disabled == true) {\r\n            inputField = <input style={style}\r\n                className=\"rounded\"\r\n                onChange={this.onChange}\r\n                name={name} key={\"KEY-input-\" + this.props.id}\r\n                checked={this.props.checked}\r\n                id={this.props.id}\r\n                type={type} onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n               \r\n                disabled />\r\n        }\r\n\r\n        if (type == \"textarea\") {\r\n            inputField = <textarea style={style}\r\n                className=\"rounded\"\r\n                name={name}\r\n                key={\"KEY-input-\" + this.props.id}\r\n                id={this.props.id}\r\n                type={type}\r\n                onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n                onChange={this.onChange}\r\n                checked={this.props.checked} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field \">\r\n                {inputField}\r\n                {this.props.type == \"radio\" || this.props.type == \"checkbox\" ? <span style={{ fontSize: '0.9em' }}>\r\n\r\n                    {this.props.text} </span> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\n\r\nclass ActionButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = () => {\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"action-button rounded\";\r\n        if(this.props.status!= null ){\r\n            className=className.concat(\" \").concat(this.props.status);\r\n        }\r\n        return (\r\n            <div >\r\n                <button style={{...this.props.style}} className={className} id={this.props.id} onClick={this.onClick}>{this.props.text}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ActionButton;","import React, {Component} from 'react'\r\nimport '../css/Input.css'\r\n\r\nclass Label extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onClick = () =>{\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let style = this.props.style?this.props.style:{};\r\n        let className = \"input-field \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n        if(this.props.onClick){\r\n            className+=\" clickable\";\r\n        }\r\n        return(\r\n            <div onClick={this.onClick} style={style} className={className}>\r\n                <label>{this.props.text}</label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react'\r\nimport '../css/Common.css'\r\nimport '../css/Message.css'\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {\r\n            let progress = Math.floor( this.props.progress);\r\n            msgStyle = {\r\n                width:progress + \"%\",\r\n                textAlign: 'left'\r\n            };\r\n            className+=\" rounded\";\r\n            messageText =  <span className=\"loader\">{this.props.progress + \"%\"}</span>          \r\n        }\r\n        return (\r\n            <div style={msgStyle} className={className} >{messageText}</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Message;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Login.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport Label from '../Label';\r\nimport Message from '../Message'\r\nimport { withRouter } from 'react-router';\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            showMessageLoginFailed: false\r\n        }\r\n\r\n\r\n\r\n        this.handleUsername = (value) => {\r\n            this.setState({ username: value });\r\n        }\r\n        this.handlePassword = (value) => {\r\n            this.setState({ password: value });\r\n        }\r\n\r\n        this.doLogin = () => {\r\n\r\n            console.log(\"u:\", this.state.username, \",p:\", this.state.password);\r\n            this.props.doLogin(document.getElementById(\"username-field\").value,\r\n                document.getElementById(\"password-field\").value, this.props.main);\r\n        }\r\n\r\n        this.endMessage = () => {\r\n            this.setState({ showMessageLoginFailed: false })\r\n        }\r\n\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.props.setMenuCode(menus.LOGIN);\r\n        document.title = \"Login\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        // if(this.props.loginAttempt == false && this.state.showMessageLoginFailed == false){\r\n        //     this.setState({showMessageLoginFailed:true})\r\n        // }\r\n    }\r\n\r\n    render() {\r\n\r\n        let message = <p>\r\n            {this.props.loginFailed ? <Message endMessage={this.endMessage} type=\"failed\" text=\"Login Failed\" /> : \"\"}\r\n        </p>\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                < ContentTitle title=\"Login Page\" />\r\n                {message}\r\n                <div className=\"login-container\">\r\n                    <Label text=\"Username\" />\r\n                    <InputField id=\"username-field\" onKeyUp={this.handleUsername} />\r\n                    <Label text=\"Password\" />\r\n                    <InputField id=\"password-field\" type=\"password\" onKeyUp={this.handlePassword} />\r\n                    <ActionButton style={{margin:'5px'}} id=\"btn-login\" status=\"submit\" onClick={this.doLogin} text=\"Login\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport '../../css/Tab.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Tab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let tabsData = this.props.tabsData ? this.props.tabsData : [];\r\n\r\n        let autoColumns = \"5% \"+(\"max-content \".repeat(tabsData.length ))+\" auto\";\r\n        return (\r\n            <div className=\"tab-container\" style={{\r\n                ...this.props.style,\r\n                width:'auto',\r\n                gap:'0px',\r\n                display: 'grid',\r\n                gridTemplateColumns: autoColumns\r\n            }} >\r\n                 <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n                {tabsData.map(tabData => {\r\n                    return <div key={stringUtil.uniqueId()} className={tabData.active ? \"tab-element tab-item-active rounded-top\" : \"tab-element tab-item\"} onClick={tabData.onClick ? tabData.onClick : () => { }}>\r\n                        {tabData.text}\r\n                    </div>\r\n                })}\r\n                <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ComboBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = (e) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(e.target.value); \r\n            }\r\n            else {\r\n                console.log(\"Not supported\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let options = [];\r\n        if (this.props.options) {\r\n            options = this.props.options;\r\n        } \r\n        return (\r\n            <div className=\"input-field \">\r\n                <select value={this.props.defaultValue ? this.props.defaultValue : \"\"} className=\"rounded\" id={this.props.id}\r\n                    onChange={this.handleOnChange} >\r\n                    {options.map(\r\n                        option => {\r\n                            return <option key={\"opt_\" + stringUtil.uniqueId()} value={option.value} >{option.text}</option>\r\n                        }\r\n                    )}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComboBox;","import  React  from 'react'\r\nimport '../../css/Common.css'\r\nimport ComboBox from '../input/ComboBox';\r\n\r\nclass DashboardMain extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            divisionId:null\r\n        }\r\n    }\r\n\r\n    onDivisionListChange = (value) => {\r\n        this.setState({divisionId:value});\r\n        this.props.selectDivision(value);\r\n    }\r\n    \r\n    divionOptions = () => {\r\n        let options = [];\r\n        let divisions = this.props.divisions? this.props.divisions : [];\r\n\r\n        divisions.forEach(division => {\r\n            options.push({\r\n                value: division.id,\r\n                text: division.name\r\n            })\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render(){\r\n \r\n        const division = this.props.division;\r\n        let divisionId = this.state.divisionId;\r\n        if(this.props.division){\r\n            divisionId = this.props.division.id;\r\n        }\r\n\r\n        return(\r\n            <div >\r\n                <p>Login Sebagai</p>\r\n                <ComboBox defaultValue={divisionId} onChange={this.onDivisionListChange} options={this.divionOptions()} />\r\n\r\n                <p>Current Selection:</p>\r\n                <p>{division?division.name:\"\"}</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default DashboardMain;","export  const month = [\r\n    { name: \"Januari\", day: 31, text:\"Januari\",value:\"1\" },\r\n    { name: \"Februari\", day: 28, text:\"Februari\",value:\"2\" },\r\n    { name: \"Maret\", day: 31, text:\"Maret\",value:\"3\" },\r\n    { name: \"April\", day: 30, text:\"April\",value:\"4\" },\r\n    { name: \"Mei\", day: 31 , text:\"Mei\",value:\"5\"},\r\n    { name: \"Juni\", day: 30, text:\"Juni\",value:\"6\" },\r\n    { name: \"Juli\", day: 31 , text:\"Juli\",value:\"7\"},\r\n    { name: \"Agustus\", day: 31 , text:\"Agustus\",value:\"8\"},\r\n    { name: \"September\", day: 30 , text:\"September\",value:\"9\"},\r\n    { name: \"Oktober\", day: 31 , text:\"Oktober\",value:\"10\"},\r\n    { name: \"November\", day: 30 , text:\"November\",value:\"11\"},\r\n    { name: \"Desember\", day: 31 , text:\"Desember\",value:\"12\"},\r\n];","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Card.css'\r\n\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let titleStyle = {height:'auto'}\r\n        if (this.props.icon) {\r\n            titleStyle = {\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundColor: 'white',\r\n                backgroundImage: \"url(\" + this.props.icon + \")\",\r\n                backgroundSize: '200px 160px',\r\n                \r\n            }\r\n        }\r\n\r\n        let className= \"card \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.onClick} style={this.props.style} className={className}>\r\n                <div className=\"card-title  \" style={titleStyle}>\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\n\r\n\r\nclass FullCalendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth(),\r\n            inputYearValue: new Date().getFullYear(),\r\n            activeId: \"\", \r\n            selectedDay: 0\r\n        }\r\n\r\n        this.calendarData = [];\r\n        this.days = [\"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\", \"Ahad\"];\r\n\r\n\r\n        this.month_now = 7;// 0; \r\n        this.begin = { week: 1, day: 3, dayCount: 31, info: \"\" };\r\n        this.begin_old = { week: 0, day: 0, dayCount: 0, info: \"\" };\r\n        this.year_now = 1945; \r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n        this.running_month = 7;\r\n        this.running_year = 1945;\r\n        this.filterDayId = 0;\r\n        this.filterMonthId = 0; this.dateFormId = 0;\r\n        this.entity_Name = 0; this.entity_Prop = 0; this.dateFormId = 0;\r\n\r\n        this.setSelectedMonth = (val) => {\r\n            this.setState({ selectedMonth: val });\r\n            this.props.refresh(val, this.year_now);\r\n        }\r\n        this.changeInputYear = (val, id) => {\r\n            this.setState({ inputYearValue: val, activeId: id });\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => { \r\n            this.props.getEventByDate(month, year );\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            if(this.props.getEventDetail){\r\n                return this.props.getEventDetail(day);\r\n            }\r\n\r\n            return [];\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        } \r\n        this.updateFields();\r\n        if (_byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n         this.loadCalendar();\r\n    }\r\n\r\n    setDateElementId(dateID) { \r\n        this.dateFormId = dateID;\r\n        let filterStr = \"filter-\" + dateID;\r\n        this.filterDayId = (filterStr + \".day\");\r\n        this.filterMonthId = (filterStr + \".month\");\r\n        this.dateFormId = (filterStr + \".year\");\r\n    }\r\n\r\n    updateFields() {\r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n    }\r\n\r\n    loadCalendar() {\r\n        this.updateFields();\r\n        this.createTable();\r\n        this.begin_old = this.begin;\r\n        this.begin = this.fillDay(this.month_now, true, this.begin);\r\n\r\n        this.input_month.value = new Date().getMonth() + 1; \r\n        this.setCalendar();\r\n        this.setState({ updated: new Date(), inputYearValue: new Date().getFullYear() });\r\n    }\r\n    setCalendar() {\r\n        this.doSetCalendar();\r\n    }\r\n\r\n    doSetCalendar() {\r\n        console.log(\"==start==\");\r\n\r\n        this.running_month = this.input_month ? this.input_month.value - 1 : new Date().getMonth();\r\n        this.running_year = this.state.inputYearValue ? this.state.inputYearValue : new Date().getFullYear();\r\n        let diff_year = +Math.abs(this.running_year - this.year_now);\r\n        // alert(\"diff_year year:\" + diff_year);\r\n        let monthCount = 0;\r\n        if (diff_year > 0)\r\n            monthCount = (11 - this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (+this.running_month);\r\n        else\r\n            monthCount = this.running_month - this.month_now;\r\n        let less = false;\r\n        if (this.running_year - this.year_now > 0) {\r\n            less = false;\r\n        } else if (this.running_year - this.year_now < 0) {\r\n            less = true;\r\n        } else {\r\n            if (this.running_month - this.month_now > 0) {\r\n                less = false;\r\n            } else {\r\n                less = true;\r\n            }\r\n        }\r\n        monthCount = Math.abs(monthCount);\r\n        //console.log(\"kurang dari: \", less);\r\n        let current_month = this.month_now;\r\n        let endMonth = (monthCount + this.month_now);\r\n        if (monthCount <= 0)\r\n            return;\r\n        if (!less)\r\n        ////console.log(\"month now\",this.month_now,\"diff_year\",monthCount,\"to\",to);\r\n        {\r\n            for (let m = this.month_now + 1; m <= endMonth + 1; m++) {\r\n                if (current_month > 11) {\r\n                    current_month = 0;\r\n\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.nextMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"month\",current_month,\"this.running_year\",this.year_now);\r\n                current_month++;\r\n            }\r\n        } else if (less) {\r\n            let pastMonthCount = (this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (11 - this.running_month);\r\n            endMonth = (pastMonthCount + this.month_now);\r\n            //console.log(\"month now\", this.month_now, \"diff_year\", monthCount, \"from\", to);\r\n            let begin_month = this.month_now;\r\n            for (let b = endMonth + 1; b >= begin_month + 1; b--) {\r\n                if (current_month < 0) {\r\n                    current_month = 11;\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.prevMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"b\",b,\"month\",current_month);\r\n                current_month--;\r\n            } \r\n        }\r\n\r\n        this.fillInfo();\r\n        console.log(\"==end==\")\r\n    }\r\n\r\n    fillInfo() {\r\n        if (this.date_info)\r\n            this.date_info.value = timeLineConstant.month[this.month_now].name + \" \" + this.year_now;\r\n        this.refresh();\r\n\r\n    } \r\n\r\n    detail(day, month, year) { \r\n        if(this.props.detail){\r\n            this.props.detail(day, month, year);\r\n        } \r\n    }\r\n\r\n    prevMonth() {\r\n\r\n        this.setState({ updated:new Date()})\r\n        return this.doPrevMonth(false);\r\n    }\r\n\r\n    doPrevMonth(prev) {\r\n        this.month_now--;\r\n        if (prev) {\r\n            this.running_month--;\r\n        }\r\n        if (this.month_now < 0) {\r\n            this.month_now = 11;\r\n            this.year_now--;\r\n            if (prev) {\r\n                this.running_month = 11;\r\n                this.running_year--;\r\n            }\r\n        }\r\n        let begin_prev = this.findBegin(this.begin_old, this.begin_old.dayCount);\r\n\r\n        this.begin_old = {\r\n            week: begin_prev.week,\r\n            day: begin_prev.day,\r\n            dayCount: begin_prev.dayCount,\r\n        }\r\n        let switch_ = this.fillDay(this.month_now, false, begin_prev);\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n    }\r\n\r\n    nextMonth() {\r\n        \r\n        return this.doNextMonth(false);\r\n    }\r\n\r\n    refresh() {\r\n        if(this.props.refresh){\r\n            this.props.refresh(this.month_now, this.year_now);\r\n        }\r\n    }\r\n\r\n    doNextMonth(next) {\r\n        console.log(\"NEXT\")\r\n        this.month_now++;\r\n        if (next) {\r\n            this.running_month++;\r\n        }\r\n        if (this.month_now > 11) {\r\n            this.month_now = 0;\r\n            this.year_now++;\r\n            if (next) {\r\n                this.running_month = 0;\r\n                this.running_year++;\r\n            }\r\n        }\r\n\r\n        let switch_ = this.fillDay(this.month_now, true, this.begin);\r\n        this.begin_old = {\r\n            week: this.begin.week,\r\n            day: this.begin.day,\r\n            dayCount: this.begin.dayCount,\r\n        }\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount,\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n\r\n    }\r\n\r\n    findBegin(begin_old_, totalday) {\r\n        let M = this.month_now - 1;\r\n        if (M < 0) {\r\n            M = 11;\r\n        }\r\n        let day = begin_old_.day;\r\n        let week = 6;\r\n        let begin_prev_ = {\r\n            week: 0,\r\n            day: 0,\r\n            dayCount: timeLineConstant.month[M].day\r\n        }\r\n\r\n        for (let D = totalday; D >= 0; D--) {\r\n            if (day <= 0) {\r\n                day = 7;\r\n                week--;\r\n            }\r\n            day--;\r\n        }\r\n        begin_prev_.week = week;\r\n        begin_prev_.day = day + 1;\r\n        return begin_prev_;\r\n    }\r\n\r\n    setElementByAttr(val, val2, day) {\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            let data = this.calendarData[i];\r\n\r\n            if (data.week == val && data.day == val2) {\r\n                if (new Date().getDate() == day &&\r\n                    new Date().getMonth() == this.month_now &&\r\n                    new Date().getYear() + 1900 == this.year_now) {\r\n\r\n                    console.log(\"NOW\", i);\r\n                    this.calendarData[i].now = true;\r\n                } else {\r\n                 //   console.log(\"NOT NOW\", i);\r\n                    this.calendarData[i].now = false;\r\n                }\r\n                this.calendarData[i].text = day;\r\n            }\r\n        }\r\n    }\r\n\r\n    addNewEvent(day, month, year) {\r\n\r\n        let strDate = this.dateAcceptableForHtmlInput(day, month, year);\r\n        document.getElementById(this.dateFormId).value = strDate;\r\n    }\r\n\r\n    dateAcceptableForHtmlInput(day, month, year) {\r\n        return year + \"-\" + this.addZero(month, 10) + \"-\" + this.addZero(day, 10);\r\n    }\r\n\r\n    addZero(Val, Min) {\r\n        let N = new String(Val);\r\n        let MinStr = new String(Min);\r\n\r\n        let ValLength = N.length;\r\n        let MinLength = MinStr.length;\r\n        let Diff = MinLength - ValLength;\r\n        for (let i = 1; i <= Diff; i++) {\r\n            N = new String(\"0\").concat(N);\r\n        }\r\n\r\n        return N;\r\n    }\r\n\r\n    clear() {\r\n\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            this.calendarData[i].text = \"\";\r\n        }\r\n\r\n        timeLineConstant.month[1].day = 28 + (+this.year_now % 4 == 0 ? 1 : 0);\r\n    }\r\n\r\n    fillDay(current_month, next, begin) {\r\n        this.clear();\r\n        let begin_new = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let begin_old_ = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let week_ = begin_new.week;\r\n        let begin_week = week_;\r\n        if (begin_new.week > 1 && begin_new.day > 1) {\r\n            week_ = 1;\r\n            begin_week = 1;\r\n        }\r\n        let day_ = begin_new.day;\r\n        let begin_day = day_;\r\n        let isNow = this.running_month == current_month && this.running_year == this.year_now;\r\n        //  console.log(\"isNow\", isNow,this.running_month,'=',current_month, this.running_month == current_month,this.running_year,'=',this.year_now, this.running_year == this.year_now)\r\n        for (let d = 1; d <= timeLineConstant.month[current_month].day; d++) {\r\n            if (day_ > 7) {\r\n                day_ = 1;\r\n                week_++;\r\n            }\r\n            if (isNow) {\r\n                this.setElementByAttr(week_, day_, d);\r\n            }\r\n            day_++;\r\n        }\r\n        begin_new.week = week_ >= 5 ? 2 : 1;\r\n        begin_new.day = day_;\r\n        begin_new.dayCount = timeLineConstant.month[current_month].day;\r\n        //console.log(\"old\", begin_old_.day, begin_old_.week);\r\n        //console.log(\"   \");\r\n        //console.log(\"new\", begin_new.day, begin_new.week);\r\n        this.fillInfo();\r\n        if (isNow) {\r\n            // this.detail(null, (+this.running_month + 1), this.running_year);\r\n            begin_new.info = \"NOW\";\r\n            this.getEventByDate(this.running_month + 1, this.running_year);\r\n        } else {\r\n            begin_new.info = \"SOME-DAY\";\r\n        }\r\n\r\n\r\n\r\n        return begin_new;\r\n    }\r\n\r\n    render() {\r\n        //validate division\r\n        let selectedYear = this.state.inputYearValue;\r\n\r\n        let totalCalendarData = this.days.map(day => {\r\n            return ({ text: day, title: true })\r\n        })\r\n\r\n        this.calendarData.forEach(element => {\r\n            totalCalendarData.push(element);\r\n        });\r\n\r\n        let calendarData = totalCalendarData.map(\r\n            data => {\r\n\r\n                if (data.text == null || data.text == \"\") {\r\n                    return <div></div>\r\n                }\r\n\r\n                let style = { width: '80%', minHeight: '150px', marginBottom: '15px' };\r\n\r\n                if (data.title == true) {\r\n                    return (<div>{data.text}</div>)\r\n                }\r\n\r\n                if (data.now == true) {\r\n                    style = {\r\n                        ...style,\r\n                        backgroundColor: 'lightgreen'\r\n                    }\r\n                }\r\n\r\n                let events = this.getEventDetail(+data.text);\r\n                let i = 0;\r\n                let eventList = events.map(event => {\r\n                    i++;\r\n                    if (i <= 3) {\r\n\r\n                        return <p key={\"EVT_\" + i}>{event.name}</p>\r\n                    } else if (i == 4) {\r\n                        return <ActionButton onClick={() => { }} text={\"more\"} />\r\n                    } else {\r\n                        return null;\r\n                    }\r\n\r\n\r\n                });\r\n             //   console.log(data.text, \"EVENTS: \", events);\r\n\r\n                return (\r\n                    <Card style={style} title={data.text}\r\n                        onClick={() => this.detail(data.text, this.month_now, this.year_now)}\r\n                        content={eventList}\r\n                    />\r\n                )\r\n            }\r\n        )\r\n\r\n\r\n        let content = <div id=\"calendar-wrapper\">\r\n\r\n            <GridComponent cols={3} style={{\r\n                textAlign: 'center', width: '400px'\r\n            }} items={[\r\n                <ComboBox id=\"input_month\" defaultValue={this.state.selectedMonth} onChange={this.setSelectedMonth}\r\n                    options={timeLineConstant.month} />,\r\n                <InputField type=\"number\" id=\"input_year\" value={selectedYear} onKeyUp={this.changeInputYear} />,\r\n                <ActionButton onClick={(e) => this.setCalendar()} text={\"Go\"} />,\r\n                <ActionButton onClick={(e) => this.doPrevMonth(true)} text={\"Prev\"} />,\r\n                <input disabled className=\"form-control\" id=\"date-info\" />,\r\n                <ActionButton onClick={(e) => this.doNextMonth(true)} text={\"Next\"} />\r\n            ]}\r\n\r\n            />\r\n            <p></p>\r\n            <p></p>\r\n            <GridComponent cols={7} items={calendarData} />\r\n        </div>;\r\n\r\n\r\n        return (\r\n             content  \r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default FullCalendar;","export const divisionConfig = {\r\n    title: \"Badan Pengurus\",\r\n    entityName: \"division\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\", lableName: \"Nama\" },\r\n        { name: \"description\" }, { name: \"institution.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama BPD\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"Deskripsi BPD\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Division Insitusi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"institution.name\",\r\n            reffEntity: \"Institution\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const sectionConfig = {\r\n    title: \"Divisi\",\r\n    entityName: \"section\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"division.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"BPD\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"division.name\",\r\n            reffEntity: \"division\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const programConfig = {\r\n    title: \"Program Kerja\",\r\n    entityName: \"program\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" }\r\n        ,\r\n        { name: \"section.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Proker\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi Proker\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst eventStatus =  [\r\n    { text: \"-Not Configured-\", value: -1 },\r\n    { text: \"Done\", value: 1 },\r\n    { text: \"UnDone\", value: 0 }\r\n];\r\n\r\nexport const eventConfig = {\r\n    title: \"Kegiatan\",\r\n    entityName: \"event\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"info\" },\r\n        { name: \"date\", type: \"longDate\" },\r\n        { name: \"location\" },\r\n        { name: \"program.name\" },\r\n        { name: \"participant\" },\r\n        {\r\n            name: \"done\", type: \"staticDropdown\", options:eventStatus\r\n        }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Kegiatan\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Waktu Kegiatan\",\r\n            inputType: \"date\",\r\n            name: \"date\"\r\n        },\r\n        {\r\n            lableName: \"Info Kegiatan\",\r\n            inputType: \"textarea\",\r\n            name: \"info\"\r\n        }, {\r\n            lableName: \"Lokasi Kegiatan\",\r\n            inputType: \"text\",\r\n            name: \"location\"\r\n        },\r\n        {\r\n            lableName: \"Nama Program\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"program.name\",\r\n            reffEntity: \"program\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Status Kegiatan\",\r\n            inputType: \"staticDropDown\",\r\n            name: \"done\",\r\n            options:eventStatus\r\n        },\r\n        {\r\n            lableName: \"Peserta\",\r\n            inputType: \"number\",\r\n            name: \"participant\"\r\n        },\r\n    ]\r\n}\r\n\r\nexport const positionConfig = {\r\n    title: \"Posisi\",\r\n    entityName: \"position\",\r\n    id: \"id\",\r\n    disabled: true,\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" },\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\nexport const memberConfig = {\r\n    title: \"Anggota\",\r\n    entityName: \"member\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"position\" },\r\n        { name: \"section\" },\r\n        { name: \"description\" }\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Anggota\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"position.name\",\r\n            reffEntity: \"position\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: \"textarea\",\r\n            name: \"name\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==============OLD STUFF==============//\r\n\r\n/**\r\n * SAMPLE\r\n */\r\n\r\nexport const productConfig = {\r\n    title: \"Product\",\r\n    entityName: \"product\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"code\" },\r\n        { name: \"description\" }, { name: \"unit.name\" },\r\n        { name: \"price\", type: \"number\" }, { name: \"category.name\" },\r\n        { name: \"imageUrl\", type: \"imageMultiple\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Product Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Code\",\r\n            inputType: \"text\",\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Product Image(s)\",\r\n            inputType: \"multipleImage\",\r\n            name: \"imageUrl\"\r\n        },\r\n        {\r\n            lableName: \"Product Description\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Product Unit\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"unit.name\",\r\n            reffEntity: \"Unit\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Price\",\r\n            inputType: \"number\",\r\n            name: \"price\"\r\n        },\r\n        {\r\n            lableName: \"Product Category\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"category.name\",\r\n            reffEntity: \"Category\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport const supplierList = {\r\n    title: \"Supplier\",\r\n    entityName: \"supplier\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"address\" }, { name: \"contact\" }, { name: \"website\", type: \"link\" },\r\n        { name: \"iconUrl\", type: \"image\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Supplier Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Address\",\r\n            inputType: \"textarea\",\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Contact\",\r\n            inputType: \"text\",\r\n            name: \"contact\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Icon\",\r\n            inputType: \"singleImage\",\r\n            name: \"iconUrl\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Website\",\r\n            inputType: \"text\",\r\n            name: \"website\"\r\n        }\r\n    ]\r\n}\r\nexport const customerList = {\r\n    title: \"Customer\",\r\n    entityName: \"customer\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"username\" }, { name: \"name\" }, { name: \"address\" }, { name: \"phone\" }, { name: \"email\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Customer Unique Name\",\r\n            inputType: \"text\",\r\n            name: \"username\"\r\n        },\r\n        {\r\n            lableName: \"Customer Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Customer Address\",\r\n            inputType: \"textarea\",\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Customer Phone\",\r\n            inputType: \"text\",\r\n            name: \"phone\"\r\n        },\r\n        {\r\n            lableName: \"Customer Email\",\r\n            inputType: \"email\",\r\n            name: \"email\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const transactionConfig = {\r\n    title: \"Transaction\",\r\n    entityName: \"transaction\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"code\" }, { name: \"transactionDate\", type: \"longDate\" },\r\n        { name: \"type\" }, { name: \"supplier.name\" },\r\n        { name: \"customer.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Transaction Code\",\r\n            inputType: \"text\",\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Date\",\r\n            inputType: \"text\",\r\n            name: \"transactionDate\"\r\n        },\r\n        {\r\n            lableName: \"Transaction Type\",\r\n            inputType: \"text\",\r\n            name: \"type\"\r\n        },\r\n        {\r\n            lableName: \"Supplier\",\r\n            inputType: \"text\",\r\n            name: \"supplier.name\"\r\n        },\r\n        {\r\n            lableName: \"Customer\",\r\n            inputType: \"text\",\r\n            name: \"customer.name\",\r\n        },\r\n\r\n    ]\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport FullCalendar from './FullCalendar';\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth(),\r\n            selectedYear: new Date().getFullYear(),\r\n            detailView: false,\r\n            detailEvents: [],\r\n            selectedDay: 0\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => {\r\n            console.log(\"_________\", month, year);\r\n            this.setState({\r\n                update: new Date(), selectedMonth: month, selectedYear: year\r\n            });\r\n            this.props.getEventByDate(month, year, this.props.app);\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            let events = this.props.events;\r\n            let result = [];\r\n\r\n            events.forEach(event => {\r\n                let date = new Date(event.date);\r\n                if (date.getDate() == day) {\r\n                    result.push(event);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n        this.detail = (day, month, year) => {\r\n            console.log(\"@DETAIL:\", day, month, year);\r\n            let events = this.getEventDetail(+day);\r\n            this.setState({\r\n                detailView: true, detailEvents: events, selectedDay: day,\r\n                selectedMonth: month, selectedYear: year\r\n            })\r\n        }\r\n\r\n        this.refresh = (selectedMonth, selectedYear) => {\r\n            this.setState({\r\n                updated: new Date(),\r\n                selectedMonth: selectedMonth, selectedYear: selectedYear\r\n            })\r\n        }\r\n\r\n        this.addEvent = () => {\r\n            let config = entityConfig.eventConfig;\r\n\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n\r\n            this.props.addEventFromTimeline(\r\n                this.state.selectedDay,\r\n                this.state.selectedMonth + 1, /*IMPORTANT*/\r\n                this.state.selectedYear\r\n            );\r\n\r\n            this.props.history.push(\"/management\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n\r\n        //validate division\r\n        if (this.props.division == null) {\r\n            return <h2>Silakan Pilih Badan Pengurus MPI</h2>\r\n        }\r\n        let title = <h2>TimeLine {this.props.division.name + \" \" + this.state.selectedYear}</h2>;\r\n\r\n        let detailEvents = [];\r\n        if (this.state.detailView == true) {\r\n            this.state.detailEvents.forEach(event => {\r\n\r\n                const eventDate = new Date(event.date).toString();\r\n\r\n                let eventStatus = \"Done\";\r\n                if(event.done == 0){\r\n                    eventStatus = \"Not Done\";\r\n                }else if(event.done != 1){\r\n                    eventStatus = \"Not Configured\";\r\n                }\r\n\r\n                let content = <div>\r\n                     <p>{eventDate}</p>\r\n                    <GridComponent cols={2} items={[  \r\n                        <label>Location</label>, <label>{event.location}</label>,\r\n\r\n                        <label>Participant</label>, <label>{event.participant}</label>,\r\n\r\n                        <label>Status</label>, <label>{eventStatus}</label>,\r\n\r\n                        <label>Info</label>, <label>{event.info}</label>,\r\n                    ]} />\r\n                </div>\r\n\r\n                let eventCard = <Card title={event.name}\r\n                    content={content} style={{ width: '90%' }}\r\n                />\r\n                detailEvents.push(eventCard);\r\n            });\r\n\r\n            if (detailEvents.length == 0) {\r\n                detailEvents = [\r\n                    <div>No Agenda.</div>\r\n                ]\r\n            }\r\n            return <div>\r\n                {title}\r\n                <p>Detail in {this.state.selectedDay + \" \" + stringUtil.monthYearString(\r\n                    this.state.selectedMonth + 1,\r\n                    this.state.selectedYear\r\n                )}</p>\r\n                <ActionButton onClick={() => { this.setState({ detailView: false }) }} text=\"Back\" />\r\n                <GridComponent width={\"30%\"} cols={3} items={detailEvents} />\r\n                <ActionButton status=\"success\" onClick={() => { this.addEvent() }} text=\"Add Event\" />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {title}\r\n                <FullCalendar\r\n                    division={this.props.division}\r\n                    detail={this.detail} getEventByDate={this.getEventByDate}\r\n                    refresh={this.refresh}\r\n                    events={this.props.events} getEventDetail={this.getEventDetail}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        events: state.managementState.events,\r\n        division: state.userState.division\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEventByDate: (m, y, app) => dispatch(actions.getEventByDate(m, y, app)),\r\n    addEventFromTimeline: (d, m, y) => dispatch(actions.addEventFromTimeline(d, m, y))\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Timeline)) ","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Dashboard.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport Tab from '../buttons/Tab';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport DashboardMain from './DashboardMain';\r\nimport Timeline from './Timeline'\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: \"home\"\r\n        }\r\n\r\n        this.setMenuCode = (code) => {\r\n            this.setState({ menu: code });\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n        this.getDivisons = () => {  \r\n            this.props.getDivisons( this.props.app);  \r\n        }\r\n\r\n        this.selectDivision = (divisionId) => {\r\n            this.props.selectDivision(divisionId, this.props.app);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        if (this.props.loginStatus != true)\r\n            return;\r\n        this.props.setMenuCode(menus.DASHBOARD);\r\n        document.title = \"Dashboard\";\r\n\r\n        this.getDivisons();\r\n    }\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                text: \"Home\",\r\n                active: this.state.menu == \"home\",\r\n                onClick: () => {this.setMenuCode('home') }\r\n            },\r\n            {\r\n                text: \"Time Line\",\r\n                active: this.state.menu == \"timeline\", \r\n                onClick: () => {this.setMenuCode('timeline') }\r\n            } \r\n        ];\r\n    }\r\n \r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const buttonsData = this.getButtonsData();\r\n\r\n        let content = null;\r\n        switch (this.state.menu) {\r\n            case 'home':\r\n                content = <DashboardMain  division={this.props.division} \r\n                    selectDivision={this.selectDivision} \r\n                    divisions={this.props.divisions} />\r\n                break;\r\n            case \"timeline\":\r\n                    content = <Timeline app={this.props.app} />\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (<div className=\"section-container\">\r\n            <ContentTitle title={\"Admin Page\"}\r\n                description=\"Welcome to the admin console\" />\r\n            <div className=\"management-container\">\r\n                <Tab tabsData={buttonsData} />\r\n                {content}\r\n            </div>\r\n        </div>)\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        divisions: state.userState.divisions,\r\n        division: state.userState.division,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getDivisons: ( app) => dispatch(actions.getDivisons( app)),\r\n    selectDivision: (divisionId, app) => dispatch(actions.selectDivision(divisionId, app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)); ","import React, { Component } from 'react';\r\nimport '../../css/Footer.css'\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let date = new Date().getFullYear();\r\n\r\n        return (\r\n            <div className=\"App-footer\">\r\n               BPP MPI Divisi Media {date+\" powered by React Js \"+React.version}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react' \r\nimport Label from './Label';\r\nimport '../css/Chat.css'\r\nimport GridComponent from './layout/GridComponent';\r\n\r\nclass ChatList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let chats = this.props.messages ? this.props.messages : [];\r\n        let chatRows = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = chats[i];\r\n            chatRows.push(\r\n                <ChatItem message={chat} username={this.props.username} />\r\n            )\r\n        }\r\n        return (\r\n            <GridComponent cols={1} items={chatRows} />)\r\n    }\r\n}\r\n\r\nconst ChatItem = props => {\r\n    let className = \"chat-item rounded paper-shadow  \" + (props.message.admin == 1 ? \" admin \" : \"user\");\r\n    let username = \"\";\r\n    if (props.username) {\r\n        username = \" [\" + props.username + \"]\";\r\n    }\r\n    let sender = props.message.admin == 1 ? \"Admin\" : \"You\" + username;\r\n    let senderComponent = <span>\r\n        {sender}<span style={{ marginLeft: '11px', fontSize: '0.7em', float: 'right' }} >{props.message.date}</span>\r\n    </span>\r\n    return (\r\n        <div className={className}>\r\n            <Label style={{ fontSize: '0.8em', color: 'black' }} text={senderComponent} />\r\n            <Label text={props.message.text} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport SockJsClient from 'react-stomp';\r\nimport ChatList from '../ChatList';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport Label from '../Label';\r\nimport GridComponent from '../layout/GridComponent'\r\n\r\nclass ChatRoom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages: null, username: null, activeId: null }\r\n        this.sendChatMessage = () => {\r\n            if (!_byId(\"input-msg\").value) {\r\n                alert(\"Message must not be null\");\r\n                return;\r\n            }\r\n            this.props.sendChatMessage(_byId(\"input-msg\").value, this.state.username, this.props.app);\r\n            _byId(\"input-msg\").value = \"\";\r\n        }\r\n\r\n        this.handleMessage = (response) => {\r\n            console.log(\"Responses handleMessage: \", response.code);\r\n            console.log(\"LOCAL STORAGE:\", localStorage.getItem(\"requestId\"))\r\n            if (response.code != localStorage.getItem(\"requestId\")) {\r\n                return;\r\n            }\r\n            this.props.storeChatMessageLocally(response.entities);\r\n            // this.setState({ messages: response.entities });\r\n        }\r\n\r\n        this.changeUsername = (value, id) => {\r\n            this.setState({ username: value, activeId: id });\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.setMenuCode('chatroom');\r\n        document.title = \"Chat Room\";\r\n        this.props.getMessages(this.props.app);\r\n        if (this.props.userAlias) {\r\n            this.setState({ username: this.props.userAlias })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.activeId && _byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let userAlias = this.props.userAlias ? this.props.userAlias : \"\";\r\n        let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\r\n        let localHost = \"http://localhost:8080/universal-good-shop/\";\r\n        const usedHost = localHost;\r\n        return (\r\n            // <div className=\"section-container\">\r\n            //     <ContentTitle title=\"What Do You Feel?\" description=\r\n            //         {\"Identified as [\" + this.state.username + \"]\"} />\r\n            //     <InputField\r\n            //         value={userAlias}\r\n            //         onKeyUp={this.changeUsername}\r\n            //         id=\"input-username\"\r\n            //         placeholder=\"identify your name\" />\r\n            //     <div style={{ textAlign: 'left' }} id=\"chat-room\">\r\n\r\n            //         <div className=\"chat-container\"  >\r\n            //             <ChatList username={this.state.username} messages={this.props.messages} />\r\n            //         </div>\r\n\r\n            //         <GridComponent style={{ width: '50%', textAlign: 'right' }} items={[\r\n            //             <InputField style={{ width: '130%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />,\r\n            //             <ActionButton style={{ margin: '5px' }} status=\"success\" onClick={this.sendChatMessage} text=\"send\" />\r\n\r\n            //         ]} />\r\n\r\n            //         <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/messages']}\r\n            //             onMessage={(msg) => { this.handleMessage(msg) }}\r\n            //             ref={(client) => { this.clientRef = client }} />\r\n            //     </div>\r\n            // </div>\r\n            <ContentTitle title=\"under construction\" />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        messages: state.shopState.messages,\r\n        userAlias: state.shopState.userAlias\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    sendChatMessage: (message, username, app) => dispatch(actions.sendChatMessage(message, username, app)),\r\n    storeChatMessageLocally: (messages) => dispatch(actions.storeMessageLocally(messages)),\r\n    getMessages: (app) => dispatch(actions.getMessageList(app))\r\n\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ChatRoom)","import React, { Component } from 'react'\r\n\r\nimport '../../css/Input.css'\r\n\r\nclass DropdownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false\r\n        }\r\n\r\n        this.onHover = (e) => {\r\n            if(this.props.onHover)\r\n                this.props.onHover( this.props.index);\r\n        }\r\n        this.unHover = (e) => { \r\n            this.setState({ hover: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n          return (\r\n            <div onMouseLeave={this.unHover} onMouseOver ={this.onHover}  >\r\n                {this.props.text}</div>\r\n        )\r\n    }\r\n}\r\nexport default DropdownItem;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport DropdownItem from './DropdownItem';\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            focus: true, hover: false, hoverIndex: -1,\r\n\r\n        }\r\n\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(document.getElementById(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onBlur = () => {\r\n            console.log(\"blur\");\r\n            this.setState({ focus: false, hover: false })\r\n        }\r\n\r\n        this.onSelect = (dataValue, text) => {\r\n            console.log(\"select value:\", dataValue);\r\n            if (this.props.onSelect) { this.props.onSelect(dataValue); }\r\n            if (this.props.id) {\r\n                document.getElementById(this.props.id).value = text;\r\n            }\r\n        }\r\n\r\n        this.onHover = (i) => {\r\n            if (this.state.hoverIndex != i)\r\n                this.setState({ hoverIndex: i });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let dropdownList = [];\r\n        let dropdownComponent = \"\";\r\n        if (this.state.focus && this.props.dropdownList && this.props.dropdownList.length > 0) {\r\n            dropdownList = this.props.dropdownList;\r\n            // console.log(\"RENDERD HOVER:\", this.state.hoverIndex);\r\n            dropdownComponent = <div className=\"dropdown\">\r\n                {dropdownList.map(\r\n                    (data, i) => {\r\n                        let className = \"dropdown-item\";\r\n                        if (this.state.hoverIndex == i) className = \"dropdown-item-hovered\";\r\n                        return (\r\n                            <div\r\n                                id={stringUtil.uniqueId()}\r\n                                key={\"dropdown-xx-\" + stringUtil.uniqueId()}\r\n                                onClick={() => this.onSelect(data.value, data.text)}\r\n                                className={className}>\r\n                                <DropdownItem onHover={this.onHover} index={i} text={data.text} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        }\r\n\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let inputClassName = \"rounded\";\r\n        return (\r\n            <div\r\n                onMouseOver={() => this.setState({ focus: true })}\r\n                onMouseLeave={this.onBlur}\r\n                className=\"dropdown-wrapper input-field\">\r\n                <input\r\n                    className={inputClassName}\r\n                    onFocus={() => this.setState({ focus: true })}\r\n                    id={this.props.id}\r\n                    type=\"text\"\r\n                    onKeyUp={this.handleKeyup}\r\n                    placeholder={placeholder} />\r\n                {dropdownComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default InputDropdown;","import React, { Component } from 'react'\r\nimport '../../css/Input.css'\r\nimport '../../css/Common.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport * as url from '../../constant/Url'\r\nimport ActionButton from '../buttons/ActionButton'\r\n\r\nclass InputFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            base64Data: null\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            componentUtil.toBase64(e.target, this, function (result, referer) {\r\n                referer.setState({ base64Data: result });\r\n\r\n            });\r\n        }\r\n\r\n        this.removeImage = () => {\r\n            if(this.props.removeImage){\r\n                this.props.removeImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.base64Data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let displayImage = null;\r\n        if (this.state.base64Data) {\r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.state.base64Data} width=\"60\" height=\"60\" />\r\n            </div>;\r\n        }\r\n        if (this.props.value && this.props.value.trim() != \"\") {\r\n            \r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.props.value} width=\"60\" height=\"60\" />\r\n                <ActionButton text=\"cancel\" status=\"danger\" onClick={this.removeImage} />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field\" >\r\n                <input accept=\"image/*\" onChange={this.onChange} type=\"file\" key={\"input_file_\" + stringUtil.uniqueId()} />\r\n                {displayImage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFile;\r\n\r\n","import React, { Component } from 'react';\r\nimport * as url from '../../constant/Url'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InputFile from './InputFile';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFileMultiple extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAddMoreFile = () => {\r\n            if(this.props.addMoreImage){\r\n                this.props.addMoreImage();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let inputFields = [];\r\n        if (this.props.inputFilesData) {\r\n            inputFields = this.props.inputFilesData;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {inputFields.map(\r\n                    inputFileData => {\r\n                        let value = inputFileData.value;\r\n                        return (\r\n                            <InputFile\r\n                                key={stringUtil.uniqueId() + \"_multiple_file_item\"}\r\n                                onChange={(base64) => {\r\n                                    if (inputFileData.onChange)\r\n                                        inputFileData.onChange(base64)\r\n                                }}\r\n                                value={value && value.includes(\"base64\") ? value : value ?\r\n                                    url.baseImageUrl + value : null}\r\n                                id={inputFileData.inputId}\r\n                                removeImage={() => {\r\n                                    if (inputFileData.removeImage)\r\n                                        inputFileData.removeImage()\r\n                                }\r\n                                }\r\n\r\n                            />\r\n                        )\r\n                    }\r\n                )}\r\n                <ActionButton text=\"add more\" onClick={this.handleAddMoreFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFileMultiple;","import React, { Component } from 'react'\r\nimport '../../css/Entity.css'\r\nimport '../../css/Common.css'\r\nimport Label from '../Label'\r\nimport InputDropdown from '../input/InputDropdown'\r\nimport ComboBox from '../input/ComboBox'\r\nimport InputField from '../input/InputField';\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport InputFile from '../input/InputFile'\r\nimport * as url from '../../constant/Url'\r\nimport InputFileMultiple from '../input/InputFileMultiple'\r\n\r\nclass EntityForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            managedEntity: null,\r\n            activeId: null,\r\n            formValues: {},\r\n            dropdownList: {},\r\n            dropdownValues: {},\r\n            selectedEntities: {},\r\n            base64Data: {},\r\n            base64DataMultiple: {},\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * valudate before submit\r\n         */\r\n        this.validateEntity = (entity) => {\r\n            const result = entity;\r\n            for (let key in entity) {\r\n                console.log(key);\r\n                const formDataItem = this.getFormDataItemStartWith(key);\r\n                if (formDataItem) {\r\n                    if (formDataItem.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle single Image\r\n                         */\r\n                        if (entity[key] && !entity[key].includes(\"base64\")) {\r\n                            result[key] = null;\r\n                        }\r\n                    } else if (formDataItem.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle MULTIPLE Image\r\n                         */\r\n\r\n                        if (entity[key]) {\r\n                            let arrayOfValues = entity[key].split(\"~\");\r\n                            let resultValue = new Array();\r\n                            for (let i = 0; i < arrayOfValues.length; i++) {\r\n                                const element = arrayOfValues[i];\r\n                                /**\r\n                                 * if not modified\r\n                                 */\r\n                                if (!this.state.base64DataMultiple[key] ||\r\n                                    !this.state.base64DataMultiple[key][i]) {\r\n                                    resultValue.push(\"{ORIGINAL>>\" + element + \"}\");\r\n                                } else\r\n                                    /**\r\n                                     * if modified\r\n                                     */\r\n                                    if (this.state.base64DataMultiple[key] &&\r\n                                        this.state.base64DataMultiple[key][i]) {\r\n                                        const updatedValue = this.state.base64DataMultiple[key][i];\r\n                                        resultValue.push(\"{ORIGINAL>>\" + element + \"}\" + updatedValue);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            if (this.state.base64DataMultiple[key] && this.state.base64DataMultiple[key].length > arrayOfValues.length) {\r\n                                for (let i = arrayOfValues.length - 1; i < this.state.base64DataMultiple[key].length; i++) {\r\n                                    const element = this.state.base64DataMultiple[key][i];\r\n                                    if (element && element.includes(\"base64\")) {\r\n                                        resultValue.push(element);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (resultValue.length > 0)\r\n                                result[key] = resultValue.join(\"~\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.setState({ updated: new Date() })\r\n        }\r\n\r\n        this.handleSubmit = () => {\r\n            let addFromOtherPage = false;\r\n\r\n            const updateMode = this.props.managedEntity != null && this.props.addNew == false;\r\n            if (updateMode) {\r\n                console.log(\"WILL UPDATE(props):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"update\");\r\n                }\r\n            }else{\r\n                if( this.props.managedEntity != null && this.props.addNew == true){\r\n                    addFromOtherPage = true;\r\n                }\r\n            }\r\n\r\n            const addNewMod = this.state.managedEntity != null;\r\n            if (addNewMod  ) {\r\n                console.log(\"WILL SUBMIT NEW(state):\", this.state.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.state.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n\r\n            /**\r\n             * SPECIAL CASE\r\n             */\r\n\r\n            if ( addFromOtherPage) {\r\n                console.log(\"WILL SUBMIT NEW(SPECIAL CASE):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n            this.clear();\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.onKeyUp = (value, id, propName) => {\r\n            this.setState({ activeId: id });\r\n            this.updateSelectedEntity(propName, value);\r\n\r\n        }\r\n\r\n        this.clear = () => {\r\n            this.setState({\r\n                managedEntity: null,\r\n                dropdownList: {},\r\n                dropdownValues: {},\r\n                selectedEntities: {},\r\n                base64Data: {},\r\n                base64DataMultiple: {}\r\n            });\r\n            if (this.props.removeManagedEntity) {\r\n                this.props.removeManagedEntity();\r\n            }\r\n        }\r\n\r\n        this.populateDropdown = (entityname, fieldname, fieldvalue) => {\r\n            const request = {\r\n                entityName: entityname,\r\n                fieldName: fieldname.split(\".\")[1],\r\n                fieldValue: fieldvalue\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"DATA FOR DROPDOWN: \", data);\r\n            });\r\n\r\n        }\r\n\r\n        this.onKeyUpDynamicDropdown = (value, id, propName, reffEntity) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            const request = {\r\n                entityName: reffEntity,\r\n                fieldName: 'name',\r\n                fieldValue: value\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"LIST FOR DROPDOWN: \", data.entities)\r\n                referer.populateDropdownValues(data.entities, propName);\r\n            });\r\n            let currentDropdownValue = this.state.dropdownValues;\r\n            currentDropdownValue[propName] = value;\r\n            this.setState({ activeId: id, dropdownValues: currentDropdownValue });\r\n        }\r\n\r\n        this.populateDropdownValues = (entities, propName) => {\r\n            console.log(\"ENTITIES:\", entities)\r\n            let options = new Array();\r\n            const formDataItem = this.getFormDataItem(propName);\r\n            if (null == formDataItem) {\r\n                console.log(\"FORM DATA NOT FOUND\");\r\n                return;\r\n            }\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                options.push({\r\n                    value: entity[formDataItem.idField],\r\n                    text: entity[formDataItem.displayField],\r\n                    entity: entity\r\n                })\r\n            }\r\n            let currentDropdownList = this.state.dropdownList;\r\n            currentDropdownList[propName] = options;\r\n            //  this.setState({ dropdownList: currentDropdownList })\r\n            return options;\r\n        }\r\n\r\n        this.getSelectedDropdownItem = (value, propName) => {\r\n            if (this.state.dropdownList[propName] == null) {\r\n                return null;\r\n            }\r\n            const dropdownList = this.state.dropdownList[propName];\r\n            for (let i = 0; i < dropdownList.length; i++) {\r\n                const option = dropdownList[i];\r\n                if (option.value == value) {\r\n                    return option;\r\n                }\r\n\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getFormDataItem = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.addMoreImage = (propName) => {\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    currentValue = currentValue.trim() + \"~DEFAULT.BMP\";\r\n                    this.updateSelectedEntity(propName, currentValue);\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                let currentValue;\r\n                if (!managedEntity) {\r\n                    managedEntity = {};\r\n                    currentValue = \"\";\r\n                } else\r\n                    currentValue = managedEntity[propName] + \"~\";\r\n                currentValue = currentValue.trim() + \"DEFAULT.BMP\";\r\n                this.updateSelectedEntity(propName, currentValue);\r\n            }\r\n        }\r\n\r\n        this.updateSelectedEntity = (propName, value) => {\r\n            if (this.props.managedEntity) {\r\n                this.props.managedEntity[propName] = value;\r\n                this.refresh();\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) managedEntity = {};\r\n                managedEntity[propName] = value;\r\n                this.setState({ managedEntity: managedEntity });\r\n            }\r\n\r\n        }\r\n\r\n        this.getFormDataItemStartWith = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                    if (formDataItem.name.split(\".\").length > 1) {\r\n                        if (formDataItem.name.split(\".\")[0] == propName) {\r\n                            return formDataItem;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.handleRemoveImage = (propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = null;\r\n\r\n            this.updateSelectedEntity(propName, null);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64Image = (base64, propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = base64;\r\n\r\n            this.updateSelectedEntity(propName, base64);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64MultipleImage = function (base64, propNameRaw, i) {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = base64;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n        }\r\n\r\n        this.removeElementAtPosition = (array, index) => {\r\n            let result = new Array();\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (i != index) {\r\n                    result.push(array[i])\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.handleRemoveMultipleImage = (propNameRaw, i) => {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = null;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity; \r\n                if (!managedEntity) {\r\n                    return;\r\n                }\r\n                let currentValue = managedEntity[propName];\r\n                if(currentValue){\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.selectFromDynamicDropdown = (value, propName) => {\r\n            console.log(propName, \":\", value);\r\n            const currentDropdownList = this.state.dropdownList;\r\n            const dropdownValues = this.state.dropdownValues;\r\n            const selectedEntities = this.state.selectedEntities;\r\n\r\n            const selectedOption = this.getSelectedDropdownItem(value, propName);\r\n            if (null == selectedOption) {\r\n                return;\r\n            }\r\n\r\n            dropdownValues[propName] = selectedOption.text;\r\n            currentDropdownList[propName] = [];\r\n            selectedEntities[propName] = selectedOption.entity;\r\n\r\n            /**\r\n             * time to modify entity\r\n             */\r\n            const displayPropName = propName.split(\".\")[0];\r\n\r\n            this.updateSelectedEntity(displayPropName, selectedOption.entity);\r\n            this.setState({ activeId: null, dropdownList: currentDropdownList, dropdownValues: dropdownValues, selectedEntities: selectedEntities });\r\n        }\r\n\r\n        this.handleStaticDropdownChange = (value, propName) =>{\r\n            \r\n            this.updateSelectedEntity(propName, value);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        let formData = this.props.entityConfig && this.props.entityConfig.formData ? this.props.entityConfig.formData : [];\r\n\r\n        const entityExist = this.props.managedEntity != null || this.state.managedEntity;\r\n\r\n\r\n        let actionButtons = null;\r\n        if(!this.props.entityConfig.disabled){\r\n            actionButtons  =   <ActionButtons buttonsData={[\r\n                {\r\n                    text: this.props.managedEntity && this.props.addNew == false ? \"Update\" : \"Add Record\",\r\n                    onClick: this.handleSubmit,\r\n                    status:\"success\"\r\n                },\r\n                {\r\n                    text: \"Clear\",\r\n                    status:\"warning\",\r\n                    onClick: this.clear\r\n                }\r\n            ]} />;\r\n        }\r\n\r\n        let formFields = <div className=\"entity-form  \">\r\n            {formData.map(\r\n                data => {\r\n                    const parentPropName = data.name.split(\".\")[0];\r\n                    let value = null;\r\n                    if (entityExist) {\r\n                        const entity = this.props.managedEntity ? this.props.managedEntity : this.state.managedEntity;\r\n                        const propName = data.name;\r\n\r\n                        if (propName.split(\".\").length > 1 && this.state.activeId != \"input-for-\" + data.name) {\r\n                            const valueAsObject = entity[propName.split(\".\")[0]];\r\n                            const objectPropName = propName.split(\".\")[1];\r\n\r\n                            value = valueAsObject ? valueAsObject[objectPropName] : null;\r\n                        } else {\r\n                            value = entity[propName];\r\n                        }\r\n                    }\r\n\r\n                    let inputComponent = null;\r\n                    const inputId = \"input-for-\" + data.name;\r\n\r\n                    if (data.inputType == \"dynamicDropdown\") {\r\n                        /**\r\n                         * if dynamic dropDown\r\n                         */\r\n\r\n                        if (null == value) {\r\n                            value = this.state.dropdownValues[data.name]\r\n                        }\r\n\r\n                        inputComponent = <InputDropdown\r\n                            onSelect={(value) => this.selectFromDynamicDropdown(value, data.name)}\r\n                            id={inputId}\r\n                            placeholder={data.lableName}\r\n                            value={value}\r\n                            dropdownList={this.state.dropdownList[data.name]}\r\n                            onKeyUp={(value, id) => { this.onKeyUpDynamicDropdown(value, id, data.name, data.reffEntity) }} />\r\n\r\n                    } else  if (data.inputType == \"staticDropDown\") {\r\n                        /**\r\n                         * if static drop down\r\n                         */\r\n                        console.log(\"STATIC DROPDOWN VALUE: \",value);\r\n                        inputComponent = <ComboBox \r\n                             defaultValue={new String(value)}\r\n                            onChange={(val)=>this.handleStaticDropdownChange(val,data.name)}\r\n                            options={data.options} id={stringUtil.uniqueId()}\r\n                         />\r\n\r\n                    } else if (data.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle image single\r\n                         */\r\n                        inputComponent = <InputFile\r\n                            onChange={(base64) => this.handleChangeBase64Image(base64, data.name)}\r\n                            value={value && value.includes(\"base64\") ? value : value ? url.baseImageUrl + value : null}\r\n                            id={inputId}\r\n                            removeImage={() => this.handleRemoveImage(data.name)}\r\n\r\n                        />\r\n\r\n                    } else if (data.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle multiple single\r\n                         */\r\n                        let valueSplit = value ? value.split(\"~\") : [];\r\n\r\n                        let imagesData = new Array();\r\n                        for (let i = 0; i < valueSplit.length; i++) {\r\n                            let valueSplitItem = valueSplit[i];\r\n                            if (this.state.base64DataMultiple[parentPropName] &&\r\n                                this.state.base64DataMultiple[parentPropName][i]\r\n                                && this.state.base64DataMultiple[parentPropName][i].includes(\"base64\")) {\r\n                                valueSplitItem = this.state.base64DataMultiple[parentPropName][i];\r\n                            }\r\n                            imagesData.push({\r\n                                value: valueSplitItem,\r\n                                onChange: (base64) => {\r\n                                    this.handleChangeBase64MultipleImage(base64, data.name, i);\r\n                                },\r\n                                removeImage: () => this.handleRemoveMultipleImage(data.name, i)\r\n\r\n                            })\r\n                        }\r\n                        inputComponent = <InputFileMultiple\r\n                            addMoreImage={() => this.addMoreImage(data.name)}\r\n                            inputFilesData={imagesData}\r\n\r\n                        />\r\n                    }\r\n\r\n                    else {\r\n                        /**\r\n                         * regular\r\n                         */\r\n                        inputComponent = <InputField\r\n                            onKeyUp={(value, id) => { this.onKeyUp(value, id, data.name) }}\r\n                            id={inputId} value={value}\r\n                            type={data.inputType} placeholder={data.lableName} />;\r\n                    }\r\n\r\n                    return (\r\n                        <div key={\"FORM-FIELD-\" + stringUtil.uniqueId()}>\r\n                            <Label text={data.lableName} />\r\n                            {inputComponent}\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n\r\n            {actionButtons}                \r\n        </div>\r\n\r\n        return (\r\n            <div className=\"entity-form-wrapper\">\r\n                {formFields}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntitiesWithCallback: (request, referer, callback) => dispatch(actions.getEntitiesWithCallback(request, referer, callback)),\r\n\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EntityForm))","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport '../../css/Management.css'\r\nimport '../../css/Entity.css'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport InputField from '../input/InputField'\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport EntityForm from './EntityForm';\r\nimport * as url from '../../constant/Url'\r\nimport Label from '../Label'\r\nimport GridComponent from '../layout/GridComponent'\r\n\r\nclass EntityList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: {},\r\n            activeId: null,\r\n            orderBy: null,\r\n            orderType: null\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are your sure for deleting this entity?\")) { return; }\r\n            console.log(\"Will DELETE: \", id)\r\n        }\r\n        this.handleEdit = (id) => {\r\n            this.getEntityById(id);\r\n        }\r\n        this.getHeaderNames = (fieldNames) => {\r\n            const headers = [];\r\n\r\n            if (fieldNames == null) {\r\n                this.props.backToDashboard();\r\n\r\n            } else\r\n\r\n                for (let i = 0; i < fieldNames.length; i++) {\r\n                    const name = fieldNames[i];\r\n                    let headerName = name.name;\r\n                    if (headerName.split(\".\").length > 1) {\r\n                        headerName = headerName.split(\".\")[0];\r\n                    }\r\n                    headers.push(headerName.toUpperCase());\r\n                }\r\n            headers.push(\"OPTION\");\r\n            return headers;\r\n        }\r\n\r\n        this.goToPage = (page, orderObject) => {\r\n            if (page > this.props.entitiesData.totalData / 10) {\r\n                page = 0;\r\n            }\r\n            if (page < 0) {\r\n                page = Math.ceil(this.props.entitiesData.totalData / 10 - 1);\r\n            }\r\n\r\n            let config = this.props.entityConfig;\r\n            config.filter = this.state.filter;\r\n            if (orderObject != null) {\r\n                config.orderBy = orderObject.orderBy;\r\n                config.orderType = orderObject.orderType;\r\n                this.setState({ orderBy: orderObject.orderBy, orderType: orderObject.orderType });\r\n            }\r\n\r\n            this.props.getEntityInPage(config, page);\r\n\r\n        }\r\n\r\n        this.getEntityById = (id) => {\r\n            const config = this.props.entityConfig;\r\n            if (config == null) {\r\n                alert(\"Config Not Found!\");\r\n                return;\r\n            }\r\n\r\n            this.props.getEntityById(config.entityName, id);\r\n        }\r\n\r\n        this.createNavButtons = () => {\r\n            let displayedButtons = componentUtil.createNavButtons(this.props.entitiesData.totalData / 10, this.props.currentPage);\r\n            return displayedButtons;\r\n        }\r\n\r\n        this.setOrderBy = (fieldName, orderType) => {\r\n            this.goToPage(this.props.currentPage, { orderBy: fieldName, orderType: orderType });\r\n        }\r\n\r\n        this.createFilterInputs = (fieldNames) => {\r\n            let inputs = new Array();\r\n\r\n            if (!fieldNames) {\r\n                return inputs;\r\n            }\r\n\r\n            for (let i = 0; i < fieldNames.length; i++) {\r\n                const fieldName = fieldNames[i];\r\n                let headerName = fieldName.name;\r\n                if (headerName.split(\".\").length > 1) {\r\n                    headerName = headerName.split(\".\")[0];\r\n                }\r\n\r\n                let value = \"\";\r\n\r\n                if (this.state.filter[headerName] != null) {\r\n                    value = this.state.filter[headerName];\r\n\r\n                }\r\n\r\n                let input = <InputField value={value} id={headerName + \"_filter_id\"}\r\n                    onKeyUp={this.handleFilterChange} key={\"input_field_\" + stringUtil.uniqueId()}\r\n                    placeholder={headerName} />\r\n\r\n                if (fieldName.type == \"date\") {\r\n                    const valueDay = this.state.filter[headerName + \"-day\"];\r\n                    const valueMonth = this.state.filter[headerName + \"-month\"];\r\n                    const valueYear = this.state.filter[headerName + \"-year\"];\r\n\r\n                    const inputDay = <InputField value={valueDay} id={headerName + \"-day_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_d\" + stringUtil.uniqueId()}\r\n                        placeholder={\"day\"} />;\r\n                    const inputMonth = <InputField value={valueMonth} id={headerName + \"-month_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_m\" + stringUtil.uniqueId()}\r\n                        placeholder={\"month\"} />;\r\n                    const inputYear = <InputField value={valueYear} id={headerName + \"-year_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_y\" + stringUtil.uniqueId()}\r\n                        placeholder={\"year\"} />;\r\n\r\n                    input = <GridComponent width=\"50px\" items={[inputDay, inputMonth, inputYear]} />\r\n                }\r\n\r\n\r\n                let orderType = \"asc\";\r\n                if (this.state.orderBy && this.state.orderBy == headerName) {\r\n                    if (this.state.orderType == \"asc\") {\r\n                        orderType = \"desc\";\r\n                    }\r\n                }\r\n\r\n\r\n                const orderButton = <ActionButton\r\n                    onClick={() => { this.setOrderBy(headerName, orderType) }}\r\n                    text={orderType} />\r\n\r\n                inputs.push(<div className=\"filter-wrapper\">\r\n                    {input}{orderButton}\r\n                </div>);\r\n            }\r\n            inputs.push(\"\");\r\n            return inputs;\r\n        }\r\n\r\n        this.handleFilterChange = (value, id) => {\r\n\r\n            let filter = this.state.filter;\r\n            if (value != null && value.trim() == \"\") {\r\n                filter[id.split(\"_filter_id\")[0]] = null;\r\n\r\n            } else {\r\n                filter[id.split(\"_filter_id\")[0]] = value;\r\n\r\n            }\r\n\r\n            this.setState({ filter: filter, activeId: id });\r\n            this.goToPage(this.props.currentPage);\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        const entitiesData = this.props.entitiesData;\r\n        const entityConfig = this.props.entityConfig;\r\n        console.log(\"1\");\r\n        if (null == entitiesData || null == entityConfig) {\r\n            return (<h2>Please Select One Of Menu</h2>)\r\n        }\r\n\r\n\r\n        if (null == entitiesData.entities) {\r\n            entitiesData.entities = [];\r\n        }\r\n\r\n        const rows = [\r\n            //header\r\n            {\r\n                values: this.getHeaderNames(entityConfig.fieldNames),\r\n                disabled: true,\r\n                style: { textAlign: 'center', fontWeight: 'bold' }\r\n            },\r\n            //filter\r\n            {\r\n                values: this.createFilterInputs(entityConfig.fieldNames),\r\n                disabled: true\r\n            }\r\n        ];\r\n\r\n\r\n        const entities = entitiesData.entities;\r\n        const idField = entityConfig.id;\r\n\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const entity = entities[i];\r\n            let rowValues = [];\r\n            for (let j = 0; j < entityConfig.fieldNames.length; j++) {\r\n                const fieldItem = entityConfig.fieldNames[j];\r\n                let entityProp = fieldItem.name;\r\n                let object = false\r\n\r\n                if (entityProp.split(\".\").length > 1) {\r\n                    entityProp = entityProp.split(\".\")[0];\r\n                    object = true;\r\n                }\r\n\r\n                let entityValue = entity[entityProp];\r\n                if (fieldItem.type) {\r\n                    if (fieldItem.type == \"number\") {\r\n                        entityValue = stringUtil.beautifyNominal(entityValue);\r\n                    } else if (fieldItem.type == \"link\") {\r\n                        entityValue = <a href={entityValue}><u>{entityValue}</u></a>\r\n                    } else if (fieldItem.type == \"image\") {\r\n                        entityValue = <img width=\"60\" height=\"60\" alt={url.baseImageUrl + entityValue} src={url.baseImageUrl + entityValue} />\r\n                    } else if (fieldItem.type == \"imageMultiple\") {\r\n                        let imgName = entityValue.split(\"~\")[0];\r\n\r\n                        entityValue = <img width=\"60\" height=\"60\" src={url.baseImageUrl + imgName} />\r\n                    } else if (fieldItem.type == \"longDate\") {\r\n                        const dateStr = new Date(entityValue).toDateString();\r\n                        entityValue = <Label text={dateStr} />;\r\n                    } else if (fieldItem.type == \"staticDropdown\") {\r\n                        const options = fieldItem.options;\r\n\r\n                        options.forEach(opt => {\r\n                            if (opt.value == entityValue) {\r\n                                entityValue = opt.text;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                rowValues.push(object && entityValue ? entityValue[fieldItem.name.split(\".\")[1]] : entityValue);\r\n            }\r\n\r\n            rows.push(\r\n                {\r\n                    identifier: entity[idField],\r\n                    values: rowValues,\r\n                    handleDelete: this.handleDelete,\r\n                    handleEdit: this.handleEdit,\r\n                    disabled: entityConfig.disabled == true ? true : false\r\n                }\r\n            )\r\n        }\r\n\r\n        const buttonsData = this.createNavButtons();\r\n        const fixButtonData = new Array();\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + -1) },\r\n            text: 'previous'\r\n        })\r\n\r\n        for (let i = 0; i < buttonsData.length; i++) {\r\n            buttonsData[i].onClick = () => { this.goToPage(buttonsData[i].value) }\r\n            if (buttonsData[i].value == this.props.currentPage) {\r\n                buttonsData[i].status = \" btn-active\";\r\n            }\r\n            buttonsData[i].text = buttonsData[i].text;\r\n\r\n\r\n            fixButtonData.push(buttonsData[i]);\r\n        }\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + 1) },\r\n            text: 'next'\r\n        });\r\n\r\n        let navButtons = <ActionButtons style={{\r\n            backgroundColor: 'white',\r\n            paddingTop: '15px',\r\n            margin: '10px'\r\n        }} buttonsData={fixButtonData} />\r\n\r\n        let entityTable = <div className=\"entity-list-container\">\r\n\r\n            <InstantTable\r\n                style={{\r\n                    width: \"100%\",\r\n                    margin: \"5px\",\r\n                }}\r\n                rows={rows} />\r\n        </div>\r\n\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <div className=\"entity-container\">\r\n                    <div style={{\r\n                        backgroundColor: 'white',\r\n                        margin: '10px'\r\n                    }} > </div>\r\n                    {navButtons}\r\n                    <div className=\"entityForm\">\r\n                        <EntityForm\r\n                            addNew={this.props.addNew}\r\n                            app={this.props.app}\r\n                            updateEntity={this.props.updateEntity}\r\n                            removeManagedEntity={this.props.removeManagedEntity}\r\n                            managedEntity={this.props.managedEntity}\r\n                            entityConfig={entityConfig} />\r\n                    </div>\r\n                    {entityTable}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntityList;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Management.css'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ContentTitle from '../layout/ContentTitle'\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport EntityList from './EntityList';\r\nimport Tab from '../buttons/Tab';\r\n\r\nclass Management extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entityList: [],\r\n            currentPage: 0,\r\n            entityConfig: { entityName: \"main\" }\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n\r\n        this.backToDashboard = () => {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.getEntityInPage(this.state.entityConfig, this.state.currentPage);\r\n        }\r\n\r\n        this.loadEntityManagement = (config) => {\r\n            this.props.removeManagedEntity();\r\n\r\n            this.setState({ currentPage: 0, entityConfig: config });\r\n\r\n            this.props.setEntityConfig(config);\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n        }\r\n\r\n        this.gotoMainPage = () => {\r\n            this.props.resetManagementPage();\r\n            this.setState({ currentPage: 0, entityConfig: { entityName: \"main\" } });\r\n        }\r\n\r\n        this.getEntityInPage = (config, page) => {\r\n            this.setState({ currentPage: page });\r\n\r\n            const request = {\r\n                entityName: config.entityName,\r\n                page: page,\r\n                limit: 10,\r\n                entityConfig: config,\r\n                fieldsFilter: config.filter,\r\n                orderBy: config.orderBy,\r\n                orderType: config.orderType,\r\n            };\r\n\r\n            console.log(\"REQUEST: \", request)\r\n\r\n            this.props.getEntities(request, this.props.app);\r\n        }\r\n\r\n        this.checkIfCurrentMenuName = (name) => {\r\n            return this.state.entityConfig.entityName == name;\r\n        }\r\n\r\n        this.getButtonsData = () => {\r\n            return [\r\n                {\r\n                    text: \"#\",\r\n                    active: this.checkIfCurrentMenuName(\"main\"),\r\n                    onClick: () => { this.gotoMainPage() }\r\n                },\r\n                {\r\n                    text: \"Badan Pengurus\",\r\n                    active: this.checkIfCurrentMenuName(\"division\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.divisionConfig) }\r\n                },\r\n                {\r\n                    text: \"Divisi\",\r\n                    active: this.checkIfCurrentMenuName(\"section\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.sectionConfig) }\r\n                },\r\n                {\r\n                    text: \"Program Kerja\",\r\n                    active: this.checkIfCurrentMenuName(\"program\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.programConfig) }\r\n                },\r\n                {\r\n                    text: \"Kegiatan\",\r\n                    active: this.checkIfCurrentMenuName(\"event\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.eventConfig) }\r\n                },\r\n                {\r\n                    text: \"Posisi\",\r\n                    active: this.checkIfCurrentMenuName(\"position\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.positionConfig) }\r\n                },\r\n                {\r\n                    text: \"Anggota\",\r\n                    active: this.checkIfCurrentMenuName(\"member\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.memberConfig) }\r\n                },\r\n            ];\r\n        }\r\n\r\n        this.updateEntity = (name, entity, flag) => {\r\n            if (!window.confirm(\"Are you sure will update \" + name + \"?\")) {\r\n                return;\r\n            }\r\n\r\n            let newRecord = flag == \"addNew\";\r\n\r\n            this.props.updateEntity({ entityName: name, entity: entity, isNewRecord: newRecord }, this, function (ref) {\r\n                console.log(\"WILL CALLBACK\");\r\n                ref.callbackHandleUpdate();\r\n            });\r\n        }\r\n\r\n        this.getEntityById = (name, id) => {\r\n            this.props.getEntityById(name, id, this.props.app);\r\n        }\r\n        this.removeManagedEntity = () => {\r\n            this.props.removeManagedEntity();\r\n        }\r\n\r\n        this.callbackHandleUpdate = () => {\r\n            this.refresh();\r\n            this.removeManagedEntity();\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Management\";\r\n        this.props.setMenuCode(\"management\");\r\n    }\r\n\r\n    render() {\r\n        console.log(\"managedEntity: \", this.props.managedEntity);\r\n      \r\n\r\n        let entityList = this.props.entitiesData ? this.props.entitiesData.entities : [];\r\n        if (null == entityList) { entityList = []; }\r\n\r\n        let buttonsData = this.getButtonsData();\r\n\r\n        let content = <h2>Content</h2>\r\n\r\n        if (this.props.entitiesData.entityConfig == null) {\r\n            content = <div>\r\n                <h2>{\"Management Page\"}\r\n                </h2></div>\r\n        } else {\r\n            content = <EntityList currentPage={this.state.currentPage}\r\n                app={this.props.app}\r\n                getEntityInPage={this.getEntityInPage}\r\n                entityConfig={this.props.entitiesData.entityConfig}\r\n                entitiesData={this.props.entitiesData}\r\n                managedEntity={this.props.managedEntity}\r\n                getEntityById={this.getEntityById}\r\n                removeManagedEntity={this.removeManagedEntity}\r\n                updateEntity={this.updateEntity}\r\n                addNew={this.props.addNew}\r\n                backToDashboard={this.backToDashboard}\r\n            />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title={\"Management \" + (this.state.entityConfig.title ?\r\n                    this.state.entityConfig.title :\r\n                    this.props.entitiesData && this.props.entitiesData.entityConfig ?\r\n                        this.props.entitiesData.entityConfig.title : \"\")}\r\n\r\n                    description=\"master data management console\" />\r\n                <div className=\"management-container\">\r\n                    <Tab tabsData={buttonsData} />\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        entitiesData: state.managementState.entitiesData,\r\n        managedEntity: state.managementState.managedEntity,\r\n        addNew: state.managementState.addNew\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setEntityConfig:(config)=>dispatch(actions.setEntityConfig(config)),\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEntityById: (name, id, app) => {\r\n        let action = actions.getEntityById(name, id, app);\r\n        dispatch(action);\r\n    },\r\n    resetManagementPage : () =>dispatch(actions.resetManagementPage()),\r\n    removeManagedEntity: () => dispatch(actions.removeManagedEntity()),\r\n    updateEntity: (request, referer, callback) => dispatch(actions.updateEntity(request, referer, callback))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Management))","\nimport React, { Component } from 'react'; \nimport './App.css';\n\nimport Header from './components/layout/Header'\nimport Menu from './components/buttons/Menu'\nimport Home from './components/pages/Home'\nimport About from './components/pages/About'\nimport {  Route, Link, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'  \nimport Login from './components/pages/Login';\nimport Dashboard from './components/pages/Dashboard';\nimport * as menus from './constant/Menus'\nimport Message from './components/Message';\nimport Footer from './components/layout/Footer';\nimport SockJsClient from 'react-stomp';\nimport ChatRoom from './components/pages/ChatRoom';\nimport Management from './components/pages/Management'; \n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      detailMode: false,\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      enableShopping: false,\n      mainAppUpdated:new Date()\n    };\n\n    this.setDetailMode = (detailMode) => {\n      this.setState({ detailMode: detailMode });\n    }\n\n    this.setMenuCode = (code) => { \n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.setEnableShopping = (val) => {\n      this.setState({ enableShopping: val })\n    }\n\n    this.handleMenuCLick = (menu) => {\n      switch (menu.code) {\n\n        case menus.LOGOUT:\n          if (!window.confirm(\"Are you sure want to logout?\")) {\n            return;\n          }\n          this.props.performLogout(this);\n          break;\n\n        default:\n          break;\n      }\n\n\n    }\n\n\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n\n    this.startLoading = (realtime) => {\n      this.setState({ loading: true, realtime: realtime });\n    }\n    this.endLoading = () => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }\n\n    this.handleMessage = (msg) => {\n      let percentage = Math.floor(msg.percentage);\n      if (msg.percentage < 0 || msg.percentage > 100) {\n        this.endLoading();\n      }\n      this.setState({ loadingPercentage: percentage });\n    }\n  }\n\n\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      localStorage.setItem(\"requestId\", this.props.requestId);\n      this.props.refreshLogin();\n    }\n\n    console.log(\"componentDidUpdate LOGIN USER: \",this.props.loggedUser)\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    let additionalMenus = this.props.menus\n    let menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      let menu = additionalMenus[i];\n\n      if(!this.state.enableShopping && menu.code == 'cart')\n        continue;\n\n      if (this.props.loginStatus != true && menu.authenticated == true)\n        continue;\n\n      menus.push(menu);\n\n    }\n \n    return menus;\n\n  }\n\n  render() {\n\n    const header =  <Header app={this} title=\"MPI Monitoring\"   />;\n\n    if (!this.state.requestId) {\n      return (\n        <div>\n          {header}\n          Please wait..\n        </div>\n      )\n    }\n\n    let loginComponent = <Login main={this} setMenuCode={this.setMenuCode}\n      setDetailMode={this.setDetailMode}\n      detailMode={this.state.detailMode}\n      doLogin={this.props.performLogin}\n      loginFailed={this.props.loginFailed}\n      loginAttempt={this.props.loginAttempt}\n      loginStatus={this.props.loginStatus}\n    />;\n\n    let loadingComponent = \"\";\n    if (this.state.loading == true) {\n      loadingComponent = <Message realtime={this.state.realtime} progress={this.state.loadingPercentage} text=\"Please wait...\" type=\"loading\" />;\n    }\n\n    let menus = this.setMenus();\n \n    let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\n    let localHost = \"http://localhost:8080/universal-good-shop/\";\n    const usedHost = localHost;\n    return (\n      <div className=\"App\">\n        {loadingComponent}\n        {header}\n        {/*this.props.loginStatus == true?\"Logged In\":\"Un Logged\"*/}\n      \n        <div id=\"main-layout\">\n          <div id=\"main-menu\">\n            <Menu loggedUser={this.props.loggedUser}\n              division = {this.props.division}\n              handleMenuCLick={this.handleMenuCLick}\n              activeCode={this.state.menuCode}\n              menus={menus} />\n          </div>\n         \n          <div id=\"main-content\" > \n            <Switch>\n              <Route exact path=\"/\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is default page\" />\n              } />\n              <Route exact path=\"/home\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is home page\" />\n              } />\n              \n              <Route exact path=\"/chatroom\" render={\n                (renderProps) =>\n                  <ChatRoom app={this} setMenuCode={this.setMenuCode} />\n              } />\n              <Route exact path=\"/about\" render={\n                (renderProps) =>\n                  <About setMenuCode={this.setMenuCode} />\n              }></Route>\n               \n               <Route exact path=\"/login\" render={\n                (renderProps) => loginComponent\n\n              }></Route>\n\n              {/*\n                     =============================\n                     ======== need login =========\n                     =============================\n                     */}\n              <Route exact path=\"/dashboard\" render={\n                (renderProps) =>\n                  <Dashboard app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n               <Route exact path=\"/management\" render={\n                (renderProps) =>\n                  <Management app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n            </Switch>\n           \n          </div>\n         \n        </div>\n        <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/progress']}\n          onMessage={(msg) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    entities: state.shopState.entities,\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    loginKey: state.userState.loginStatus,\n    loginFailed: state.userState.loginFailed,\n    menus: state.userState.menus,\n    loggedUser: state.userState.loggedUser,\n    loginAttempt: state.userState.loginAttempt,\n    requestId: state.userState.requestId,\n    division: state.userState.division,\n    cart: state.shopState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogin: (username, password, app) => dispatch(actions.performLogin(username, password, app)),\n  performLogout: (app) => dispatch(actions.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus())\n  // getProductCatalog: (page) => dispatch(actions.getProductList(page))\n\n})\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = {\r\n    catalogData: {},\r\n    entities: [],\r\n    entity: {},\r\n    categories: [],\r\n    suppliersData: [], \r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_PRODUCT_LIST:\r\n            return { ...state, catalogData: action.payload };\r\n        case types.FETCH_PRODUCT_DETAIL:\r\n            return { ...state, entity: action.payload.entities[0] };\r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ };\r\n        case types.FETCH_SUPPLIER_LIST:\r\n            return { ...state, suppliersData: action.payload };\r\n        case types.RESET_SUPPLIERS:\r\n            return { ...state, suppliersData: {} };\r\n        case types.LOAD_MORE_SUPPLIER:\r\n            let currentProduct = state.entity;\r\n            let loadedSupplier = action.payload.entities;\r\n            for (let index = 0; index < loadedSupplier.length; index++) {\r\n                currentProduct.suppliers.push(loadedSupplier[index]);\r\n            }\r\n            console.info(\"additinal suppliers: \", currentProduct.suppliers);\r\n            action.referrer.refresh();\r\n            return { ...state, entity: currentProduct };\r\n        case types.FETCH_PRODUCT_CATEGORIES_ALL:\r\n            return { ...state, categories: action.payload.entities };\r\n      \r\n        case types.SEND_MESSAGE:\r\n            return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.UPDATE_CART:\r\n            if (action.payload.app) {\r\n                action.payload.app.refresh();\r\n            }\r\n            return { ...state, cart: action.payload.cart };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nexport const menus = [\r\n  {\r\n    code:\"home\",\r\n    name:\"Home\",\r\n    url:\"home\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"catalog\",\r\n    name:\"Catalog\",\r\n    url:\"catalog\",\r\n    active: false,\r\n     authenticated: false\r\n  } ,\r\n  {\r\n    code:\"about\",\r\n    name:\"About\",\r\n    url:\"about\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"chatroom\",\r\n    name:\"Chat Room\",\r\n    url:\"chatroom\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"login\",\r\n    name:\"Login\",\r\n    url:\"login\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"dashboard\",\r\n    name:\"Dashboard\",\r\n    url:\"dashboard\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"management\",\r\n    name:\"Management\",\r\n    url:\"management\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"logout\",\r\n    name:\"Logout\",\r\n    url:\"#\",\r\n    active: false,\r\n    authenticated: true\r\n  }\r\n];\r\n","import * as types from './types'\r\nimport * as menus from '../utils/HardCodedEntites'\r\nimport * as menuCodes from '../constant/Menus'\r\nimport { initialState } from './reducers';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menus.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    divisions: null,\r\n    division: null,\r\n    requestId: null\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    let updatedMenus = new Array();\r\n    if (action.payload) {\r\n\r\n        let loggedIn = action.payload && action.payload.loginStatus == true;\r\n        for (let index = 0; index < menus.menus.length; index++) {\r\n            const menu = menus.menus[index];\r\n            if (loggedIn && menu.code == menuCodes.LOGIN) { continue; }\r\n\r\n            if (menu.authenticated == false) {\r\n                updatedMenus.push(menu);\r\n            } else {\r\n                if (loggedIn) { updatedMenus.push(menu); }\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case types.DO_LOGIN:\r\n            let result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                localStorage.setItem(\"loginKey\", result.loginKey);\r\n                localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n                result.divisions = action.payload.divisions\r\n            }\r\n\r\n           \r\n            return result;\r\n        case types.REQUEST_ID:\r\n            result = { ...state, requestId: action.payload.message };\r\n\r\n            if (!action.payload.loggedIn) {\r\n                \r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }else{\r\n                \r\n                if(action.payload.sessionData){\r\n                    \r\n                    result.division = action.payload.sessionData.division;\r\n                    result.loggedUser = action.payload.sessionData.user;\r\n                }\r\n            }\r\n\r\n           \r\n          //  action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                division:null,\r\n                loggedUser: null\r\n            };\r\n            localStorage.removeItem(\"loginKey\");\r\n            localStorage.removeItem(\"loggedUser\");\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n\r\n            return result;\r\n        case types.GET_DIVISIONS:\r\n            if(action.payload.invalidSession != true){\r\n                result = {\r\n                    ...state,\r\n                    divisions: action.payload.divisions,\r\n                }; \r\n            }else{\r\n                result = {\r\n                    ...state,\r\n                    divisions: [],\r\n                    loggedUser: null,\r\n                    loginStatus: false\r\n                };\r\n            }\r\n           \r\n            \r\n            return result;\r\n        case types.SELECT_DIVISION:\r\n            result = {\r\n                ...state,\r\n                division: action.payload.entity,\r\n            };\r\n            return result;\r\n        default:\r\n            if (action.payload && action.payload.loginStatus != null)\r\n                return { ...state, menus: updatedMenus };\r\n            else {\r\n                return { ...state };\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport { nullLiteral } from '@babel/types';\r\n\r\nexport const initState = {\r\n    productFlowStock: null,\r\n    productFlowStocks: null,\r\n    transactionData: null,\r\n    successTransaction: false,\r\n    customersData: null,\r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n\r\n    switch (action.type) { \r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as entityUtil from '../utils/EntityConfigurations'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    events: [],\r\n    addNew: false\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, addNew: false, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, addNew: false, managedEntity: null };\r\n        case types.GET_EVENTS_BY_DATE:\r\n\r\n            if (action.payload.entities)\r\n                return { ...state, events: action.payload.entities };\r\n        case types.ADD_EVENT_FROM_TIMELINE:\r\n\r\n            const eventsData = { entityConfig: entityUtil.eventConfig };\r\n            console.log(\"EVENTS DATA: \", eventsData);\r\n            return {\r\n                ...state, addNew: true, managedEntity: action.payload.entity,\r\n                entitiesData: eventsData\r\n            };\r\n        case types.RESET_MANAGEMENT_PAGE:\r\n\r\n            return initState;\r\n        case types.SET_ENTITY_CONFIG:\r\n            const entitiesData = state.entitiesData;\r\n\r\n            entitiesData.entityConfig = action.payload.entityConfig;\r\n            entitiesData.entities = [];\r\n\r\n            return { ...state, entitiesData: entitiesData };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\"\r\nimport * as managementReducer from \"./managementReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer,\r\n        managementState: managementReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState,\r\n    managementState: managementReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as actionCreator from './actionCreators';\r\nimport * as types from './types';\r\nimport * as config from '../utils/WebConfig'\r\nimport * as stringUtil from '../utils/StringUtil';\r\nimport * as rc from '../constant/ResponseCode'\r\n\r\nconst commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\")\r\n    }\r\n};\r\nconst POST_METHOD = \"POST\";\r\nconst TIMEOUT = 100000;\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            removeEntityMiddleware,\r\n\r\n            //user related\r\n            performLoginMiddleware,\r\n            performLogoutMiddleware,\r\n            refreshLoginStatusMiddleware,\r\n            getDivisionsMiddleware,\r\n\r\n            //transaction   \r\n            selectDivisionMiddleware,\r\n            getEventByDateMiddleware,\r\n            requestAppIdMiddleware,\r\n\r\n            storeChatMessageLocallyMiddleware,\r\n            getMessagesMiddleware,\r\n            sendChatMessageMiddleware,\r\n\r\n            /*enntity management*/\r\n            getEntityListMiddleware,\r\n            getEntityByIdMiddleware,\r\n            updateEntityMiddleware,\r\n            removeManagedEntityMiddleware,\r\n            addEventFromTimelineMiddleware,\r\n            resetManagementPageMiddleware,\r\n            setEntityConfigMiddleware,\r\n\r\n            getEntitiesWithCallbackMiddleware\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\nfunction timeout(ms, promise) {\r\n    return new Promise(function (resolve, reject) {\r\n        setTimeout(function () {\r\n            reject(new Error(\"timeout\"))\r\n        }, ms)\r\n        promise.then(resolve, reject)\r\n    })\r\n}\r\n\r\nconst getEntitiesWithCallbackMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_WITH_CALLBACK) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n\r\n            action.meta.callback(data, action.meta.referer);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst updateEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_ENTITY) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response updateEntityMiddleware:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error Update Entity!\");\r\n                return;\r\n            }\r\n            alert(\"Update Success!\");\r\n            const callback = action.meta.callback;\r\n            const referer = action.meta.referer;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            callback(referer);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityByIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_BY_ID) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                data.entitie = [];\r\n            }\r\n            data.entityConfig = action.meta.entityConfig;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst sendChatMessageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SEND_MESSAGE) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            data.username = action.payload.username;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst addEventFromTimelineMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.ADD_EVENT_FROM_TIMELINE) { return next(action); }\r\n\r\n    let eventEntity = {\r\n        date: stringUtil.dateInputVal(action.payload.day, action.payload.month, action.payload.year)\r\n    };\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entity: eventEntity } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst setEntityConfigMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_ENTITY_CONFIG) { return next(action); }\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entityConfig: action.payload.entityConfig } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst removeManagedEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_MANAGED_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetManagementPageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_MANAGEMENT_PAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n\r\nconst requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = commonAuthorizedHeader();\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            data = (data);\r\n\r\n\r\n\r\n            console.debug(config.debugMode(), \"requestAppIdMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n\r\n            data.referer = action.meta.app;\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.error(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst getEventByDateMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_EVENTS_BY_DATE) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            data = (data);\r\n\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst selectDivisionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SELECT_DIVISION) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"selectDivisionMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getDivisionsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_DIVISIONS) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"getDivisionsMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(data.message);\r\n                if (data.code == rc.CODE_INVALID_SESSION) {\r\n                    data.invalidSession = true;\r\n                } else {\r\n                    if (data.divisions == null) {\r\n                        alert(\"Server Error\")\r\n                        return;\r\n                    }\r\n                    return;\r\n                } \r\n            }\r\n \r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }))\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n            responseJson = (responseJson);\r\n\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            responseJson = (responseJson);\r\n\r\n            let loginKey = \"\";\r\n            let loginSuccess = false;\r\n\r\n            if (responseJson.code != null && responseJson.code == \"00\") {\r\n                for (var pair of response.headers.entries()) {\r\n                    if (pair[0] == \"loginkey\") {\r\n                        loginKey = pair[1];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                loginSuccess = true;\r\n\r\n            }\r\n\r\n            console.log(\"LOGIN SUCCESS: \", loginSuccess);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user,\r\n                    divisions: responseJson.divisions,\r\n                    division: responseJson.sessionData ? responseJson.sessionData.division : null\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    }\r\n\r\n    let loggedUser = null;\r\n    if (localStorage.getItem(\"loggedUser\")) {\r\n        loggedUser = (localStorage.getItem(\"loggedUser\"));\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload: {\r\n            loginStatus: loggedUser ? true : false,\r\n            loginKey: localStorage.getItem(\"loginKey\"),\r\n            loggedUser: JSON.parse(loggedUser)\r\n        }\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\n\r\nexport default configureStore;","export const CODE_INVALID_SESSION = \"02\";","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}