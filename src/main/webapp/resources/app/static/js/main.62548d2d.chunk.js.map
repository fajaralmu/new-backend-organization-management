{"version":3,"sources":["utils/StringUtil.js","components/layout/GridComponent.js","components/buttons/ToggleButton.js","utils/WebConfig.js","components/layout/Header.js","constant/Url.js","components/buttons/Menu.js","constant/Menus.js","components/layout/ContentTitle.js","components/pages/Home.js","components/buttons/ActionButtons.js","components/CrudRow.js","components/layout/InstantTable.js","components/pages/About.js","redux/actionCreators.js","redux/types.js","utils/ComponentUtil.js","components/input/InputField.js","components/buttons/ActionButton.js","components/Label.js","components/Message.js","components/pages/Login.js","components/buttons/Tab.js","components/input/ComboBox.js","components/pages/DashboardMain.js","constant/TimelineConstant.js","components/card/Card.js","components/pages/FullCalendar.js","utils/EntityConfigurations.js","components/pages/Timeline.js","components/pages/Dashboard.js","components/layout/Footer.js","components/pages/LiveStreaming.js","components/pages/ChatRoom.js","components/input/DropdownItem.js","components/input/InputDropdown.js","components/input/InputFile.js","components/input/InputFileMultiple.js","components/pages/EntityForm.js","components/pages/EntityList.js","components/pages/Management.js","App.js","redux/shopReducer.js","utils/HardCodedEntites.js","redux/userReducer.js","redux/managementReducer.js","redux/chatReducer.js","redux/reducers.js","redux/configureStore.js","constant/ResponseCode.js","Root.js","serviceWorker.js","index.js"],"names":["index","uniqueId","string","Date","getUTCMilliseconds","beautifyNominal","val","nominal","result","length","zero","i","isNonNullArrayWithIndex","array","months","GridComponent","props","items","this","width","repeat","cols","gridAutoColumns","msGridAutoColumns","gridColumn","gridRow","className","style","verticalAlign","gridTemplateColumns","msGridColumns","map","item","msGridColumn","msGridRow","key","Component","ToggleButton","state","active","onClick","e","setState","outerClass","innerClass","fontSize","text","debugMode","console","log","localStorage","getItem","Header","handleClick","setItem","app","componentDidMount","isDebugMode","title","rootValue","document","getElementById","value","hostLocal","concat","hostCloud","baseImageUrl","config","logoUrl","url","Menu","userLink","divisionInfo","division","name","loggedUser","id","appIcon","src","renderedMenus","icon","menus","handleMenuCLick","activeCode","code","to","LOGOUT","ContentTitle","description","Home","setMenuCode","content","ActionButtons","buttonsData","buttonData","status","stringUtil","CrudRow","handleEdit","identifier","handleDelete","values","Array","newValues","CS","RS","colspan","rowspan","push","trStyle","borderTop","actionButton","disabled","valign","Cells","rowSpan","colSpan","InstantTable","rows","tableStyle","row","About","padding","fontFamily","margin","usedHost","apiEntityBaseUrl","apiAccount","apiMessage","getEntityList","request","startLoading","type","payload","entity","entityName","filter","limit","page","fieldsFilter","orderBy","orderType","meta","entityConfig","_byId","createNavButtons","totalButton","currentPage","Math","ceil","min","max","InputField","handleKeyup","onKeyUp","target","onChange","placeholder","inputField","checked","ActionButton","Label","Message","timer","intervalId","update","clearInterval","endMessage","withTimer","setInterval","messageText","msgStyle","realtime","floor","progress","textAlign","Login","username","password","showMessageLoginFailed","handleUsername","handlePassword","doLogin","main","validateLoginStatus","loginStatus","history","message","loginFailed","withRouter","Tab","tabsData","autoColumns","msAutoColumns","gap","borderBottom","tabData","React","ComboBox","handleOnChange","options","defaultValue","option","DashboardMain","onDivisionListChange","divisionId","selectDivision","divionOptions","divisions","forEach","month","day","Card","titleStyle","height","backgroundRepeat","backgroundColor","backgroundImage","backgroundSize","FullCalendar","selectedMonth","getMonth","inputYearValue","getFullYear","activeId","selectedDay","calendarData","days","month_now","begin","week","dayCount","info","begin_old","year_now","input_month","date_info","running_month","running_year","filterDayId","filterMonthId","dateFormId","entity_Name","entity_Prop","setSelectedMonth","refresh","changeInputYear","createTable","r","getEventByDate","year","getEventDetail","updateFields","focus","loadCalendar","dateID","filterStr","fillDay","setCalendar","updated","doSetCalendar","diff_year","abs","monthCount","less","current_month","endMonth","begin_month","b","prevMonth","m","nextMonth","fillInfo","timeLineConstant","detail","doPrevMonth","prev","begin_prev","findBegin","switch_","doNextMonth","next","begin_old_","totalday","M","begin_prev_","D","val2","data","getDate","getYear","now","strDate","dateAcceptableForHtmlInput","addZero","Val","Min","N","String","MinStr","ValLength","Diff","clear","begin_new","week_","day_","isNow","d","setElementByAttr","selectedYear","totalCalendarData","element","minHeight","marginBottom","events","eventList","event","dateInfoText","TYPE_LONG_DATE","TYPE_DATE","divisionConfig","fieldNames","lableName","formData","inputType","reffEntity","idField","displayField","sectionConfig","programConfig","eventStatus","eventConfig","positionConfig","memberConfig","Timeline","detailView","detailEvents","date","addEvent","getEntities","addEventFromTimeline","y","eventDate","toString","done","location","participant","eventCard","connect","managementState","userState","dispatch","actions","MENU_HOME","MENU_TIMELINE","Dashboard","getButtonsData","menu","getDivisons","Footer","version","LiveStreaming","logSocket","dir","window","_transport","stream","sendingVideo","streaming","terminated","video","canvas","photoReceiver","startbutton","isAnimate","sockJsClient","latestImageResponse","init","_class","navigator","mediaDevices","getUserMedia","audio","then","srcObject","play","catch","err","addEventListener","ev","videoHeight","videoWidth","setAttribute","clearphoto","terminate","setSendingVideoFalse","sendVideoImage","imageData","requestId","receiver","handleLiveStream","response","populateCanvas","base64","Promise","resolve","reject","img","Image","onload","newDataUri","imageToDataUri","takepicture","resizeWebcamImage","context","getContext","drawImage","toDataURL","createElement","ctx","initAnimation","requestAnimationFrame","animate","alert","streamId","controls","border","alt","topics","onMessage","msg","ref","client","clientRef","destinatio","destination","MENU_MESSAGE","MENU_LIST","MENU_LIVE_STREAMING","currentRequestId","ChatRoom","messages","sendChatMessage","handleMessage","exist","receivers","storeChatMessageLocally","handleLiveNotif","newSession","sessionKeys","userAgent","updateLiveSessions","changeUsername","setReceiver","getMessagesByReceiver","propMessages","sender","getMessages","userAlias","getAvailableSessions","sessionsMap","currentSender","invalidReceiver","invalidSender","currentUser","session","ChatItem","senderComponent","color","chatState","shopState","DropdownItem","hover","innerHTML","onHover","unHover","onMouseLeave","onMouseOver","InputDropdown","hoverIndex","onBlur","onSelect","dataValue","dropdownList","dropdownComponent","onFocus","InputFile","base64Data","file","referer","callback","reader","FileReader","readAsDataURL","files","onerror","error","componentUtil","removeImage","displayImage","trim","accept","InputFileMultiple","handleAddMoreFile","addMoreImage","inputFields","inputFilesData","inputFileData","includes","inputId","EntityForm","managedEntity","formValues","dropdownValues","selectedEntities","base64DataMultiple","validateEntity","formDataItem","getFormDataItemStartWith","arrayOfValues","split","resultValue","updatedValue","join","handleSubmit","addFromOtherPage","addNew","updateEntity","focusActiveId","propName","updateSelectedEntity","removeManagedEntity","populateDropdown","entityname","fieldname","fieldvalue","fieldName","fieldValue","getEntitiesWithCallback","onKeyUpDynamicDropdown","entities","populateDropdownValues","currentDropdownValue","getFormDataItem","getSelectedDropdownItem","formDataList","currentValue","handleRemoveImage","handleChangeBase64Image","handleChangeBase64MultipleImage","propNameRaw","removeElementAtPosition","handleRemoveMultipleImage","newArrayValue","selectFromDynamicDropdown","currentDropdownList","selectedOption","displayPropName","handleStaticDropdownChange","entityExist","actionButtons","formFields","parentPropName","valueAsObject","objectPropName","inputComponent","valueSplit","imagesData","valueSplitItem","requested","entryPoint","EntityList","confirm","getEntityById","getHeaderNames","headers","backToDashboard","headerName","toUpperCase","goToPage","orderObject","entitiesData","totalData","getEntityInPage","setOrderBy","createFilterInputs","inputs","input","handleFilterChange","valueDay","valueMonth","valueYear","inputDay","inputMonth","inputYear","orderButton","fontWeight","rowValues","j","fieldItem","entityProp","object","entityValue","href","imgName","dateStr","toDateString","opt","fixButtonData","navButtons","paddingTop","entityTable","Management","entityList","loadEntityManagement","setEntityConfig","gotoMainPage","resetManagementPage","checkIfCurrentMenuName","flag","newRecord","isNewRecord","callbackHandleUpdate","action","exacts","contains","App","detailMode","menuCode","loading","loadingPercentage","enableShopping","mainAppUpdated","setDetailMode","setEnableShopping","performLogout","requestAppId","endLoading","percentage","refreshLogin","additionalMenus","authenticated","header","loginComponent","performLogin","loginAttempt","loadingComponent","setMenus","exact","path","render","renderProps","loginKey","cart","user","initState","catalogData","categories","suppliersData","getTime","reducer","updatedMenus","loggedIn","JSON","stringify","sessionData","removeItem","invalidSession","eventsData","entityUtil","rootReducer","combineReducers","shopReducer","userReducer","chatReducer","managementReducer","initialState","commonAuthorizedHeader","timeout","ms","promise","setTimeout","Error","getEntitiesWithCallbackMiddleware","store","fetch","method","body","json","newAction","Object","assign","finally","param","updateEntityMiddleware","debug","getEntityByIdMiddleware","getEntityListMiddleware","getMessagesMiddleware","sendChatMessageMiddleware","addEventFromTimelineMiddleware","dd","mm","yyyy","eventEntity","setEntityConfigMiddleware","storeChatMessageLocallyMiddleware","updateLiveSessionsMiddleware","removeManagedEntityMiddleware","resetManagementPageMiddleware","requestAppIdMiddleware","getEventByDateMiddleware","selectDivisionMiddleware","getDivisionsMiddleware","performLogoutMiddleware","all","responseJson","logoutSuccess","performLoginMiddleware","loginSuccess","entries","pair","refreshLoginStatusMiddleware","parse","removeEntityMiddleware","getAvailableSessionsMiddleware","sessions","filteredSessions","sendVideoImageMiddleware","configureStore","createStore","applyMiddleware","Root","Boolean","hostname","match","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62548d2d.chunk.js","sourcesContent":["let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tlet nominal = \"\" + val;\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"...\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\n\r\nexport const dateInputVal = function (dd, mm, yyyy) {\r\n \r\n\tlet month = +mm < 10 ? \"0\" + mm : mm;\r\n\tlet day = +dd < 10 ? \"0\" + dd : dd;\r\n\r\n\treturn yyyy + \"-\" + month + \"-\" + day;\r\n}","import React, { Component } from 'react'\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\nclass GridComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let items = [];\r\n        if (this.props.items) {\r\n            items = this.props.items;\r\n        }\r\n        const width             = this.props.width ? this.props.width : \"auto \";\r\n        const repeat            = this.props.cols ? this.props.cols : items.length;\r\n        const gridAutoColumns   = width.repeat(repeat);\r\n        const msGridAutoColumns = width == \"auto\"? \"1fr\".repeat(repeat) : width.repeat(repeat);\r\n\r\n        let gridColumn = 1;\r\n        let gridRow    = 1;\r\n\r\n        return (\r\n            <div className=\"grid-container\" style={{\r\n                ...this.props.style,\r\n               // display: 'grid',  stated in css\r\n//display: '-ms-grid',\r\n                verticalAlign       : 'middle',\r\n                gridTemplateColumns : gridAutoColumns,\r\n                msGridColumns       : msGridAutoColumns, \r\n            }} >\r\n                {items.map(item => {\r\n\r\n                    let style = {\r\n                        msGridColumn: gridColumn,\r\n                        msGridRow   : gridRow\r\n                    }\r\n\r\n                    gridColumn++;\r\n\r\n                    if(gridColumn > repeat){\r\n                        gridColumn = 1;\r\n                        gridRow++;\r\n                    }  \r\n\r\n                    return <div key={uniqueId()} style={style}>{item}</div>;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GridComponent;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Button.css'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\nclass ToggleButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active:false\r\n        }\r\n\r\n        this.onClick = (e) => {\r\n            this.setState({active:!this.state.active})\r\n            if(this.props.onClick){\r\n                this.props.onClick(e);\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let outerClass = \"toggle-outer\";\r\n        let innerClass = \"toggle-inner\";\r\n\r\n        if(!this.props.active || this.props.active==false){\r\n            outerClass+=\" outer-inactive\";\r\n            innerClass+=\" inner-inactive\";\r\n        }\r\n\r\n        return (\r\n            <div style={{fontSize:'13px'}}>\r\n                <GridComponent items={[\r\n                    <div key={uniqueId()} onClick={this.onClick} className={outerClass}>\r\n                        <div  className={innerClass} ></div></div>,\r\n                    <span  key={uniqueId()}>{this.props.text}</span>\r\n                ]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleButton;","export const debugMode = () => {\r\n    console.log(\"localStorage.getItem(\\\"debugMode\\\")\",localStorage.getItem(\"debugMode\"));\r\n    return localStorage.getItem(\"debugMode\") && localStorage.getItem(\"debugMode\") == \"true\";\r\n}","import React, { Component } from 'react';\r\nimport '../../css/Header.css'\r\nimport ToggleButton from '../buttons/ToggleButton';\r\nimport * as config from '../../utils/WebConfig'\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            debugMode:true\r\n        }\r\n        this.handleClick = (e) => {\r\n            this.setState({ debugMode: !this.state.debugMode })\r\n            if (this.state.debugMode == true) {\r\n                localStorage.setItem(\"debugMode\", \"true\");\r\n            } else {\r\n                localStorage.setItem(\"debugMode\", \"false\");\r\n            }\r\n            console.log(\"ccc localStorage.setItem(\\\"debugMode\\\")\", localStorage.getItem(\"debugMode\"));\r\n            this.props.app.componentDidMount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const debugMode =  localStorage.getItem(\"debugMode\");\r\n        const isDebugMode =  localStorage.getItem(\"debugMode\") == \"true\";\r\n        return (\r\n            <div key={uniqueId()} className=\"App-header\">\r\n                {this.props.title}\r\n                <ToggleButton active={isDebugMode} onClick={this.handleClick} text={\"Debug Mode: \"+debugMode} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import * as config from '../utils/WebConfig'\r\n \r\nconst rootValue = document.getElementById(\"rootPath\").value == \"${basePath}\" ?\r\n     \"/organization-management\" : document.getElementById(\"rootPath\").value;\r\n\r\nexport const hostLocal =\"http://192.168.1.3:8080\".concat(rootValue);\r\nexport const hostCloud = (rootValue);\r\nexport const baseImageUrl = config.debugMode()==true?hostLocal:hostCloud;\r\n ","import React, { Component } from 'react'\r\nimport '../../css/Menu.css'\r\nimport '../../css/Common.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst logoUrl = url.baseImageUrl+\"/res/img/transparent.png\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n        let userLink = \"\";\r\n        let divisionInfo = null;\r\n\r\n        if (this.props.division) {\r\n            divisionInfo = <div className=\"fill\" >{this.props.division.name} </div>;\r\n        }\r\n\r\n        if (this.props.loggedUser != null) {\r\n            \r\n            userLink = <li id=\"user-link\">\r\n                <div className=\"fill\" >{\"Welcome, \" + this.props.loggedUser.name} </div>\r\n                {divisionInfo}\r\n            </li>\r\n        }\r\n\r\n        let appIcon = <li><img src={logoUrl} style={{ width: '90%' }} /></li>;\r\n\r\n        let renderedMenus = [{\r\n            icon: true,\r\n            url: logoUrl\r\n        }];\r\n\r\n\r\n        if (this.props.menus != null) {\r\n            renderedMenus = this.props.menus;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"side-menu\" >\r\n                < ul className=\"menu-ul \" >\r\n                    {appIcon}\r\n                    {userLink}\r\n                    {\r\n                        renderedMenus.map(\r\n                            e => {\r\n                                if (e.url == \"#\") {\r\n                                    return (\r\n                                    <li\r\n                                        onClick     ={() => this.props.handleMenuCLick(e)} \r\n                                        className   ={this.props.activeCode == e.code ? \"active\" : \"\"} \r\n                                        key         ={e.name}\r\n                                        id          ={e.name}>\r\n                                            <Link key={e.name} className=\"App-link\" to=\"#\" >\r\n                                                <div className=\"fill\" >\r\n                                                    {e.name}\r\n                                                </div>\r\n                                            </Link>\r\n                                        </li >\r\n                                    )\r\n                                }\r\n                                return (\r\n                                <li \r\n                                    className   ={this.props.activeCode == e.code ? \"menu-active\" : \"\"} \r\n                                    key         ={e.name}\r\n                                    id          ={e.name}>\r\n                                        <Link key={e.name} className=\"App-link\" to={e.url} >\r\n                                            <div className=\"fill\" >{e.name}</div>\r\n                                        </Link>\r\n                                    </li >\r\n                                )\r\n                            }\r\n                        )\r\n                    } </ul>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","export const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const SUPPLIERLIST = \"supplierlist\";","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Content.css'\r\n\r\nclass ContentTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let title       = this.props.title ? this.props.title : \"\";\r\n        let description = this.props.description ? this.props.description : \"\";\r\n        \r\n        return (\r\n            <div className=\"content-title\">\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentTitle;","import React, { Component } from 'react'\r\nimport '../../css/Home.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nimport * as url from '../../constant/Url'\r\nconst logoUrl = url.baseImageUrl + \"/res/img/mpi.png\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Mahasiswa Pencinta Islam\";\r\n        this.props.setMenuCode(menus.HOME);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"Welcome!\" description=\r\n                    {this.props.content} />\r\n                <div className=\"article-content\">\r\n                    <h2 >Admin Console Mahasiswa Pencinta Islam</h2>\r\n                    <img src={logoUrl} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport '../../css/Button.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ActionButtons extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let className = \"action-button-wrapper\";\r\n        if(this.props.className){\r\n            className += \" \"+this.props.className;\r\n        }\r\n        return (\r\n            <div style={this.props.style ? this.props.style : {}} className={className}  >\r\n                {this.props.buttonsData.map(buttonData => {\r\n                    let className = \"action-button rounded\";\r\n                    if (buttonData.status != null) {\r\n                        className =\r\n                            className.concat(\" \").concat(buttonData.status).concat(\" \").concat(buttonData.className);\r\n                    }\r\n                    return (\r\n                        <button \r\n                        style       ={{...buttonData.style}} \r\n                        className   ={className} \r\n                        key         ={\"btnKey-\" + stringUtil.uniqueId()}\r\n                        onClick     ={buttonData.onClick}>\r\n                         {buttonData.text?buttonData.text:\"\"}\r\n                         </button>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ActionButtons;","import React, { Component } from 'react'\r\nimport ActionButtons from './buttons/ActionButtons';\r\nimport * as stringUtil from '../utils/StringUtil'\r\n\r\nclass CrudRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleEdit = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleEdit(this.props.identifier);\r\n            }\r\n        }\r\n        this.handleDelete = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleDelete(this.props.identifier);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let values = this.props.values;\r\n        const defaultRowColSpan = 1;\r\n        if (null == values) {\r\n            values = new Array();\r\n        } else {\r\n            let newValues = new Array();\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (this.props.CS || this.props.RS) {\r\n                    let colspan = stringUtil.isNonNullArrayWithIndex(this.props.CS, i) ?\r\n                        this.props.CS[i] : defaultRowColSpan;\r\n                    let rowspan = stringUtil.isNonNullArrayWithIndex(this.props.RS, i) ?\r\n                        this.props.RS[i] : defaultRowColSpan;\r\n                    newValues.push({ value: value, colspan: colspan, rowspan: rowspan });\r\n                } else\r\n                    newValues.push({ value: value });\r\n            }\r\n            values = newValues;\r\n        }\r\n\r\n        let trStyle = this.props.style ? this.props.style : {\r\n            borderTop: 'solid 1px gray',\r\n        };\r\n        let actionButton = <td style={trStyle}>\r\n            <ActionButtons buttonsData={[\r\n                {\r\n                    id: \"k-btn-edit-\" + this.props.identifier,\r\n                    status: 'warning',\r\n                    onClick: this.handleEdit,\r\n                    text: \"Edit\"\r\n                },\r\n                {\r\n                    id: \"k-btn-dlt-\" + this.props.identifier,\r\n                    status: 'danger',\r\n                    onClick: this.handleDelete,\r\n                    text: \"Delete\"\r\n                }\r\n            ]} />\r\n        </td>;\r\n\r\n        if (this.props.disabled == true) {\r\n            actionButton = null;\r\n            trStyle = this.props.style ? this.props.style : {};\r\n        }\r\n      \r\n        return (\r\n            <tr style={trStyle} key={stringUtil.uniqueId()}\r\n                valign={this.props.valign}>\r\n                <Cells values={values} trStyle={trStyle} />\r\n                {actionButton}</tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst Cells = (props) => { \r\n\r\n    let values = props.values;\r\n\r\n    return  values.map(value => { \r\n        \r\n        return (\r\n            <td key={ stringUtil.uniqueId()} id={ stringUtil.uniqueId()} \r\n                style={props.trStyle} rowSpan={value.rowspan} \r\n                colSpan={value.colspan}>\r\n                {value.value}\r\n            </td>\r\n        )\r\n    });\r\n}\r\n\r\nexport default CrudRow;","import React, { Component } from 'react'\r\nimport CrudRow from '../CrudRow';\r\nimport '../../css/Common.css'\r\nimport '../../css/InstantTable.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass InstantTable extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let rows = [];\r\n        if (this.props.rows) { rows = this.props.rows; }\r\n        let className   = \"table\";\r\n        let tableStyle  = this.props.style ? this.props.style : {};\r\n\r\n        if (this.props.className) {\r\n            className += \" \" + this.props.className;\r\n        }\r\n        return (\r\n            <table style={tableStyle} className={className}><tbody>\r\n                {rows.map(row => {\r\n                    let disabled = row.disabled == false? false : true; \r\n                    \r\n                    return (\r\n                        <CrudRow\r\n                            style       ={row.style}\r\n                            valign      ={this.props.valign ? this.props.valign : \"top\"}\r\n                            RS          ={row.RS}\r\n                            identifier  ={row.identifier ? row.identifier : \"0000\"}\r\n                            handleEdit  ={row.handleEdit}\r\n                            handleDelete={row.handleDelete}\r\n                            CS          ={row.CS}\r\n                            values      ={row.values ? row.values : []}\r\n                            key         ={stringUtil.uniqueId()}\r\n                            disabled    ={disabled}\r\n                        />\r\n                    )\r\n                })}\r\n            </tbody></table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstantTable;","import React, { Component } from 'react'\r\nimport '../../css/About.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport * as url from '../../constant/Url'\r\nimport '../../css/Common.css'\r\nimport ContentTitle from '../layout/ContentTitle' \r\n\r\nconst logoUrl = url.baseImageUrl + \"/res/img/asp.png\";\r\n\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n        this.props.setMenuCode(menus.ABOUT);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container about-section  \" >\r\n                <ContentTitle title=\"About Us\" />\r\n                <div className=\" abount-content\" style={{\r\n                    padding     : '5px',\r\n                    width       : '90%',\r\n                    fontFamily  : 'Consolas', margin: '5px'\r\n                }}>\r\n                    <InstantTable\r\n                        rows={[\r\n                            { values: [\"Name\", \"Organization Management Admin\"] },\r\n                            { values: [\"Version\", \"1.0.0\"] },\r\n                            { values: [\"Description\", \"managing your organization activities effectively\"] },\r\n\r\n\r\n                        ]} />\r\n                    <h2>Powered By</h2>\r\n                    <img style={{ width: '50%' }} src={logoUrl} />\r\n                </div></div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import * as types from './types'\r\nimport * as config from '../utils/WebConfig'\r\nimport * as url from '../constant/Url'\r\n\r\nconst hostCloud = url.hostCloud+\"/api/\";\r\nconst hostLocal = url.hostLocal+\"/api/\";\r\n\r\nconst usedHost = () => {\r\n    if (config.debugMode() == true)\r\n        return hostLocal;\r\n    else\r\n        return hostCloud;\r\n} \r\nconst apiBaseUrl  = () => usedHost() + \"public/\";\r\nconst apiEntityBaseUrl  = () => usedHost() + \"management/\"\r\nconst apiAccount = () => usedHost() + \"account/\"\r\nconst apiAdmin = () => usedHost() + \"admin/\" \r\nconst apiMessage = () => usedHost() + \"message/\" \r\nconst apiLiveStreaming = () => usedHost() + \"livestreaming/\" \r\nexport const addEventFromTimeline = (day,month,year) => {\r\n    return { type: types.ADD_EVENT_FROM_TIMELINE, payload: {\r\n        day:day,\r\n        month:month,\r\n        year:year\r\n    }, meta: { type: types.ADD_EVENT_FROM_TIMELINE } };\r\n}\r\n\r\nexport const setEntityConfig = (entityConfig) => {\r\n    return { \r\n        type: types.SET_ENTITY_CONFIG,\r\n        payload: {  entityConfig : entityConfig  }, \r\n        meta: { type: types.SET_ENTITY_CONFIG } };\r\n}\r\n \r\nexport const resetManagementPage = () => {\r\n    return {\r\n        type: types.RESET_MANAGEMENT_PAGE,\r\n        payload: {},\r\n        meta: { type: types.RESET_MANAGEMENT_PAGE }\r\n    };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            entity: request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl().concat(\"add\") : apiEntityBaseUrl().concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: 10,\r\n                fieldsFilter: {},\r\n                entryPoint:\"inputField\"\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            entity: name,\r\n            filter: {\r\n                limit: 1,\r\n                page: 0,\r\n                exacts: true,\r\n                contains: false,\r\n                fieldsFilter: { id: id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl().concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n \r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl().concat(\"generateappid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiMessage().concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const updateLiveSessions = (session, app) => {\r\n    \r\n    return {\r\n        type: types.UPDATE_SESSIONS,\r\n        payload: {session:session},\r\n        meta: {\r\n            app:app,\r\n            type: types.UPDATE_SESSIONS \r\n        }\r\n    };\r\n}\r\n\r\nexport const sendVideoImage = (imageData, requestId, destination, app) => {\r\n    console.log(\"=========== sendVideoImage\"); \r\n\r\n    return {\r\n        type: types.SEND_VIDEO_IMAGE,\r\n        payload: {requestId: requestId,\r\n            destination: destination,\r\n            imageData: imageData},\r\n        meta: { \r\n            url: apiLiveStreaming().concat(\"sendimage\"),\r\n            type: types.SEND_VIDEO_IMAGE,\r\n            app: app\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            messages: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const sendChatMessage = (message, username, receiver, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SEND_MESSAGE,\r\n        payload: {\r\n            message:{\r\n                receiver:receiver,\r\n                text:message\r\n            }, \r\n            username: username, \r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.SEND_MESSAGE,\r\n            url: apiMessage().concat(\"sendmessage\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getAvailableSessions = ( app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_SESSIONS,\r\n        payload: { },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_SESSIONS,\r\n            url: apiMessage().concat(\"getsessions\")\r\n        }\r\n    };\r\n}\r\n\r\n\r\nexport const getEventByDate = (month, year, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_EVENTS_BY_DATE,\r\n        payload: { year: year, month: month },\r\n        meta: {\r\n            app: app, type: types.GET_EVENTS_BY_DATE,\r\n            url: apiAdmin().concat(\"event\")\r\n        }\r\n    };\r\n}\r\nexport const selectDivision = (id, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SELECT_DIVISION,\r\n        payload: { divisionId: id },\r\n        meta: {\r\n            app: app, type: types.SELECT_DIVISION, url: apiAccount().concat(\"setdivision\")\r\n        }\r\n    };\r\n}\r\n \r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount().concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n///ok\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {\r\n            user: { username: username, password: password }\r\n        },\r\n        meta: { type: types.DO_LOGIN, url: apiAccount().concat(\"login\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const refreshLoginStatus = (loginStatus) => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {loginStatus:loginStatus},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\n//ok\r\nexport const getDivisons = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.GET_DIVISIONS,\r\n        payload: {\r\n\r\n        },\r\n        meta: { type: types.GET_DIVISIONS, url: apiAccount().concat(\"divisions\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n \r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n \r\n\r\n"," \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";    \r\nexport const GET_DIVISIONS = \"GET_DIVISIONS\";\r\nexport const SELECT_DIVISION = \"SET_DIVISION\";\r\nexport const GET_EVENTS_BY_DATE = \"GET_EVENTS_BY_DATE\";\r\n     \r\nexport const REQUEST_ID = \"req_ID\";\r\n\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const RESET_MANAGEMENT_PAGE = \"reset_management_page\";\r\n\r\nexport const ADD_EVENT_FROM_TIMELINE = \"add_event_from_timeline\";\r\nexport const SET_ENTITY_CONFIG = \"set-entity-config\";\r\n \r\nexport const SEND_MESSAGE = \"send_message\";\r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\"; \r\nexport const GET_SESSIONS = \"GET_SESSIONS\"; \r\nexport const UPDATE_SESSIONS = \"update_sessions\";\r\n\r\nexport const SEND_VIDEO_IMAGE = \"send_video_image\";","export const _byId = (id) => { return document.getElementById(id) }\r\n\r\nexport const clearFields = (...ignore) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n    let withIgnore = ignore != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore)\r\n            for (let y = 0; y < ignore.length; y++)\r\n                if (inputs[i].id == ignore[y]) continue loop;\r\n\r\n        if (inputs[i].type == \"text\") inputs[i].value = \"\";\r\n        if (inputs[i].type == \"number\") inputs[i].value = 0;\r\n    }\r\n}\r\n\r\nexport function toBase64(file, referer, callback){\r\n\tconst reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n    \talert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (_byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array(); \r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton  ? totalButton  : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton  ) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton -1 \r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\n\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyup = (e) => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(e.target.value, this.props.id);\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            if (this.props.type == \"date\") {\r\n                this.handleKeyup(e);\r\n            }\r\n            if (this.props.id && this.props.type == \"checkbox\") {\r\n                this.props.onChange(this.props.id);\r\n            }\r\n            if (this.props.onChange && this.props.id) {\r\n                this.props.onChange();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let type = this.props.type ? this.props.type : \"text\";\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let name = this.props.name ? this.props.name : \"\";\r\n        let style = this.props.style ? this.props.style : {};\r\n\r\n        let inputField = <input style={style}\r\n            className=\"rounded\"\r\n            name={name}\r\n            key={\"KEY-input-\" + this.props.id}\r\n            id={this.props.id}\r\n            type={type}\r\n            onKeyUp={this.handleKeyup}\r\n            placeholder={placeholder}\r\n            checked={this.props.checked}\r\n            onChange={this.onChange}\r\n           \r\n        />;\r\n\r\n        if (this.props.disabled == true) {\r\n            inputField = <input style={style}\r\n                className=\"rounded\"\r\n                onChange={this.onChange}\r\n                name={name} key={\"KEY-input-\" + this.props.id}\r\n                checked={this.props.checked}\r\n                id={this.props.id}\r\n                type={type} onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n               \r\n                disabled />\r\n        }\r\n\r\n        if (type == \"textarea\") {\r\n            inputField = <textarea style={style}\r\n                className=\"rounded\"\r\n                name={name}\r\n                key={\"KEY-input-\" + this.props.id}\r\n                id={this.props.id}\r\n                type={type}\r\n                onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n                onChange={this.onChange}\r\n                checked={this.props.checked} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field \">\r\n                {inputField}\r\n                {this.props.type == \"radio\" || this.props.type == \"checkbox\" ? <span style={{ fontSize: '0.9em' }}>\r\n\r\n                    {this.props.text} </span> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\n\r\nclass ActionButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = () => {\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"action-button rounded\";\r\n\r\n        if(this.props.status!= null ){\r\n            className=className.concat(\" \").concat(this.props.status);\r\n        }\r\n        return (\r\n            <div >\r\n                <button \r\n                style       ={{...this.props.style}} \r\n                className   ={className} \r\n                id          ={this.props.id} \r\n                onClick     ={this.onClick}>\r\n                {this.props.text}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ActionButton;","import React, {Component} from 'react'\r\nimport '../css/Input.css'\r\n\r\nclass Label extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onClick = () =>{\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let style = this.props.style?this.props.style:{};\r\n        let className = \"input-field \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n        if(this.props.onClick){\r\n            className+=\" clickable\";\r\n        }\r\n        return(\r\n            <div onClick={this.onClick} style={style} className={className}>\r\n                <label>{this.props.text}</label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react'\r\nimport '../css/Common.css'\r\nimport '../css/Message.css'\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {\r\n            let progress = Math.floor( this.props.progress);\r\n            msgStyle = {\r\n                width:progress + \"%\",\r\n                textAlign: 'left'\r\n            };\r\n            className+=\" rounded\";\r\n            messageText =  <span className=\"loader\">{this.props.progress + \"%\"}</span>          \r\n        }\r\n        return (\r\n            <div style={msgStyle} className={className} >{messageText}</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Message;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Login.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport Label from '../Label';\r\nimport Message from '../Message'\r\nimport { withRouter } from 'react-router';\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            showMessageLoginFailed: false\r\n        }\r\n\r\n\r\n\r\n        this.handleUsername = (value) => {\r\n            this.setState({ username: value });\r\n        }\r\n        this.handlePassword = (value) => {\r\n            this.setState({ password: value });\r\n        }\r\n\r\n        this.doLogin = () => {\r\n\r\n            console.log(\"u:\", this.state.username, \",p:\", this.state.password);\r\n            this.props.doLogin(document.getElementById(\"username-field\").value,\r\n                document.getElementById(\"password-field\").value, this.props.main);\r\n        }\r\n\r\n        this.endMessage = () => {\r\n            this.setState({ showMessageLoginFailed: false })\r\n        }\r\n\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.props.setMenuCode(menus.LOGIN);\r\n        document.title = \"Login\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        // if(this.props.loginAttempt == false && this.state.showMessageLoginFailed == false){\r\n        //     this.setState({showMessageLoginFailed:true})\r\n        // }\r\n    }\r\n\r\n    render() {\r\n\r\n        let message = <p>\r\n            {this.props.loginFailed ? <Message endMessage={this.endMessage} type=\"failed\" text=\"Login Failed\" /> : \"\"}\r\n        </p>\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                < ContentTitle title=\"Login Page\" />\r\n                {message}\r\n                <div className=\"login-container\">\r\n                    <Label text=\"Username\" />\r\n                    <InputField id=\"username-field\" onKeyUp={this.handleUsername} />\r\n                    <Label text=\"Password\" />\r\n                    <InputField id=\"password-field\" type=\"password\" onKeyUp={this.handlePassword} />\r\n                    <ActionButton style={{margin:'5px'}} id=\"btn-login\" status=\"submit\" onClick={this.doLogin} text=\"Login\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport '../../css/Tab.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Tab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let tabsData = this.props.tabsData ? this.props.tabsData : [];\r\n\r\n        let autoColumns = \"5% \" + (\"max-content \".repeat(tabsData.length)) + \" auto\";\r\n        let msAutoColumns = \"5% \" + (\"max-content \".repeat(tabsData.length)) + \" 1fr\";\r\n        let i = 0;\r\n        return (\r\n            <div className=\"tab-container  grid-container\" style={{\r\n                ...this.props.style,\r\n                width               : 'auto',\r\n                gap                 : '0px',\r\n               // display: 'grid',\r\n                msGridColumns       : autoColumns,\r\n                gridTemplateColumns : msAutoColumns\r\n            }} >\r\n                <div style={{ width: '100%', borderBottom: 'solid 1px lightgray', msGridColumn:1 }}></div>\r\n                {tabsData.map(tabData => {\r\n\r\n                    i++;\r\n\r\n                    return <div \r\n\r\n                    key         ={stringUtil.uniqueId()} \r\n                    className   ={tabData.active ? \"tab-element tab-item-active rounded-top\" :  \"tab-element tab-item\"} \r\n                    onClick     ={tabData.onClick ? tabData.onClick : () => { }}\r\n                    style       = {{msGridColumn: i} }\r\n                    >\r\n                        {tabData.text}\r\n                    </div>\r\n                })}\r\n                <div style={{ width: '100%', borderBottom: 'solid 1px lightgray', msGridColumn: 1 + tabsData.length }}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ComboBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = (e) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(e.target.value); \r\n            }\r\n            else {\r\n                console.log(\"Not supported\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let options = [];\r\n        if (this.props.options) {\r\n            options = this.props.options;\r\n        } \r\n        return (\r\n            <div className=\"input-field \">\r\n                <select value={this.props.defaultValue ? this.props.defaultValue : \"\"} className=\"rounded\" id={this.props.id}\r\n                    onChange={this.handleOnChange} >\r\n                    {options.map(\r\n                        option => {\r\n                            return <option key={\"opt_\" + stringUtil.uniqueId()} value={option.value} >{option.text}</option>\r\n                        }\r\n                    )}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComboBox;","import  React  from 'react'\r\nimport '../../css/Common.css'\r\nimport ComboBox from '../input/ComboBox';\r\n\r\nclass DashboardMain extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            divisionId:null\r\n        }\r\n    }\r\n\r\n    onDivisionListChange = (value) => {\r\n        if(value == 0){\r\n            return;\r\n        }\r\n\r\n        this.setState({divisionId:value});\r\n        this.props.selectDivision(value);\r\n    }\r\n    \r\n    divionOptions = () => {\r\n        let options = [{\r\n            value: 0,\r\n            text:\"-Pilih BPD-\"\r\n        }];\r\n        let divisions = this.props.divisions? this.props.divisions : [];\r\n\r\n        divisions.forEach(division => {\r\n            options.push({\r\n                value: division.id,\r\n                text: division.name\r\n            })\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render(){\r\n \r\n        const division = this.props.division;\r\n        let divisionId = this.state.divisionId;\r\n        if(this.props.division){\r\n            divisionId = this.props.division.id;\r\n        }\r\n\r\n        return(\r\n            <div >\r\n                <p>Login Sebagai</p>\r\n                <ComboBox \r\n                    defaultValue    ={divisionId} \r\n                    onChange        ={this.onDivisionListChange} \r\n                    options         ={this.divionOptions()} \r\n                    />\r\n\r\n                <p>Current Selection:</p>\r\n                <p>{division?division.name:\"\"}</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default DashboardMain;","export  const month = [\r\n    { name: \"Januari\", day: 31, text:\"Januari\",value:\"1\" },\r\n    { name: \"Februari\", day: 28, text:\"Februari\",value:\"2\" },\r\n    { name: \"Maret\", day: 31, text:\"Maret\",value:\"3\" },\r\n    { name: \"April\", day: 30, text:\"April\",value:\"4\" },\r\n    { name: \"Mei\", day: 31 , text:\"Mei\",value:\"5\"},\r\n    { name: \"Juni\", day: 30, text:\"Juni\",value:\"6\" },\r\n    { name: \"Juli\", day: 31 , text:\"Juli\",value:\"7\"},\r\n    { name: \"Agustus\", day: 31 , text:\"Agustus\",value:\"8\"},\r\n    { name: \"September\", day: 30 , text:\"September\",value:\"9\"},\r\n    { name: \"Oktober\", day: 31 , text:\"Oktober\",value:\"10\"},\r\n    { name: \"November\", day: 30 , text:\"November\",value:\"11\"},\r\n    { name: \"Desember\", day: 31 , text:\"Desember\",value:\"12\"},\r\n];","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Card.css'\r\n\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let titleStyle = {height:'auto'}\r\n        if (this.props.icon) {\r\n            titleStyle = {\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundColor: 'white',\r\n                backgroundImage: \"url(\" + this.props.icon + \")\",\r\n                backgroundSize: '200px 160px',\r\n                \r\n            }\r\n        }\r\n\r\n        let className= \"card \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.onClick} style={this.props.style} className={className}>\r\n                <div className=\"card-title  \" style={titleStyle}>\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\nimport { uniqueId } from '../../utils/StringUtil';\r\n\r\n\r\nclass FullCalendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth() + 1,\r\n            inputYearValue: new Date().getFullYear(),\r\n            activeId: \"\", \r\n            selectedDay: 0\r\n        }\r\n\r\n        this.calendarData = [];\r\n        this.days = [\"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\", \"Ahad\"];\r\n\r\n\r\n        this.month_now = 7;// 0; \r\n        this.begin = { week: 1, day: 3, dayCount: 31, info: \"\" };\r\n        this.begin_old = { week: 0, day: 0, dayCount: 0, info: \"\" };\r\n        this.year_now = 1945; \r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n        this.running_month = 7;\r\n        this.running_year = 1945;\r\n        this.filterDayId = 0;\r\n        this.filterMonthId = 0; this.dateFormId = 0;\r\n        this.entity_Name = 0; this.entity_Prop = 0; this.dateFormId = 0;\r\n\r\n        this.setSelectedMonth = (val) => {\r\n            this.setState({ selectedMonth: val });\r\n            this.props.refresh(val, this.year_now);\r\n        }\r\n        this.changeInputYear = (val, id) => {\r\n            this.setState({ inputYearValue: val, activeId: id });\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => { \r\n            this.props.getEventByDate(month, year );\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            if(this.props.getEventDetail){\r\n                return this.props.getEventDetail(day);\r\n            }\r\n\r\n            return [];\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        } \r\n        this.updateFields();\r\n        if (_byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n         this.loadCalendar();\r\n    }\r\n\r\n    setDateElementId(dateID) { \r\n        this.dateFormId = dateID;\r\n        let filterStr = \"filter-\" + dateID;\r\n        this.filterDayId = (filterStr + \".day\");\r\n        this.filterMonthId = (filterStr + \".month\");\r\n        this.dateFormId = (filterStr + \".year\");\r\n    }\r\n\r\n    updateFields() {\r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n    }\r\n\r\n    loadCalendar() {\r\n        this.updateFields();\r\n        this.createTable();\r\n        this.begin_old = this.begin;\r\n        this.begin = this.fillDay(this.month_now, true, this.begin);\r\n\r\n        this.input_month.value = new Date().getMonth() + 1; \r\n        this.setCalendar();\r\n        this.setState({ updated: new Date(), inputYearValue: new Date().getFullYear() });\r\n    }\r\n    setCalendar() {\r\n        this.doSetCalendar();\r\n    }\r\n\r\n    doSetCalendar() {\r\n        console.log(\"==start==\");\r\n\r\n        this.running_month = this.input_month ? this.input_month.value - 1 : new Date().getMonth();\r\n        this.running_year = this.state.inputYearValue ? this.state.inputYearValue : new Date().getFullYear();\r\n        let diff_year = +Math.abs(this.running_year - this.year_now);\r\n        // alert(\"diff_year year:\" + diff_year);\r\n        let monthCount = 0;\r\n        if (diff_year > 0)\r\n            monthCount = (11 - this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (+this.running_month);\r\n        else\r\n            monthCount = this.running_month - this.month_now;\r\n        let less = false;\r\n        if (this.running_year - this.year_now > 0) {\r\n            less = false;\r\n        } else if (this.running_year - this.year_now < 0) {\r\n            less = true;\r\n        } else {\r\n            if (this.running_month - this.month_now > 0) {\r\n                less = false;\r\n            } else {\r\n                less = true;\r\n            }\r\n        }\r\n        monthCount = Math.abs(monthCount);\r\n        //console.log(\"kurang dari: \", less);\r\n        let current_month = this.month_now;\r\n        let endMonth = (monthCount + this.month_now);\r\n        if (monthCount <= 0)\r\n            return;\r\n        if (!less)\r\n        ////console.log(\"month now\",this.month_now,\"diff_year\",monthCount,\"to\",to);\r\n        {\r\n            for (let m = this.month_now + 1; m <= endMonth + 1; m++) {\r\n                if (current_month > 11) {\r\n                    current_month = 0;\r\n\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.nextMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"month\",current_month,\"this.running_year\",this.year_now);\r\n                current_month++;\r\n            }\r\n        } else if (less) {\r\n            let pastMonthCount = (this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (11 - this.running_month);\r\n            endMonth = (pastMonthCount + this.month_now);\r\n            //console.log(\"month now\", this.month_now, \"diff_year\", monthCount, \"from\", to);\r\n            let begin_month = this.month_now;\r\n            for (let b = endMonth + 1; b >= begin_month + 1; b--) {\r\n                if (current_month < 0) {\r\n                    current_month = 11;\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.prevMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"b\",b,\"month\",current_month);\r\n                current_month--;\r\n            } \r\n        }\r\n\r\n        this.fillInfo();\r\n        console.log(\"==end==\")\r\n    }\r\n\r\n    fillInfo() {\r\n        if (this.date_info)\r\n            this.date_info.value = timeLineConstant.month[this.month_now].name + \" \" + this.year_now;\r\n        this.refresh();\r\n\r\n    } \r\n\r\n    detail(day, month, year) { \r\n        if(this.props.detail){\r\n            this.props.detail(day, month, year);\r\n        } \r\n    }\r\n\r\n    prevMonth() {\r\n\r\n        this.setState({ updated:new Date()})\r\n        return this.doPrevMonth(false);\r\n    }\r\n\r\n    doPrevMonth(prev) {\r\n        this.month_now--;\r\n        if (prev) {\r\n            this.running_month--;\r\n        }\r\n        if (this.month_now < 0) {\r\n            this.month_now = 11;\r\n            this.year_now--;\r\n            if (prev) {\r\n                this.running_month = 11;\r\n                this.running_year--;\r\n            }\r\n        }\r\n        let begin_prev = this.findBegin(this.begin_old, this.begin_old.dayCount);\r\n\r\n        this.begin_old = {\r\n            week: begin_prev.week,\r\n            day: begin_prev.day,\r\n            dayCount: begin_prev.dayCount,\r\n        }\r\n        let switch_ = this.fillDay(this.month_now, false, begin_prev);\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n    }\r\n\r\n    nextMonth() {\r\n        \r\n        return this.doNextMonth(false);\r\n    }\r\n\r\n    refresh() {\r\n        if(this.props.refresh){\r\n            this.props.refresh(this.month_now, this.year_now);\r\n        }\r\n    }\r\n\r\n    doNextMonth(next) {\r\n        console.log(\"NEXT\")\r\n        this.month_now++;\r\n        if (next) {\r\n            this.running_month++;\r\n        }\r\n        if (this.month_now > 11) {\r\n            this.month_now = 0;\r\n            this.year_now++;\r\n            if (next) {\r\n                this.running_month = 0;\r\n                this.running_year++;\r\n            }\r\n        }\r\n\r\n        let switch_ = this.fillDay(this.month_now, true, this.begin);\r\n        this.begin_old = {\r\n            week: this.begin.week,\r\n            day: this.begin.day,\r\n            dayCount: this.begin.dayCount,\r\n        }\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount,\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n\r\n    }\r\n\r\n    findBegin(begin_old_, totalday) {\r\n        let M = this.month_now - 1;\r\n        if (M < 0) {\r\n            M = 11;\r\n        }\r\n        let day = begin_old_.day;\r\n        let week = 6;\r\n        let begin_prev_ = {\r\n            week: 0,\r\n            day: 0,\r\n            dayCount: timeLineConstant.month[M].day\r\n        }\r\n\r\n        for (let D = totalday; D >= 0; D--) {\r\n            if (day <= 0) {\r\n                day = 7;\r\n                week--;\r\n            }\r\n            day--;\r\n        }\r\n        begin_prev_.week = week;\r\n        begin_prev_.day = day + 1;\r\n        return begin_prev_;\r\n    }\r\n\r\n    setElementByAttr(val, val2, day) {\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            let data = this.calendarData[i];\r\n\r\n            if (data.week == val && data.day == val2) {\r\n                if (new Date().getDate() == day &&\r\n                    new Date().getMonth() == this.month_now &&\r\n                    new Date().getYear() + 1900 == this.year_now) {\r\n\r\n                    console.log(\"NOW\", i);\r\n                    this.calendarData[i].now = true;\r\n                } else {\r\n                 //   console.log(\"NOT NOW\", i);\r\n                    this.calendarData[i].now = false;\r\n                }\r\n                this.calendarData[i].text = day;\r\n            }\r\n        }\r\n    }\r\n\r\n    addNewEvent(day, month, year) {\r\n\r\n        let strDate = this.dateAcceptableForHtmlInput(day, month, year);\r\n        document.getElementById(this.dateFormId).value = strDate;\r\n    }\r\n\r\n    dateAcceptableForHtmlInput(day, month, year) {\r\n        return year + \"-\" + this.addZero(month, 10) + \"-\" + this.addZero(day, 10);\r\n    }\r\n\r\n    addZero(Val, Min) {\r\n        let N = new String(Val);\r\n        let MinStr = new String(Min);\r\n\r\n        let ValLength = N.length;\r\n        let MinLength = MinStr.length;\r\n        let Diff = MinLength - ValLength;\r\n        for (let i = 1; i <= Diff; i++) {\r\n            N = new String(\"0\").concat(N);\r\n        }\r\n\r\n        return N;\r\n    }\r\n\r\n    clear() {\r\n\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            this.calendarData[i].text = \"\";\r\n        }\r\n\r\n        timeLineConstant.month[1].day = 28 + (+this.year_now % 4 == 0 ? 1 : 0);\r\n    }\r\n\r\n    fillDay(current_month, next, begin) {\r\n        this.clear();\r\n        let begin_new = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let begin_old_ = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let week_ = begin_new.week;\r\n        let begin_week = week_;\r\n        if (begin_new.week > 1 && begin_new.day > 1) {\r\n            week_ = 1;\r\n            begin_week = 1;\r\n        }\r\n        let day_ = begin_new.day;\r\n        let begin_day = day_;\r\n        let isNow = this.running_month == current_month && this.running_year == this.year_now;\r\n        //  console.log(\"isNow\", isNow,this.running_month,'=',current_month, this.running_month == current_month,this.running_year,'=',this.year_now, this.running_year == this.year_now)\r\n        for (let d = 1; d <= timeLineConstant.month[current_month].day; d++) {\r\n            if (day_ > 7) {\r\n                day_ = 1;\r\n                week_++;\r\n            }\r\n            if (isNow) {\r\n                this.setElementByAttr(week_, day_, d);\r\n            }\r\n            day_++;\r\n        }\r\n        begin_new.week = week_ >= 5 ? 2 : 1;\r\n        begin_new.day = day_;\r\n        begin_new.dayCount = timeLineConstant.month[current_month].day;\r\n        //console.log(\"old\", begin_old_.day, begin_old_.week);\r\n        //console.log(\"   \");\r\n        //console.log(\"new\", begin_new.day, begin_new.week);\r\n        this.fillInfo();\r\n        if (isNow) {\r\n            // this.detail(null, (+this.running_month + 1), this.running_year);\r\n            begin_new.info = \"NOW\";\r\n            this.getEventByDate(this.running_month + 1, this.running_year);\r\n        } else {\r\n            begin_new.info = \"SOME-DAY\";\r\n        }\r\n\r\n\r\n\r\n        return begin_new;\r\n    }\r\n\r\n    render() {\r\n        //validate division\r\n        let selectedYear = this.state.inputYearValue;\r\n\r\n        let totalCalendarData = this.days.map(day => {\r\n            return ({ text: day, title: true })\r\n        })\r\n\r\n        this.calendarData.forEach(element => {\r\n            totalCalendarData.push(element);\r\n        });\r\n\r\n        let calendarData = totalCalendarData.map(\r\n            data => {\r\n\r\n                if (data.text == null || data.text == \"\") {\r\n                    return <div key={uniqueId()}></div>\r\n                }\r\n\r\n                let style = { width: '80%', minHeight: '150px', marginBottom: '15px' };\r\n\r\n                if (data.title == true) {\r\n                    return (<div key={uniqueId()}>{data.text}</div>)\r\n                }\r\n\r\n                if (data.now == true) {\r\n                    style = {\r\n                        ...style,\r\n                        backgroundColor: 'lightgreen'\r\n                    }\r\n                }\r\n\r\n                let events = this.getEventDetail(+data.text);\r\n                let i = 0;\r\n                let eventList = events.map(event => {\r\n                    i++;\r\n                    if (i <= 3) {\r\n\r\n                        return <p key={\"EVT_\" + i}>{event.name}</p>\r\n                    } else if (i == 4) {\r\n                        return <ActionButton key={uniqueId()} onClick={() => { }} text={\"more\"} />\r\n                    } else {\r\n                        return null;\r\n                    }\r\n\r\n\r\n                });\r\n             //   console.log(data.text, \"EVENTS: \", events);\r\n\r\n                return (\r\n                    <Card key={uniqueId()} style={style} title={data.text}\r\n                        onClick={() => this.detail(data.text, this.month_now, this.year_now)}\r\n                        content={eventList}\r\n                    />\r\n                )\r\n            }\r\n        )\r\n\r\n        let dateInfoText = timeLineConstant.month[this.month_now].name + \" \" + this.year_now;\r\n        let content = <div id=\"calendar-wrapper\">\r\n\r\n            <GridComponent cols={3} style={{\r\n                textAlign: 'center', width: '400px'\r\n            }} items={[\r\n                <ComboBox key={uniqueId()} id=\"input_month\" defaultValue={this.state.selectedMonth} onChange={this.setSelectedMonth}\r\n                    options={timeLineConstant.month} />,\r\n                <InputField key={uniqueId()}  type=\"number\" id=\"input_year\" value={selectedYear} onKeyUp={this.changeInputYear} />,\r\n                <ActionButton key={uniqueId()}  onClick={(e) => this.setCalendar()} text={\"Go\"} />,\r\n                <ActionButton key={uniqueId()}  onClick={(e) => this.doPrevMonth(true)} text={\"Prev\"} />,\r\n                <input key={uniqueId()} value={dateInfoText}  disabled className=\"form-control\" id=\"date-info\" />,\r\n                <ActionButton key={uniqueId()}  onClick={(e) => this.doNextMonth(true)} text={\"Next\"} />\r\n            ]}\r\n\r\n            />\r\n            <p></p>\r\n            <p></p>\r\n            <GridComponent cols={7} items={calendarData} />\r\n        </div>;\r\n\r\n\r\n        return (\r\n             content  \r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default FullCalendar;","export const TYPE_DYNAMIC_DROPDOWN  = \"dynamicDropdown\";\r\nexport const TYPE_TEXTAREA = \"textarea\";\r\n\r\nexport const TYPE_LONG_DATE = \"longDate\";\r\nexport const TYPE_DATE = \"date\";\r\nexport const TYPE_STATIC_DROPDOWN = \"staticDropdown\";\r\nexport const TYPE_NUMBER = \"number\";\r\nexport const TYPE_TEXT = \"text\";\r\n\r\nexport const TYPE_MULTIPLE_IMAGE = \"multipleImage\";\r\nexport const TYPE_SINGLE_IMAGE = \"singleImage\";\r\n\r\nexport const divisionConfig = {\r\n    title: \"Badan Pengurus\",\r\n    entityName: \"division\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\", lableName: \"Nama\" },\r\n        { name: \"description\" }, { name: \"institution.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama BPD\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"Deskripsi BPD\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Division Insitusi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"institution.name\",\r\n            reffEntity: \"Institution\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const sectionConfig = {\r\n    title: \"Divisi\",\r\n    entityName: \"section\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"division.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"BPD\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"division.name\",\r\n            reffEntity: \"division\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const programConfig = {\r\n    title: \"Program Kerja\",\r\n    entityName: \"program\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" }\r\n        ,\r\n        { name: \"section.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Proker\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi Proker\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst eventStatus =  [\r\n    { text: \"-Not Configured-\", value: -1 },\r\n    { text: \"Done\", value: 1 },\r\n    { text: \"UnDone\", value: 0 }\r\n];\r\n\r\nexport const eventConfig = {\r\n    title: \"Kegiatan\",\r\n    entityName: \"event\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"info\" },\r\n        { name: \"date\", type: TYPE_LONG_DATE },\r\n        { name: \"location\" },\r\n        { name: \"program.name\" },\r\n        { name: \"participant\" },\r\n        {\r\n            name: \"done\", type: TYPE_STATIC_DROPDOWN, options:eventStatus\r\n        }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Kegiatan\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Waktu Kegiatan\",\r\n            inputType: \"date\",\r\n            name: \"date\"\r\n        },\r\n        {\r\n            lableName: \"Info Kegiatan\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"info\"\r\n        }, {\r\n            lableName: \"Lokasi Kegiatan\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"location\"\r\n        },\r\n        {\r\n            lableName: \"Nama Program\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"program.name\",\r\n            reffEntity: \"program\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Status Kegiatan\",\r\n            inputType: TYPE_STATIC_DROPDOWN,\r\n            name: \"done\",\r\n            options:eventStatus\r\n        },\r\n        {\r\n            lableName: \"Peserta\",\r\n            inputType: TYPE_NUMBER,\r\n            name: \"participant\"\r\n        },\r\n    ]\r\n}\r\n\r\nexport const positionConfig = {\r\n    title: \"Posisi\",\r\n    entityName: \"position\",\r\n    id: \"id\",\r\n    disabled: true,\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" },\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\nexport const memberConfig = {\r\n    title: \"Anggota\",\r\n    entityName: \"member\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"position.name\" },\r\n        { name: \"section.name\" },\r\n        { name: \"description.name\" }\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Anggota\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"position.name\",\r\n            reffEntity: \"position\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==============OLD STUFF==============//\r\n\r\n/**\r\n * SAMPLE\r\n */\r\n\r\nexport const productConfig = {\r\n    title: \"Product\",\r\n    entityName: \"product\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"code\" },\r\n        { name: \"description\" }, { name: \"unit.name\" },\r\n        { name: \"price\", type: TYPE_NUMBER }, { name: \"category.name\" },\r\n        { name: \"imageUrl\", type: \"imageMultiple\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Product Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Code\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Product Image(s)\",\r\n            inputType: \"multipleImage\",\r\n            name: \"imageUrl\"\r\n        },\r\n        {\r\n            lableName: \"Product Description\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Product Unit\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"unit.name\",\r\n            reffEntity: \"Unit\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Price\",\r\n            inputType: TYPE_NUMBER,\r\n            name: \"price\"\r\n        },\r\n        {\r\n            lableName: \"Product Category\",\r\n            inputType: TYPE_DYNAMIC_DROPDOWN,\r\n            name: \"category.name\",\r\n            reffEntity: \"Category\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport const supplierList = {\r\n    title: \"Supplier\",\r\n    entityName: \"supplier\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"address\" }, { name: \"contact\" }, { name: \"website\", type: \"link\" },\r\n        { name: \"iconUrl\", type: \"image\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Supplier Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Address\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Contact\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"contact\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Icon\",\r\n            inputType: \"singleImage\",\r\n            name: \"iconUrl\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Website\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"website\"\r\n        }\r\n    ]\r\n}\r\nexport const customerList = {\r\n    title: \"Customer\",\r\n    entityName: \"customer\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"username\" }, { name: \"name\" }, { name: \"address\" }, { name: \"phone\" }, { name: \"email\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Customer Unique Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"username\"\r\n        },\r\n        {\r\n            lableName: \"Customer Name\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Customer Address\",\r\n            inputType: TYPE_TEXTAREA,\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Customer Phone\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"phone\"\r\n        },\r\n        {\r\n            lableName: \"Customer Email\",\r\n            inputType: \"email\",\r\n            name: \"email\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const transactionConfig = {\r\n    title: \"Transaction\",\r\n    entityName: \"transaction\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"code\" }, { name: \"transactionDate\", type: TYPE_LONG_DATE },\r\n        { name: \"type\" }, { name: \"supplier.name\" },\r\n        { name: \"customer.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Transaction Code\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Date\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"transactionDate\"\r\n        },\r\n        {\r\n            lableName: \"Transaction Type\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"type\"\r\n        },\r\n        {\r\n            lableName: \"Supplier\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"supplier.name\"\r\n        },\r\n        {\r\n            lableName: \"Customer\",\r\n            inputType: TYPE_TEXT,\r\n            name: \"customer.name\",\r\n        },\r\n\r\n    ]\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport FullCalendar from './FullCalendar';\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth(),\r\n            selectedYear: new Date().getFullYear(),\r\n            detailView: false,\r\n            detailEvents: [],\r\n            selectedDay: 0\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => {\r\n            console.log(\"_________\", month, year);\r\n            this.setState({\r\n                update: new Date(), selectedMonth: month, selectedYear: year\r\n            });\r\n            this.props.getEventByDate(month, year, this.props.app);\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            let events = this.props.events;\r\n            let result = [];\r\n\r\n            events.forEach(event => {\r\n                let date = new Date(event.date);\r\n                if (date.getDate() == day) {\r\n                    result.push(event);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n        this.detail = (day, month, year) => {\r\n            console.log(\"@DETAIL:\", day, month, year);\r\n            let events = this.getEventDetail(+day);\r\n            this.setState({\r\n                detailView: true, detailEvents: events, selectedDay: day,\r\n                selectedMonth: month, selectedYear: year\r\n            })\r\n        }\r\n\r\n        this.refresh = (selectedMonth, selectedYear) => {\r\n            this.setState({\r\n                updated: new Date(),\r\n                selectedMonth: selectedMonth, selectedYear: selectedYear\r\n            })\r\n        }\r\n\r\n        this.addEvent = () => {\r\n            let config = entityConfig.eventConfig;\r\n\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n\r\n            this.props.addEventFromTimeline(\r\n                this.state.selectedDay,\r\n                this.state.selectedMonth + 1, /*IMPORTANT*/\r\n                this.state.selectedYear\r\n            );\r\n\r\n            this.props.history.push(\"/management\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.division) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n\r\n        //validate division\r\n        if (this.props.division == null) {\r\n            return <h2>Silakan Pilih Badan Pengurus MPI</h2>\r\n        }\r\n        let title = <h2>TimeLine {this.props.division.name + \" \" + this.state.selectedYear}</h2>;\r\n\r\n        let detailEvents = [];\r\n        if (this.state.detailView == true) {\r\n            this.state.detailEvents.forEach(event => {\r\n\r\n                const eventDate = new Date(event.date).toString();\r\n\r\n                let eventStatus = \"Done\";\r\n                if(event.done == 0){\r\n                    eventStatus = \"Not Done\";\r\n                }else if(event.done != 1){\r\n                    eventStatus = \"Not Configured\";\r\n                }\r\n\r\n                let content = <div>\r\n                     <p>{eventDate}</p>\r\n                    <GridComponent cols={2} items={[  \r\n                        <label>Location</label>, <label>{event.location}</label>,\r\n\r\n                        <label>Participant</label>, <label>{event.participant}</label>,\r\n\r\n                        <label>Status</label>, <label>{eventStatus}</label>,\r\n\r\n                        <label>Info</label>, <label>{event.info}</label>,\r\n                    ]} />\r\n                </div>\r\n\r\n                let eventCard = <Card title={event.name}\r\n                    content={content} style={{ width: '90%' }}\r\n                />\r\n                detailEvents.push(eventCard);\r\n            });\r\n\r\n            if (detailEvents.length == 0) {\r\n                detailEvents = [\r\n                    <div>No Agenda.</div>\r\n                ]\r\n            }\r\n            return <div>\r\n                {title}\r\n                <p>Detail in {this.state.selectedDay + \" \" + stringUtil.monthYearString(\r\n                    this.state.selectedMonth + 1,\r\n                    this.state.selectedYear\r\n                )}</p>\r\n                <ActionButton onClick={() => { this.setState({ detailView: false }) }} text=\"Back\" />\r\n                <GridComponent width={\"30%\"} cols={3} items={detailEvents} />\r\n                <ActionButton status=\"success\" onClick={() => { this.addEvent() }} text=\"Add Event\" />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {title}\r\n                <FullCalendar\r\n                    division={this.props.division}\r\n                    detail={this.detail} getEventByDate={this.getEventByDate}\r\n                    refresh={this.refresh}\r\n                    events={this.props.events} getEventDetail={this.getEventDetail}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        events: state.managementState.events,\r\n        division: state.userState.division\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEventByDate: (m, y, app) => dispatch(actions.getEventByDate(m, y, app)),\r\n    addEventFromTimeline: (d, m, y) => dispatch(actions.addEventFromTimeline(d, m, y))\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Timeline)) ","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Dashboard.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport Tab from '../buttons/Tab';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport DashboardMain from './DashboardMain';\r\nimport Timeline from './Timeline'\r\n\r\nconst MENU_HOME ='home';\r\nconst MENU_TIMELINE = 'timeline';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: MENU_HOME\r\n        }\r\n\r\n        this.setMenuCode = (code) => {\r\n            this.setState({ menu: code });\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n        this.getDivisons = () => {  \r\n            this.props.getDivisons( this.props.app);  \r\n        }\r\n\r\n        this.selectDivision = (divisionId) => {\r\n            this.props.selectDivision(divisionId, this.props.app);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        if (this.props.loginStatus != true)\r\n            return;\r\n        this.props.setMenuCode(menus.DASHBOARD);\r\n        document.title = \"Dashboard\";\r\n\r\n        this.getDivisons();\r\n    }\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                text: \"Home\",\r\n                active: this.state.menu == MENU_HOME,\r\n                onClick: () => {this.setMenuCode(MENU_HOME) }\r\n            },\r\n            {\r\n                text: \"Time Line\",\r\n                active: this.state.menu == MENU_TIMELINE, \r\n                onClick: () => {this.setMenuCode(MENU_TIMELINE) }\r\n            } \r\n        ];\r\n    }\r\n \r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const buttonsData = this.getButtonsData();\r\n\r\n        let content = null;\r\n        switch (this.state.menu) {\r\n            case MENU_HOME:\r\n                    content         = <DashboardMain  division={this.props.division} \r\n                    selectDivision  ={this.selectDivision} \r\n                    divisions       ={this.props.divisions} />\r\n                break;\r\n            case MENU_TIMELINE:\r\n                    content         = <Timeline app={this.props.app} />\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (<div className=\"section-container\">\r\n            <ContentTitle title={\"Admin Page\"}\r\n                description=\"Welcome to the admin console\" />\r\n            <div className=\"management-container\">\r\n                <Tab tabsData={buttonsData} />\r\n                {content}\r\n            </div>\r\n        </div>)\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        divisions: state.userState.divisions,\r\n        division: state.userState.division,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getDivisons: ( app) => dispatch(actions.getDivisons( app)),\r\n    selectDivision: (divisionId, app) => dispatch(actions.selectDivision(divisionId, app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)); ","import React, { Component } from 'react';\r\nimport '../../css/Footer.css'\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let date = new Date().getFullYear();\r\n\r\n        return (\r\n            <div className=\"App-footer\">\r\n               BPP MPI Divisi Media {date+\" powered by React Js \"+React.version}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport SockJsClient from 'react-stomp';  \r\nimport SockJS from 'sockjs-client';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport Label from '../Label';\r\nimport { uniqueId } from '../../utils/StringUtil';\r\nimport Tab from '../buttons/Tab';\r\nimport '../../css/Chat.css'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport * as config from '../../utils/WebConfig'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst hostCloud = url.hostCloud;\r\nconst hostLocal = url.hostLocal;\r\nconst MENU_MESSAGE = \"0xfffre\";\r\nconst MENU_LIST = \"0x44444\";\r\n\r\nconst usedHost = () => {\r\n    if (config.debugMode() == true)\r\n        return hostLocal;\r\n    else\r\n        return hostCloud;\r\n}\r\n\r\n\r\nconst currentRequestId = () => {\r\n    return localStorage.getItem(\"requestId\");\r\n}\r\n\r\nclass LiveStreaming extends Component {\r\n\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            updated: new Date(),\r\n            stream: {},\r\n           \r\n        }\r\n        this. sendingVideo=  false\r\n        this.width = 320;    // We will scale the photo width to this\r\n        this.height = 0;     // This will be computed based on the input stream\r\n\r\n        this.streaming = false;\r\n        this.terminated = false;\r\n        this.video = null;\r\n        this.canvas = null; \r\n        this.photoReceiver = null;\r\n        this.startbutton = null;\r\n        this.isAnimate = false;\r\n        this.window = window;\r\n        this.sockJsClient = null;\r\n        this.latestImageResponse = {};\r\n       \r\n\r\n        this.refresh = () => {\r\n            this.setState({ updated: new Date() });\r\n        }\r\n\r\n        this.init = () => {\r\n            const _class = this;\r\n            window.navigator.mediaDevices.getUserMedia({ video: true, audio: false })\r\n                .then(function (stream) {\r\n                    _class.video.srcObject = stream;\r\n                    console.log(\"stream:\", stream);\r\n                    try{\r\n                     //   _class.setState({stream:stream});\r\n                    }catch(e){\r\n\r\n                    }\r\n                    _class.video.play();\r\n                   \r\n                })\r\n                .catch(function (err) {\r\n                    console.log(\"An error occurred: \" + err);\r\n                });\r\n           \r\n            this.video.addEventListener('canplay', function (ev) {\r\n                if (!_class.streaming) {\r\n                    _class.height = _class.video.videoHeight / (_class.video.videoWidth / _class.width);\r\n\r\n                    _class.video.setAttribute('width', _class.width);\r\n                    _class.video.setAttribute('height', _class.height);\r\n                    _class.canvas.setAttribute('width', _class.width);\r\n                    _class.canvas.setAttribute('height', _class.height);\r\n                    _class.streaming = true; \r\n                   \r\n                }\r\n            }, false);  \r\n \r\n            this.clearphoto();\r\n        } \r\n\r\n        this.terminate = () =>{\r\n            this.terminated = true;\r\n        }\r\n\r\n        this.setSendingVideoFalse = () => {\r\n           this.sendingVideo = false;\r\n        }\r\n\r\n        this.sendVideoImage = (imageData) => {\r\n\r\n            if(this.sendingVideo == true || this.terminated){\r\n                return;\r\n            }\r\n            this.sendingVideo = true;\r\n\r\n            const requestId = localStorage.getItem(\"requestId\");\r\n            const receiver =  this.props.receiver;\r\n            this.props.sendVideoImage(imageData, requestId, receiver, this);  \r\n            \r\n        }\r\n\r\n        this.handleLiveStream = (response) => { \r\n            if(this.terminated){\r\n                return;\r\n            }\r\n            this.latestImageResponse = response;\r\n            const _class = this;\r\n            this.populateCanvas().then((base64)=>{\r\n                _class.photoReceiver.setAttribute('src', base64 );\r\n            });\r\n        }\r\n\r\n         this.populateCanvas =  () => {\r\n            const _class = this;\r\n            return new Promise((resolve, reject) => {\r\n                var img = new Image();\r\n                img.src =  _class.latestImageResponse.imageData;\r\n                \r\n                img.onload = function () {\r\n                    var newDataUri = _class.imageToDataUri(this, 300, 300);\r\n                    resolve(newDataUri);\r\n                }; \r\n         });\r\n        }\r\n\r\n        this.takepicture = () => {\r\n            const _class = this;\r\n            this.resizeWebcamImage().then((data)=>{\r\n                _class.sendVideoImage(data);\r\n            })\r\n\r\n            // var context = this.canvas.getContext('2d');\r\n            // if (this.width && this.height) {\r\n            //     this.canvas.width = this.width/ 5;\r\n            //     this.canvas.height = this.height/ 5;\r\n            //     context.drawImage(this.video, 0, 0, this.width/ 5, this.height/ 5);\r\n    \r\n                 \r\n\r\n              \r\n            // } else {\r\n            //     this.clearphoto();\r\n            // }\r\n        }\r\n\r\n        this.resizeWebcamImage = () => {\r\n            const _class = this;\r\n            return new Promise((resolve, reject)=>{\r\n                var context = _class.canvas.getContext('2d');\r\n                if (_class.width && _class.height) {\r\n                    _class.canvas.width = _class.width/ 5;\r\n                    _class.canvas.height = _class.height/ 5;\r\n                    context.drawImage(_class.video, 0, 0, _class.width/ 5, _class.height/ 5);\r\n                    var data = _class.canvas.toDataURL('image/png');  \r\n                    resolve(data);\r\n                }else {\r\n                    _class.clearphoto();\r\n                }\r\n            })\r\n\r\n           \r\n        }\r\n\r\n        this.imageToDataUri = (img, width, height) => {\r\n\r\n            // create an off-screen canvas\r\n            var canvas = document.createElement('canvas');\r\n            var ctx = canvas.getContext('2d');\r\n        \r\n            // set its dimension to target size\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n        \r\n            // draw source image into the off-screen canvas:\r\n            ctx.drawImage(img, 0, 0, width, height);\r\n        \r\n            // encode image to data-uri with base64 version of compressed image\r\n            return canvas.toDataURL('image/png');\r\n        }\r\n    \r\n        this.clearphoto = () => {\r\n            // var context = this.canvas.getContext('2d');\r\n            // context.fillStyle = \"#AAA\";\r\n            // context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    \r\n            // var data = this.canvas.toDataURL('image/png'); \r\n            // var img = new Image();\r\n            // img.src = data;\r\n        }\r\n\r\n\r\n    /**\r\n     * ==================================================\r\n     *                  Frame Loop\r\n     * ================================================== \r\n     */\r\n\r\n        this. initAnimation = () => {\r\n            this.isAnimate = !this.isAnimate;\r\n            const _class = this;\r\n            window.requestAnimationFrame(function () {\r\n                _class.animate()\r\n            });\r\n        }\r\n       this.animate = () => {\r\n            \r\n            this.clearphoto();\r\n            this.takepicture(); \r\n            const _class = this;\r\n            if (this.isAnimate) {\r\n                window.requestAnimationFrame(function () {\r\n                    _class.animate();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    logSocket = function(){\r\n        console.dir(\"LOG SOCKET:\", window[\"socket\"]);\r\n        console.log(\"transport: \", window[\"socket\"]._transport);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.receiver == null){\r\n            alert(\"Please select receiver!\");\r\n            return;\r\n        }\r\n\r\n        this.video = _byId('video');\r\n        console.log(\"video:\", this.video);\r\n        this.canvas = _byId('canvas'); \r\n        this.photoReceiver = _byId(\"photo-receiver\");\r\n        this.init();\r\n        this.initAnimation(this);\r\n    }\r\n\r\n    render() {\r\n\r\n        const receiver = this.props.receiver;\r\n        const streamId = this.state.stream.id;\r\n\r\n        return (\r\n            <div>\r\n                <h2>Live Streaming</h2>\r\n                <p>{\"Stream ID: \"+streamId}</p> \r\n                <canvas id=\"canvas\"> </canvas> \r\n                <GridComponent items={[\r\n                    <div className=\"camera\">\r\n                        <h2>You</h2>\r\n                        <video controls id=\"video\">Video stream not available.</video>\r\n                        <div>\r\n                            <button  id=\"startbutton\" onClick={this.takepicture}>Take photo</button>\r\n                            <button onClick={this.clearphoto}>Clear Photo</button>\r\n                            <button onClick={this.terminate}>Terminate</button>\r\n                        </div>\r\n                        \r\n                    </div>,\r\n                    <div className=\"output-receiver x\" style={{width:'500px', height:'450px', border:'solid 1px green'}}>\r\n                        <h2>{\"Receiver ID: \"+receiver}</h2>\r\n                        <img width=\"300\" height=\"300\" id=\"photo-receiver\" alt=\"The screen RECEIVER will appear in this box.\" />\r\n                    </div>\r\n                ]} />\r\n                 <hr/>\r\n                \r\n                \r\n                <SockJsClient url={usedHost() + '/realtime-app'} topics={[  '/wsResp/livestream/'+receiver]}\r\n                    onMessage={(msg) => { this.handleLiveStream(msg) }}\r\n                    ref={(client) => { this.clientRef = client }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n    sendVideoImage: (imageData, requestId, destinatio, app) => \r\n    dispatch(actions.sendVideoImage(imageData, requestId, destinatio, app)), \r\n\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps)(LiveStreaming);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport SockJsClient from 'react-stomp'; \r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport Label from '../Label'; \r\nimport LiveStreaming from './LiveStreaming'\r\nimport { uniqueId } from '../../utils/StringUtil';\r\nimport Tab from '../buttons/Tab';\r\nimport '../../css/Chat.css'\r\nimport * as config from '../../utils/WebConfig'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst hostCloud = url.hostCloud;\r\nconst hostLocal = url.hostLocal; \r\nconst MENU_MESSAGE = \"0xfffre\";\r\nconst MENU_LIST = \"0x44444\";\r\nconst MENU_LIVE_STREAMING = \"0x555555\";\r\n\r\nconst usedHost = () => {\r\n    if (config.debugMode() == true)\r\n        return hostLocal;\r\n    else\r\n        return hostCloud;\r\n} \r\n \r\n\r\nconst currentRequestId = () => {\r\n    return localStorage.getItem(\"requestId\");\r\n}\r\n\r\nclass ChatRoom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [], //NEVER NULL\r\n            username: null,\r\n            activeId: null,\r\n            receiver: null,\r\n            menu: MENU_LIST,\r\n            updated: new Date()\r\n\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.setState({updated: new Date()});\r\n        }\r\n\r\n        this.sendChatMessage = () => {\r\n            if (!_byId(\"input-msg\").value) {\r\n                alert(\"Message must not be null\");\r\n                return;\r\n            }\r\n            this.props.sendChatMessage(_byId(\"input-msg\").value, this.state.username,\r\n                this.state.receiver,\r\n                this.props.app);\r\n            _byId(\"input-msg\").value = \"\";\r\n        }\r\n\r\n        this.handleMessage = (response) => {\r\n            console.log(\"Responses handleMessage: \", response.code);\r\n            if (response.code != currentRequestId() && !this.exist(response.receivers)) {\r\n                return;\r\n            }\r\n            this.props.storeChatMessageLocally(response.messages);\r\n            this.setState({ messages: response.messages });\r\n        }\r\n\r\n        this.handleLiveNotif = (response) => {\r\n            console.log(\"LIVE MESSAGE NOTIFY:\", response);\r\n            const newSession = {\r\n               key: response.sessionKeys['0'].key,\r\n               value: response.sessionKeys['0'].userAgent\r\n            }\r\n            this.props.updateLiveSessions(newSession, this);\r\n\r\n        }\r\n\r\n        this.exist = (receivers) =>{\r\n            for (let i = 0; i < receivers.length; i++) {\r\n                const receiver = receivers[i];\r\n                if(receiver == currentRequestId()){\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        this.changeUsername = (value, id) => {\r\n            this.setState({ username: value, activeId: id });\r\n        }\r\n\r\n        this.setMenuCode = (code) => {\r\n            this.setState({ menu: code });\r\n        }\r\n\r\n        this.setReceiver = (receiver) => {\r\n            const messages = this.getMessagesByReceiver(receiver);\r\n            this.setState({ receiver: receiver, menu: MENU_MESSAGE, messages: messages });\r\n        }\r\n\r\n        this.getMessagesByReceiver = (receiver) => {\r\n            let messages = [];\r\n            const propMessages = this.props.messages ? this.props.messages : [];\r\n            console.log(\"propMessages with c: \",receiver, propMessages);\r\n            for (let i = 0; i < propMessages.length; i++) {\r\n                const message = propMessages[i];\r\n                console.log(message.receiver,\":\", message.receiver == receiver);\r\n                console.log(message.sender,\":\", message.sender == receiver)\r\n                if (message.receiver == receiver || message.sender == receiver) {\r\n                    messages.push(message);\r\n                }\r\n            }\r\n            console.log(\"[filtered] propMessages: \",messages);\r\n            return messages;\r\n        }\r\n    }\r\n\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                text: \"Online Users\",\r\n                active: this.state.menu == MENU_LIST,\r\n                onClick: () => { this.setMenuCode(MENU_LIST) }\r\n            },\r\n            {\r\n                text: \"Message\",\r\n                active: this.state.menu == MENU_MESSAGE,\r\n                onClick: () => { this.setMenuCode(MENU_MESSAGE) }\r\n            },\r\n            {\r\n                text: \"Live Streaming\",\r\n                active: this.state.menu == MENU_LIVE_STREAMING,\r\n                onClick: () => {this.setMenuCode(MENU_LIVE_STREAMING)}\r\n            }\r\n        ];\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.setMenuCode('chatroom');\r\n        document.title = \"Chat Room\";\r\n        this.props.getMessages(this.props.app);\r\n        if (this.props.userAlias) {\r\n            this.setState({ username: this.props.userAlias })\r\n        }\r\n        this.props.getAvailableSessions(this.props.app);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.activeId && _byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        } \r\n    }\r\n\r\n    render() {\r\n\r\n        const sessionsMap = this.props.sessionsMap;\r\n\r\n        const buttonsData = this.getButtonsData();\r\n\r\n        let content = \"\";\r\n\r\n        if (this.state.menu == MENU_MESSAGE) {\r\n            let messages = this.state.messages;\r\n            content = <div style={{padding: '2%', width: '80%',  backgroundColor: 'yellow', margin: '3%'}}>\r\n                <Label text={\"Receiver: \" + this.state.receiver} />\r\n                <div>\r\n                    {messages.map(message => {\r\n                        const currentSender = message.sender == currentRequestId();\r\n                        const invalidReceiver = !currentSender && this.state.receiver != message.sender;\r\n                        const invalidSender = currentSender && message.receiver != this.state.receiver;\r\n\r\n                        if(invalidReceiver || invalidSender){\r\n                            return null;\r\n                        } \r\n\r\n                        return <ChatItem key={uniqueId()} message={message} currentUser={currentSender} />\r\n                    })}\r\n                </div>\r\n                <InputField style={{  width: '100%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />\r\n                <ActionButton status=\"success\" text=\"Send\" onClick={this.sendChatMessage} />\r\n            </div>;\r\n        } else if (this.state.menu == MENU_LIST) {\r\n            content = <div>\r\n                {sessionsMap.map(session => {\r\n                    return <ActionButton \r\n                        key     ={uniqueId()} \r\n                        onClick ={() => this.setReceiver(session.key)} \r\n                        text    ={session.value} />;\r\n                })}\r\n            </div>\r\n        }else if(this.state.menu == MENU_LIVE_STREAMING){\r\n            content = <LiveStreaming receiver={this.state.receiver} />\r\n        }\r\n\r\n        return (\r\n            // <div className=\"section-container\">\r\n            //     <ContentTitle title=\"What Do You Feel?\" description=\r\n            //         {\"Identified as [\" + this.state.username + \"]\"} />\r\n            //     <InputField\r\n            //         value={userAlias}\r\n            //         onKeyUp={this.changeUsername}\r\n            //         id=\"input-username\"\r\n            //         placeholder=\"identify your name\" />\r\n            //     <div style={{ textAlign: 'left' }} id=\"chat-room\">\r\n\r\n            //         <div className=\"chat-container\"  >\r\n            //             <ChatList username={this.state.username} messages={this.props.messages} />\r\n            //         </div>\r\n\r\n            //         <GridComponent style={{ width: '50%', textAlign: 'right' }} items={[\r\n            //             <InputField style={{ width: '130%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />,\r\n            //             <ActionButton style={{ margin: '5px' }} status=\"success\" onClick={this.sendChatMessage} text=\"send\" />\r\n\r\n            //         ]} />\r\n\r\n            //         <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/messages']}\r\n            //             onMessage={(msg) => { this.handleMessage(msg) }}\r\n            //             ref={(client) => { this.clientRef = client }} />\r\n            //     </div>\r\n            // </div>\r\n            <div>\r\n                <ContentTitle title=\"Live Chat With Online Users\" />\r\n                <Tab tabsData={buttonsData} />\r\n                {content}\r\n\r\n                <SockJsClient url={usedHost() + '/realtime-app'} topics={['/wsResp/messages/'+currentRequestId()]}\r\n                    onMessage={(msg) => { this.handleMessage(msg) }}\r\n                    ref={(client) => { this.clientRef = client }} />\r\n              <SockJsClient url={usedHost() + '/realtime-app'} topics={['/wsResp/live/'+currentRequestId()]}\r\n                    onMessage={(msg) => { this.handleLiveNotif(msg) }}\r\n                    ref={(client) => { this.clientRef = client }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ChatItem = props => {\r\n    let className = \"chat-item rounded paper-shadow  \"  + (props.currentUser == false ? \" admin \" : \"user\");\r\n     \r\n    let sender = props.message.sender;\r\n    let senderComponent = <span>\r\n        {sender}<span style={{ fontSize: '0.7em'  }} >{props.message.date}</span>\r\n    </span>\r\n    return (\r\n        <div className={className} style={{width:'90%' }}>\r\n            <Label style={{ fontSize: '0.8em', color: 'black' }} text={senderComponent} />\r\n            <Label text={props.message.text} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        messages: state.chatState.messages,\r\n        userAlias: state.shopState.userAlias,\r\n        sessionsMap: state.chatState.sessionsMap\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    sendChatMessage: (message, username, receiver, app) => dispatch(actions.sendChatMessage(message, username, receiver, app)),\r\n    storeChatMessageLocally: (messages) => dispatch(actions.storeMessageLocally(messages)),\r\n    getMessages: (app) => dispatch(actions.getMessageList(app)),\r\n    getAvailableSessions: (app) => dispatch(actions.getAvailableSessions(app)),\r\n    updateLiveSessions: (session, app) => dispatch(actions.updateLiveSessions(session, app))\r\n\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ChatRoom)","import React, { Component } from 'react'\r\n\r\nimport '../../css/Input.css'\r\n\r\nclass DropdownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false\r\n        }\r\n\r\n        this.handleClick = (e) => {\r\n            console.log(\"selected: \",e.target.innerHTML);\r\n            if(this.props.onClick){\r\n                this.props.onClick(e);\r\n            }\r\n        }\r\n\r\n        this.onHover = (e) => {\r\n          \r\n            if(this.props.onHover)\r\n                this.props.onHover( this.props.index); \r\n        }\r\n        this.unHover = (e) => { \r\n            this.setState({ hover: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n          return (\r\n              <div>\r\n                \r\n                <div    onMouseLeave={this.unHover} onMouseOver ={this.onHover}  >\r\n                {this.props.text}</div>\r\n              </div>\r\n          \r\n        )\r\n    }\r\n}\r\nexport default DropdownItem;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport DropdownItem from './DropdownItem';\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            focus: true, hover: false, hoverIndex: -1,\r\n\r\n        }\r\n\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(document.getElementById(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onBlur = () => {\r\n            console.log(\"blur\");\r\n            this.setState({ focus: false, hover: false })\r\n        }\r\n\r\n        this.onSelect = (dataValue, text) => {\r\n            console.log(\"select value:\", dataValue);\r\n            if (this.props.onSelect) { this.props.onSelect(dataValue); }\r\n            if (this.props.id) {\r\n                document.getElementById(this.props.id).value = text;\r\n            }\r\n        }\r\n\r\n        this.onHover = (i) => {\r\n            if (this.state.hoverIndex != i)\r\n                this.setState({ hoverIndex: i });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let dropdownList = [];\r\n        let dropdownComponent = \"\";\r\n        if (this.props.dropdownList && this.props.dropdownList.length > 0) {\r\n            dropdownList = this.props.dropdownList;\r\n\r\n            dropdownComponent = <div className=\"dropdown\">\r\n                {dropdownList.map(\r\n                    (data, i) => {\r\n                        let className = \"dropdown-item\";\r\n                        const key = \"dropdown-item-\" + i;\r\n\r\n                        if (this.state.hoverIndex == i) className = \"dropdown-item-hovered\";\r\n                        return (\r\n                            <div\r\n                                key={key}\r\n                                onClick={(e) => this.onSelect(data.value, data.text)}\r\n                                className={className}>\r\n                                <DropdownItem onClick={(e) => this.onSelect(data.value, data.text)}\r\n                                    onHover={this.onHover}\r\n                                    index={i} text={data.text} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        }\r\n\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let inputClassName = \"rounded\";\r\n        return (\r\n            <div\r\n                onMouseOver={() => this.setState({ focus: true })}\r\n                onMouseLeave={this.onBlur}\r\n                className=\"dropdown-wrapper input-field\">\r\n\r\n                <input\r\n                    className={inputClassName}\r\n                    onFocus={() => this.setState({ focus: true })}\r\n                    id={this.props.id}\r\n                    type=\"text\"\r\n                    onKeyUp={this.handleKeyup}\r\n                    placeholder={placeholder} />\r\n                {dropdownComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default InputDropdown;","import React, { Component } from 'react'\r\nimport '../../css/Input.css'\r\nimport '../../css/Common.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport * as url from '../../constant/Url'\r\nimport ActionButton from '../buttons/ActionButton'\r\n\r\nclass InputFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            base64Data: null\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            componentUtil.toBase64(e.target, this, function (result, referer) {\r\n                referer.setState({ base64Data: result });\r\n\r\n            });\r\n        }\r\n\r\n        this.removeImage = () => {\r\n            if(this.props.removeImage){\r\n                this.props.removeImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.base64Data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let displayImage = null;\r\n        if (this.state.base64Data) {\r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.state.base64Data} width=\"60\" height=\"60\" />\r\n            </div>;\r\n        }\r\n        if (this.props.value && this.props.value.trim() != \"\") {\r\n            \r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.props.value} width=\"60\" height=\"60\" />\r\n                <ActionButton text=\"cancel\" status=\"danger\" onClick={this.removeImage} />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field\" >\r\n                <input accept=\"image/*\" onChange={this.onChange} type=\"file\" key={\"input_file_\" + stringUtil.uniqueId()} />\r\n                {displayImage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFile;\r\n\r\n","import React, { Component } from 'react';\r\nimport * as url from '../../constant/Url'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InputFile from './InputFile';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFileMultiple extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAddMoreFile = () => {\r\n            if(this.props.addMoreImage){\r\n                this.props.addMoreImage();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let inputFields = [];\r\n        if (this.props.inputFilesData) {\r\n            inputFields = this.props.inputFilesData;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {inputFields.map(\r\n                    inputFileData => {\r\n                        let value = inputFileData.value;\r\n                        return (\r\n                            <InputFile\r\n                                key={stringUtil.uniqueId() + \"_multiple_file_item\"}\r\n                                onChange={(base64) => {\r\n                                    if (inputFileData.onChange)\r\n                                        inputFileData.onChange(base64)\r\n                                }}\r\n                                value={value && value.includes(\"base64\") ? value : value ?\r\n                                    url.baseImageUrl + value : null}\r\n                                id={inputFileData.inputId}\r\n                                removeImage={() => {\r\n                                    if (inputFileData.removeImage)\r\n                                        inputFileData.removeImage()\r\n                                }\r\n                                }\r\n\r\n                            />\r\n                        )\r\n                    }\r\n                )}\r\n                <ActionButton text=\"add more\" onClick={this.handleAddMoreFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFileMultiple;","import React, { Component } from 'react'\r\nimport '../../css/Entity.css'\r\nimport '../../css/Common.css'\r\nimport Label from '../Label'\r\nimport InputDropdown from '../input/InputDropdown'\r\nimport ComboBox from '../input/ComboBox'\r\nimport InputField from '../input/InputField';\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport InputFile from '../input/InputFile'\r\nimport * as url from '../../constant/Url'\r\nimport InputFileMultiple from '../input/InputFileMultiple'\r\nimport { TYPE_DYNAMIC_DROPDOWN, TYPE_STATIC_DROPDOWN, TYPE_MULTIPLE_IMAGE, TYPE_SINGLE_IMAGE } from '../../utils/EntityConfigurations'\r\n\r\nclass EntityForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            managedEntity: null,\r\n            activeId: null,\r\n            formValues: {},\r\n            dropdownList: {},\r\n            dropdownValues: {},\r\n            selectedEntities: {},\r\n            base64Data: {},\r\n            base64DataMultiple: {},\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * valudate before submit\r\n         */\r\n        this.validateEntity = (entity) => {\r\n            const result = entity;\r\n            for (let key in entity) {\r\n                console.log(key);\r\n                const formDataItem = this.getFormDataItemStartWith(key);\r\n                if (formDataItem) {\r\n                    if (formDataItem.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle single Image\r\n                         */\r\n                        if (entity[key] && !entity[key].includes(\"base64\")) {\r\n                            result[key] = null;\r\n                        }\r\n                    } else if (formDataItem.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle MULTIPLE Image\r\n                         */\r\n\r\n                        if (entity[key]) {\r\n                            let arrayOfValues = entity[key].split(\"~\");\r\n                            let resultValue = new Array();\r\n                            for (let i = 0; i < arrayOfValues.length; i++) {\r\n                                const element = arrayOfValues[i];\r\n                                /**\r\n                                 * if not modified\r\n                                 */\r\n                                if (!this.state.base64DataMultiple[key] ||\r\n                                    !this.state.base64DataMultiple[key][i]) {\r\n                                    resultValue.push(\"{ORIGINAL>>\" + element + \"}\");\r\n                                } else\r\n                                    /**\r\n                                     * if modified\r\n                                     */\r\n                                    if (this.state.base64DataMultiple[key] &&\r\n                                        this.state.base64DataMultiple[key][i]) {\r\n                                        const updatedValue = this.state.base64DataMultiple[key][i];\r\n                                        resultValue.push(\"{ORIGINAL>>\" + element + \"}\" + updatedValue);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            if (this.state.base64DataMultiple[key] && this.state.base64DataMultiple[key].length > arrayOfValues.length) {\r\n                                for (let i = arrayOfValues.length - 1; i < this.state.base64DataMultiple[key].length; i++) {\r\n                                    const element = this.state.base64DataMultiple[key][i];\r\n                                    if (element && element.includes(\"base64\")) {\r\n                                        resultValue.push(element);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (resultValue.length > 0)\r\n                                result[key] = resultValue.join(\"~\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.setState({ updated: new Date() })\r\n        }\r\n\r\n        this.handleSubmit = () => {\r\n            let addFromOtherPage = false;\r\n\r\n            const updateMode = this.props.managedEntity != null && this.props.addNew == false;\r\n            if (updateMode) {\r\n                console.log(\"WILL UPDATE(props):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"update\");\r\n                }\r\n            }else{\r\n                if( this.props.managedEntity != null && this.props.addNew == true){\r\n                    addFromOtherPage = true;\r\n                }\r\n            }\r\n\r\n            const addNewMod = this.state.managedEntity != null;\r\n            if (addNewMod  ) {\r\n                console.log(\"WILL SUBMIT NEW(state):\", this.state.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.state.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n\r\n            /**\r\n             * SPECIAL CASE\r\n             */\r\n\r\n            if ( addFromOtherPage) {\r\n                console.log(\"WILL SUBMIT NEW(SPECIAL CASE):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n            this.clear();\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.onKeyUp = (value, id, propName) => {\r\n            this.setState({ activeId: id });\r\n            this.updateSelectedEntity(propName, value);\r\n\r\n        }\r\n\r\n        this.clear = () => {\r\n            this.setState({\r\n                managedEntity: null,\r\n                dropdownList: {},\r\n                dropdownValues: {},\r\n                selectedEntities: {},\r\n                base64Data: {},\r\n                base64DataMultiple: {}\r\n            });\r\n            if (this.props.removeManagedEntity) {\r\n                this.props.removeManagedEntity();\r\n            }\r\n        }\r\n\r\n        this.populateDropdown = (entityname, fieldname, fieldvalue) => {\r\n            const request = {\r\n                entityName: entityname,\r\n                fieldName: fieldname.split(\".\")[1],\r\n                fieldValue: fieldvalue\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"DATA FOR DROPDOWN: \", data);\r\n            });\r\n\r\n        }\r\n\r\n        this.onKeyUpDynamicDropdown = (value, id, propName, reffEntity) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            const request = {\r\n                entityName: reffEntity,\r\n                fieldName: 'name',\r\n                fieldValue: value\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"LIST FOR DROPDOWN: \", data.entities)\r\n                referer.populateDropdownValues(data.entities, propName);\r\n            });\r\n            let currentDropdownValue = this.state.dropdownValues;\r\n            currentDropdownValue[propName] = value;\r\n            this.setState({ activeId: id, dropdownValues: currentDropdownValue });\r\n        }\r\n\r\n        this.populateDropdownValues = (entities, propName) => {\r\n            console.log(\"ENTITIES:\", entities)\r\n            let options = new Array();\r\n            const formDataItem = this.getFormDataItem(propName);\r\n            if (null == formDataItem) {\r\n                console.log(\"FORM DATA NOT FOUND\");\r\n                return;\r\n            }\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                options.push({\r\n                    value: entity[formDataItem.idField],\r\n                    text: entity[formDataItem.displayField],\r\n                    entity: entity\r\n                })\r\n            }\r\n            let currentDropdownList = this.state.dropdownList;\r\n            currentDropdownList[propName] = options;\r\n            //  this.setState({ dropdownList: currentDropdownList })\r\n            return options;\r\n        }\r\n\r\n        this.getSelectedDropdownItem = (value, propName) => {\r\n            if (this.state.dropdownList[propName] == null) {\r\n                return null;\r\n            }\r\n            const dropdownList = this.state.dropdownList[propName];\r\n            for (let i = 0; i < dropdownList.length; i++) {\r\n                const option = dropdownList[i];\r\n                if (option.value == value) {\r\n                    return option;\r\n                }\r\n\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getFormDataItem = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.addMoreImage = (propName) => {\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    currentValue = currentValue.trim() + \"~DEFAULT.BMP\";\r\n                    this.updateSelectedEntity(propName, currentValue);\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                let currentValue;\r\n                if (!managedEntity) {\r\n                    managedEntity = {};\r\n                    currentValue = \"\";\r\n                } else\r\n                    currentValue = managedEntity[propName] + \"~\";\r\n                currentValue = currentValue.trim() + \"DEFAULT.BMP\";\r\n                this.updateSelectedEntity(propName, currentValue);\r\n            }\r\n        }\r\n\r\n        this.updateSelectedEntity = (propName, value) => {\r\n            if (this.props.managedEntity) {\r\n                this.props.managedEntity[propName] = value;\r\n                this.refresh();\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) managedEntity = {};\r\n                managedEntity[propName] = value;\r\n                this.setState({ managedEntity: managedEntity });\r\n            }\r\n\r\n        }\r\n\r\n        this.getFormDataItemStartWith = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                    if (formDataItem.name.split(\".\").length > 1) {\r\n                        if (formDataItem.name.split(\".\")[0] == propName) {\r\n                            return formDataItem;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.handleRemoveImage = (propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = null;\r\n\r\n            this.updateSelectedEntity(propName, null);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64Image = (base64, propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = base64;\r\n\r\n            this.updateSelectedEntity(propName, base64);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64MultipleImage = function (base64, propNameRaw, i) {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = base64;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n        }\r\n\r\n        this.removeElementAtPosition = (array, index) => {\r\n            let result = new Array();\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (i != index) {\r\n                    result.push(array[i])\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.handleRemoveMultipleImage = (propNameRaw, i) => {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = null;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity; \r\n                if (!managedEntity) {\r\n                    return;\r\n                }\r\n                let currentValue = managedEntity[propName];\r\n                if(currentValue){\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.selectFromDynamicDropdown = (value, propName) => {\r\n            console.log(propName, \":\", value);\r\n            const currentDropdownList = this.state.dropdownList;\r\n            const dropdownValues = this.state.dropdownValues;\r\n            const selectedEntities = this.state.selectedEntities;\r\n\r\n            const selectedOption = this.getSelectedDropdownItem(value, propName);\r\n            if (null == selectedOption) {\r\n                return;\r\n            }\r\n\r\n            dropdownValues[propName] = selectedOption.text;\r\n            currentDropdownList[propName] = [];\r\n            selectedEntities[propName] = selectedOption.entity;\r\n\r\n            /**\r\n             * time to modify entity\r\n             */\r\n            const displayPropName = propName.split(\".\")[0];\r\n\r\n            this.updateSelectedEntity(displayPropName, selectedOption.entity);\r\n            this.setState({ activeId: null, dropdownList: currentDropdownList, dropdownValues: dropdownValues, selectedEntities: selectedEntities });\r\n        }\r\n\r\n        this.handleStaticDropdownChange = (value, propName) =>{\r\n            \r\n            this.updateSelectedEntity(propName, value);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        let formData = this.props.entityConfig && this.props.entityConfig.formData ? this.props.entityConfig.formData : [];\r\n\r\n        const entityExist = this.props.managedEntity != null || this.state.managedEntity;\r\n\r\n\r\n        let actionButtons = null;\r\n        if(!this.props.entityConfig.disabled){\r\n            actionButtons  =   <ActionButtons buttonsData={[\r\n                {\r\n                    text: this.props.managedEntity && this.props.addNew == false ? \"Update\" : \"Add Record\",\r\n                    onClick: this.handleSubmit,\r\n                    status:\"success\"\r\n                },\r\n                {\r\n                    text: \"Clear\",\r\n                    status:\"warning\",\r\n                    onClick: this.clear\r\n                }\r\n            ]} />;\r\n        }\r\n\r\n        let formFields = <div className=\"entity-form  \">\r\n            {formData.map(\r\n                data => {\r\n                    const parentPropName = data.name.split(\".\")[0];\r\n                    let value = null;\r\n                    if (entityExist) {\r\n                        const entity = this.props.managedEntity ? this.props.managedEntity : this.state.managedEntity;\r\n                        const propName = data.name;\r\n\r\n                        if (propName.split(\".\").length > 1 && this.state.activeId != \"input-for-\" + data.name) {\r\n                            const valueAsObject = entity[propName.split(\".\")[0]];\r\n                            const objectPropName = propName.split(\".\")[1];\r\n\r\n                            value = valueAsObject ? valueAsObject[objectPropName] : null;\r\n                        } else {\r\n                            value = entity[propName];\r\n                        }\r\n                    }\r\n\r\n                    let inputComponent = null;\r\n                    const inputId = \"input-for-\" + data.name;\r\n\r\n                    if (data.inputType == TYPE_DYNAMIC_DROPDOWN) {\r\n                        /**\r\n                         * if dynamic dropDown\r\n                         */\r\n\r\n                        if (null == value) {\r\n                            value = this.state.dropdownValues[data.name]\r\n                        }\r\n\r\n                        inputComponent = <InputDropdown\r\n                            onSelect={(value) => this.selectFromDynamicDropdown(value, data.name)}\r\n                            id={inputId}\r\n                            placeholder={data.lableName}\r\n                            value={value}\r\n                            dropdownList={this.state.dropdownList[data.name]}\r\n                            onKeyUp={(value, id) => { this.onKeyUpDynamicDropdown(value, id, data.name, data.reffEntity) }} />\r\n\r\n                    } else  if (data.inputType == TYPE_STATIC_DROPDOWN) {\r\n                        /**\r\n                         * if static drop down\r\n                         */\r\n                        console.log(\"STATIC DROPDOWN VALUE: \",value);\r\n                        inputComponent = <ComboBox \r\n                             defaultValue={new String(value)}\r\n                            onChange={(val)=>this.handleStaticDropdownChange(val,data.name)}\r\n                            options={data.options} id={stringUtil.uniqueId()}\r\n                         />\r\n\r\n                    } else if (data.inputType == TYPE_SINGLE_IMAGE) {\r\n                        /**\r\n                         * handle image single\r\n                         */\r\n                        inputComponent = <InputFile\r\n                            onChange={(base64) => this.handleChangeBase64Image(base64, data.name)}\r\n                            value={value && value.includes(\"base64\") ? value : value ? url.baseImageUrl + value : null}\r\n                            id={inputId}\r\n                            removeImage={() => this.handleRemoveImage(data.name)}\r\n\r\n                        />\r\n\r\n                    } else if (data.inputType == TYPE_MULTIPLE_IMAGE) {\r\n                        /**\r\n                         * handle multiple single\r\n                         */\r\n                        let valueSplit = value ? value.split(\"~\") : [];\r\n\r\n                        let imagesData = new Array();\r\n                        for (let i = 0; i < valueSplit.length; i++) {\r\n                            let valueSplitItem = valueSplit[i];\r\n                            if (this.state.base64DataMultiple[parentPropName] &&\r\n                                this.state.base64DataMultiple[parentPropName][i]\r\n                                && this.state.base64DataMultiple[parentPropName][i].includes(\"base64\")) {\r\n                                valueSplitItem = this.state.base64DataMultiple[parentPropName][i];\r\n                            }\r\n                            imagesData.push({\r\n                                value: valueSplitItem,\r\n                                onChange: (base64) => {\r\n                                    this.handleChangeBase64MultipleImage(base64, data.name, i);\r\n                                },\r\n                                removeImage: () => this.handleRemoveMultipleImage(data.name, i)\r\n\r\n                            })\r\n                        }\r\n                        inputComponent = <InputFileMultiple\r\n                            addMoreImage={() => this.addMoreImage(data.name)}\r\n                            inputFilesData={imagesData}\r\n\r\n                        />\r\n                    }\r\n\r\n                    else {\r\n                        /**\r\n                         * regular\r\n                         */\r\n                        inputComponent = <InputField\r\n                            onKeyUp={(value, id) => { this.onKeyUp(value, id, data.name) }}\r\n                            id={inputId} value={value}\r\n                            type={data.inputType} placeholder={data.lableName} />;\r\n                    }\r\n\r\n                    return (\r\n                        <div key={\"FORM-FIELD-\" + stringUtil.uniqueId()}>\r\n                            <Label text={data.lableName} />\r\n                            {inputComponent}\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n\r\n            {actionButtons}                \r\n        </div>\r\n\r\n        return (\r\n            <div className=\"entity-form-wrapper\">\r\n                {formFields}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntitiesWithCallback: (request, referer, callback) => dispatch(actions.getEntitiesWithCallback(request, referer, callback)),\r\n\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EntityForm))","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport '../../css/Management.css'\r\nimport '../../css/Entity.css'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport InputField from '../input/InputField'\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport EntityForm from './EntityForm';\r\nimport * as url from '../../constant/Url'\r\nimport Label from '../Label'\r\nimport GridComponent from '../layout/GridComponent'\r\nimport { TYPE_LONG_DATE, TYPE_STATIC_DROPDOWN, TYPE_MULTIPLE_IMAGE, TYPE_DATE } from '../../utils/EntityConfigurations'\r\n\r\nclass EntityList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: {},\r\n            activeId: null,\r\n            orderBy: null,\r\n            orderType: null\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are your sure for deleting this entity?\")) { return; }\r\n            console.log(\"Will DELETE: \", id)\r\n        }\r\n        this.handleEdit = (id) => {\r\n            this.getEntityById(id);\r\n        }\r\n        this.getHeaderNames = (fieldNames) => {\r\n            const headers = [];\r\n\r\n            if (fieldNames == null) {\r\n                this.props.backToDashboard();\r\n\r\n            } else\r\n\r\n                for (let i = 0; i < fieldNames.length; i++) {\r\n                    const name = fieldNames[i];\r\n                    let headerName = name.name;\r\n                    if (headerName.split(\".\").length > 1) {\r\n                        headerName = headerName.split(\".\")[0];\r\n                    }\r\n                    headers.push(headerName.toUpperCase());\r\n                }\r\n            headers.push(\"OPTION\");\r\n            return headers;\r\n        }\r\n\r\n        this.goToPage = (page, orderObject) => {\r\n            if (page > this.props.entitiesData.totalData / 10) {\r\n                page = 0;\r\n            }\r\n            if (page < 0) {\r\n                page = Math.ceil(this.props.entitiesData.totalData / 10 - 1);\r\n            }\r\n\r\n            let config = this.props.entityConfig;\r\n            config.filter = this.state.filter;\r\n            if (orderObject != null) {\r\n                config.orderBy = orderObject.orderBy;\r\n                config.orderType = orderObject.orderType;\r\n                this.setState({ orderBy: orderObject.orderBy, orderType: orderObject.orderType });\r\n            }\r\n\r\n            this.props.getEntityInPage(config, page);\r\n\r\n        }\r\n\r\n        this.getEntityById = (id) => {\r\n            const config = this.props.entityConfig;\r\n            if (config == null) {\r\n                alert(\"Config Not Found!\");\r\n                return;\r\n            }\r\n\r\n            this.props.getEntityById(config.entityName, id);\r\n        }\r\n\r\n        this.createNavButtons = () => {\r\n            let displayedButtons = componentUtil.createNavButtons(this.props.entitiesData.totalData / 10, this.props.currentPage);\r\n            return displayedButtons;\r\n        }\r\n\r\n        this.setOrderBy = (fieldName, orderType) => {\r\n            this.goToPage(this.props.currentPage, { orderBy: fieldName, orderType: orderType });\r\n        }\r\n\r\n        this.createFilterInputs = (fieldNames) => {\r\n            let inputs = new Array();\r\n\r\n            if (!fieldNames) {\r\n                return inputs;\r\n            }\r\n\r\n            for (let i = 0; i < fieldNames.length; i++) {\r\n                const fieldName = fieldNames[i];\r\n                let headerName = fieldName.name;\r\n                if (headerName.split(\".\").length > 1) {\r\n                    headerName = headerName.split(\".\")[0];\r\n                }\r\n\r\n                let value = \"\";\r\n\r\n                if (this.state.filter[headerName] != null) {\r\n                    value = this.state.filter[headerName];\r\n\r\n                }\r\n\r\n                let input = <InputField value={value} id={headerName + \"_filter_id\"}\r\n                    onKeyUp={this.handleFilterChange} key={\"input_field_\" + stringUtil.uniqueId()}\r\n                    placeholder={headerName} />\r\n\r\n                if (fieldName.type == TYPE_DATE || fieldName.type == TYPE_LONG_DATE) {\r\n                    const valueDay = this.state.filter[headerName + \"-day\"];\r\n                    const valueMonth = this.state.filter[headerName + \"-month\"];\r\n                    const valueYear = this.state.filter[headerName + \"-year\"];\r\n\r\n                    const inputDay = <InputField value={valueDay} id={headerName + \"-day_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_d\" + stringUtil.uniqueId()}\r\n                        placeholder={\"day\"} />;\r\n                    const inputMonth = <InputField value={valueMonth} id={headerName + \"-month_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_m\" + stringUtil.uniqueId()}\r\n                        placeholder={\"month\"} />;\r\n                    const inputYear = <InputField value={valueYear} id={headerName + \"-year_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_y\" + stringUtil.uniqueId()}\r\n                        placeholder={\"year\"} />;\r\n\r\n                    input = <GridComponent width=\"50px\" items={[inputDay, inputMonth, inputYear]} />\r\n                }\r\n\r\n\r\n                let orderType = \"asc\";\r\n                if (this.state.orderBy && this.state.orderBy == headerName) {\r\n                    if (this.state.orderType == \"asc\") {\r\n                        orderType = \"desc\";\r\n                    }\r\n                }\r\n\r\n\r\n                const orderButton = <ActionButton\r\n                    onClick={() => { this.setOrderBy(headerName, orderType) }}\r\n                    text={orderType} />\r\n\r\n                inputs.push(<div className=\"filter-wrapper\">\r\n                    {input}{orderButton}\r\n                </div>);\r\n            }\r\n            inputs.push(\"\");\r\n            return inputs;\r\n        }\r\n\r\n        this.handleFilterChange = (value, id) => {\r\n\r\n            let filter = this.state.filter;\r\n            if (value != null && value.trim() == \"\") {\r\n                filter[id.split(\"_filter_id\")[0]] = null;\r\n\r\n            } else {\r\n                filter[id.split(\"_filter_id\")[0]] = value;\r\n\r\n            }\r\n\r\n            this.setState({ filter: filter, activeId: id });\r\n            this.goToPage(this.props.currentPage);\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        const entitiesData = this.props.entitiesData;\r\n        const entityConfig = this.props.entityConfig;\r\n        console.log(\"1\");\r\n        if (null == entitiesData || null == entityConfig) {\r\n            return (<h2>Please Select One Of Menu</h2>)\r\n        }\r\n\r\n\r\n        if (null == entitiesData.entities) {\r\n            entitiesData.entities = [];\r\n        }\r\n\r\n        const rows = [\r\n            //header\r\n            {\r\n                values: this.getHeaderNames(entityConfig.fieldNames),\r\n                disabled: true,\r\n                style: { textAlign: 'center', fontWeight: 'bold' }\r\n            },\r\n            //filter\r\n            {\r\n                values: this.createFilterInputs(entityConfig.fieldNames),\r\n                disabled: true\r\n            }\r\n        ];\r\n\r\n\r\n        const entities = entitiesData.entities;\r\n        const idField = entityConfig.id;\r\n\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const entity = entities[i];\r\n            let rowValues = [];\r\n            for (let j = 0; j < entityConfig.fieldNames.length; j++) {\r\n                const fieldItem = entityConfig.fieldNames[j];\r\n                let entityProp = fieldItem.name;\r\n                let object = false\r\n\r\n                if (entityProp.split(\".\").length > 1) {\r\n                    entityProp = entityProp.split(\".\")[0];\r\n                    object = true;\r\n                }\r\n\r\n                let entityValue = entity[entityProp];\r\n                if (fieldItem.type) {\r\n                    if (fieldItem.type == \"number\") {\r\n                        entityValue = stringUtil.beautifyNominal(entityValue);\r\n                    } else if (fieldItem.type == \"link\") {\r\n                        entityValue = <a href={entityValue}><u>{entityValue}</u></a>\r\n                    } else if (fieldItem.type == \"image\") {\r\n                        entityValue = <img width=\"60\" height=\"60\" alt={url.baseImageUrl + entityValue} src={url.baseImageUrl + entityValue} />\r\n                    } else if (fieldItem.type == TYPE_MULTIPLE_IMAGE) {\r\n                        let imgName = entityValue.split(\"~\")[0];\r\n\r\n                        entityValue = <img width=\"60\" height=\"60\" src={url.baseImageUrl + imgName} />\r\n                    } else if (fieldItem.type == TYPE_LONG_DATE) {\r\n                        const dateStr = new Date(entityValue).toDateString();\r\n                        entityValue = <Label text={dateStr} />;\r\n                    } else if (fieldItem.type == TYPE_STATIC_DROPDOWN) {\r\n                        const options = fieldItem.options;\r\n\r\n                        options.forEach(opt => {\r\n                            if (opt.value == entityValue) {\r\n                                entityValue = opt.text;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                rowValues.push(object && entityValue ? entityValue[fieldItem.name.split(\".\")[1]] : entityValue);\r\n            }\r\n\r\n            rows.push(\r\n                {\r\n                    identifier: entity[idField],\r\n                    values: rowValues,\r\n                    handleDelete: this.handleDelete,\r\n                    handleEdit: this.handleEdit,\r\n                    disabled: entityConfig.disabled == true ? true : false\r\n                }\r\n            )\r\n        }\r\n\r\n        const buttonsData = this.createNavButtons();\r\n        const fixButtonData = new Array();\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + -1) },\r\n            text: 'previous'\r\n        })\r\n\r\n        for (let i = 0; i < buttonsData.length; i++) {\r\n            buttonsData[i].onClick = () => { this.goToPage(buttonsData[i].value) }\r\n            if (buttonsData[i].value == this.props.currentPage) {\r\n                buttonsData[i].status = \" btn-active\";\r\n            }\r\n            buttonsData[i].text = buttonsData[i].text;\r\n\r\n\r\n            fixButtonData.push(buttonsData[i]);\r\n        }\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + 1) },\r\n            text: 'next'\r\n        });\r\n\r\n        let navButtons = <ActionButtons style={{\r\n            backgroundColor: 'white',\r\n            paddingTop: '15px',\r\n            margin: '10px'\r\n        }} buttonsData={fixButtonData} />\r\n\r\n        let entityTable = <div className=\"entity-list-container\">\r\n\r\n            <InstantTable\r\n                style={{\r\n                    width: \"100%\",\r\n                    margin: \"5px\",\r\n                }}\r\n                rows={rows} />\r\n        </div>\r\n\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <div className=\"entity-container\">\r\n                    <div style={{\r\n                        backgroundColor: 'white',\r\n                        margin: '10px'\r\n                    }} > </div>\r\n                    {navButtons}\r\n                    <div className=\"entityForm\">\r\n                        <EntityForm\r\n                            addNew={this.props.addNew}\r\n                            app={this.props.app}\r\n                            updateEntity={this.props.updateEntity}\r\n                            removeManagedEntity={this.props.removeManagedEntity}\r\n                            managedEntity={this.props.managedEntity}\r\n                            entityConfig={entityConfig} />\r\n                    </div>\r\n                    {entityTable}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntityList;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Management.css'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ContentTitle from '../layout/ContentTitle'\r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport EntityList from './EntityList';\r\nimport Tab from '../buttons/Tab';\r\n\r\nclass Management extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entityList: [],\r\n            currentPage: 0,\r\n            entityConfig: { entityName: \"main\" }\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n\r\n        this.backToDashboard = () => {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.getEntityInPage(this.state.entityConfig, this.state.currentPage);\r\n        }\r\n\r\n        this.loadEntityManagement = (config) => {\r\n            this.props.removeManagedEntity();\r\n\r\n            this.setState({ currentPage: 0, entityConfig: config });\r\n\r\n            this.props.setEntityConfig(config);\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n        }\r\n\r\n        this.gotoMainPage = () => {\r\n            this.props.resetManagementPage();\r\n            this.setState({ currentPage: 0, entityConfig: { entityName: \"main\" } });\r\n        }\r\n\r\n        this.getEntityInPage = (config, page) => {\r\n            this.setState({ currentPage: page });\r\n\r\n            const request = {\r\n                entityName: config.entityName,\r\n                page: page,\r\n                limit: 10,\r\n                entityConfig: config,\r\n                fieldsFilter: config.filter,\r\n                orderBy: config.orderBy,\r\n                orderType: config.orderType,\r\n            };\r\n\r\n            console.log(\"REQUEST: \", request)\r\n\r\n            this.props.getEntities(request, this.props.app);\r\n        }\r\n\r\n        this.checkIfCurrentMenuName = (name) => {\r\n            return this.state.entityConfig.entityName == name;\r\n        }\r\n\r\n        this.getButtonsData = () => {\r\n            return [\r\n                {\r\n                    text: \"#\",\r\n                    active: this.checkIfCurrentMenuName(\"main\"),\r\n                    onClick: () => { this.gotoMainPage() }\r\n                },\r\n                {\r\n                    text: \"Badan Pengurus\",\r\n                    active: this.checkIfCurrentMenuName(\"division\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.divisionConfig) }\r\n                },\r\n                {\r\n                    text: \"Divisi\",\r\n                    active: this.checkIfCurrentMenuName(\"section\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.sectionConfig) }\r\n                },\r\n                {\r\n                    text: \"Program Kerja\",\r\n                    active: this.checkIfCurrentMenuName(\"program\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.programConfig) }\r\n                },\r\n                {\r\n                    text: \"Kegiatan\",\r\n                    active: this.checkIfCurrentMenuName(\"event\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.eventConfig) }\r\n                },\r\n                {\r\n                    text: \"Posisi\",\r\n                    active: this.checkIfCurrentMenuName(\"position\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.positionConfig) }\r\n                },\r\n                {\r\n                    text: \"Anggota\",\r\n                    active: this.checkIfCurrentMenuName(\"member\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.memberConfig) }\r\n                },\r\n            ];\r\n        }\r\n\r\n        this.updateEntity = (name, entity, flag) => {\r\n            if (!window.confirm(\"Are you sure will update \" + name + \"?\")) {\r\n                return;\r\n            }\r\n\r\n            let newRecord = flag == \"addNew\";\r\n\r\n            this.props.updateEntity({ entityName: name, entity: entity, isNewRecord: newRecord }, this, function (ref) {\r\n                console.log(\"WILL CALLBACK\");\r\n                ref.callbackHandleUpdate();\r\n            });\r\n        }\r\n\r\n        this.getEntityById = (name, id) => {\r\n            this.props.getEntityById(name, id, this.props.app);\r\n        }\r\n        this.removeManagedEntity = () => {\r\n            this.props.removeManagedEntity();\r\n        }\r\n\r\n        this.callbackHandleUpdate = () => {\r\n            this.refresh();\r\n            this.removeManagedEntity();\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Management\";\r\n        this.props.setMenuCode(\"management\");\r\n    }\r\n\r\n    render() {\r\n        console.log(\"managedEntity: \", this.props.managedEntity);\r\n      \r\n\r\n        let entityList = this.props.entitiesData ? this.props.entitiesData.entities : [];\r\n        if (null == entityList) { entityList = []; }\r\n\r\n        let buttonsData = this.getButtonsData();\r\n\r\n        let content = <h2>Content</h2>\r\n\r\n        if (this.props.entitiesData.entityConfig == null) {\r\n            content = <div>\r\n                <h2>{\"Management Page\"}\r\n                </h2></div>\r\n        } else {\r\n            content = <EntityList currentPage={this.state.currentPage}\r\n                app={this.props.app}\r\n                getEntityInPage={this.getEntityInPage}\r\n                entityConfig={this.props.entitiesData.entityConfig}\r\n                entitiesData={this.props.entitiesData}\r\n                managedEntity={this.props.managedEntity}\r\n                getEntityById={this.getEntityById}\r\n                removeManagedEntity={this.removeManagedEntity}\r\n                updateEntity={this.updateEntity}\r\n                addNew={this.props.addNew}\r\n                backToDashboard={this.backToDashboard}\r\n            />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title={\"Management \" + (this.state.entityConfig.title ?\r\n                    this.state.entityConfig.title :\r\n                    this.props.entitiesData && this.props.entitiesData.entityConfig ?\r\n                        this.props.entitiesData.entityConfig.title : \"\")}\r\n\r\n                    description=\"master data management console\" />\r\n                <div className=\"management-container\">\r\n                    <Tab tabsData={buttonsData} />\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        entitiesData: state.managementState.entitiesData,\r\n        managedEntity: state.managementState.managedEntity,\r\n        addNew: state.managementState.addNew\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setEntityConfig:(config)=>dispatch(actions.setEntityConfig(config)),\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEntityById: (name, id, app) => {\r\n        let action = actions.getEntityById(name, id, app);\r\n        dispatch(action);\r\n    },\r\n    resetManagementPage : () =>dispatch(actions.resetManagementPage()),\r\n    removeManagedEntity: () => dispatch(actions.removeManagedEntity()),\r\n    updateEntity: (request, referer, callback) => dispatch(actions.updateEntity(request, referer, callback))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Management))","\nimport React, { Component } from 'react'; \nimport './App.css';\n\nimport Header from './components/layout/Header'\nimport Menu from './components/buttons/Menu'\nimport Home from './components/pages/Home'\nimport About from './components/pages/About'\nimport {  Route, Link, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'  \nimport Login from './components/pages/Login';\nimport Dashboard from './components/pages/Dashboard';\nimport * as menus from './constant/Menus'\nimport Message from './components/Message';\nimport Footer from './components/layout/Footer';\nimport SockJsClient from 'react-stomp';\nimport ChatRoom from './components/pages/ChatRoom';\nimport Management from './components/pages/Management'; \nimport { uniqueId } from './utils/StringUtil'; \nimport * as config from './utils/WebConfig'\nimport * as url from './constant/Url'\n\nconst hostCloud = url.hostCloud;\nconst hostLocal = url.hostLocal;\n\nconst usedHost = () => {\n    if (config.debugMode() == true)\n        return hostLocal;\n    else\n        return hostCloud;\n} \n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      detailMode: false,\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      enableShopping: false,\n      mainAppUpdated:new Date()\n    };\n\n    this.setDetailMode = (detailMode) => {\n      this.setState({ detailMode: detailMode });\n    }\n\n    this.setMenuCode = (code) => { \n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.setEnableShopping = (val) => {\n      this.setState({ enableShopping: val })\n    }\n\n    this.handleMenuCLick = (menu) => {\n      switch (menu.code) {\n\n        case menus.LOGOUT:\n          if (!window.confirm(\"Are you sure want to logout?\")) {\n            return;\n          }\n          this.props.performLogout(this);\n          break;\n\n        default:\n          break;\n      }\n\n\n    }\n\n\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n\n    this.startLoading = (realtime) => {\n      this.setState({ loading: true, realtime: realtime });\n    }\n    this.endLoading = () => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }\n\n    this.handleMessage = (msg) => {\n      let percentage = Math.floor(msg.percentage);\n      // this.startLoading(true);\n     \n      // if(msg.requestId != localStorage.getItem(\"requestId\")){\n      //   return;\n      // }\n\n      // if (msg.percentage < 0 || msg.percentage > 100) {\n      //   this.endLoading();\n      // }\n      // this.setState({ loadingPercentage: percentage });\n    }\n  }\n\n\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      localStorage.setItem(\"requestId\", this.props.requestId);\n      this.props.refreshLogin(this.props.loginStatus);\n    }\n\n    console.log(\"App componentDidUpdate LOGIN STATUS: \",this.props.loginStatus)\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    let additionalMenus = this.props.menus\n    let menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      let menu = additionalMenus[i];\n\n      if(!this.state.enableShopping && menu.code == 'cart')\n        continue;\n\n      if (this.props.loginStatus != true && menu.authenticated == true)\n        continue;\n\n      menus.push(menu);\n\n    }\n \n    return menus;\n\n  }\n\n  render() {\n\n    const header =  <Header app={this} title=\"MPI Monitoring\"   />;\n\n    if (!this.state.requestId) {\n      return (\n        <div key={uniqueId()}>\n          {header}\n          Please wait..\n        </div>\n      )\n    }\n\n    let loginComponent = <Login main={this} setMenuCode={this.setMenuCode}\n      setDetailMode={this.setDetailMode}\n      detailMode={this.state.detailMode}\n      doLogin={this.props.performLogin}\n      loginFailed={this.props.loginFailed}\n      loginAttempt={this.props.loginAttempt}\n      loginStatus={this.props.loginStatus}\n    />;\n\n    let loadingComponent = \"\";\n    if (this.state.loading == true) {\n      loadingComponent = <Message realtime={this.state.realtime} progress={this.state.loadingPercentage} text=\"Please wait...\" type=\"loading\" />;\n    }\n\n    let menus = this.setMenus();\n \n    \n    return (\n      <div className=\"App\">\n        {loadingComponent}\n        {header}\n        {/*this.props.loginStatus == true?\"Logged In\":\"Un Logged\"*/}\n      \n        <div id=\"main-layout\">\n          <div id=\"main-menu\">\n            <Menu loggedUser={this.props.loggedUser}\n              division = {this.props.division}\n              handleMenuCLick={this.handleMenuCLick}\n              activeCode={this.state.menuCode}\n              menus={menus} />\n          </div>\n         \n          <div id=\"main-content\" > \n            <Switch>\n              <Route exact path=\"/\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is default page\" />\n              } />\n              <Route exact path=\"/home\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is home page\" />\n              } />\n              \n              <Route exact path=\"/chatroom\" render={\n                (renderProps) =>\n                  <ChatRoom app={this} setMenuCode={this.setMenuCode} />\n              } />\n              <Route exact path=\"/about\" render={\n                (renderProps) =>\n                  <About setMenuCode={this.setMenuCode} />\n              }></Route>\n               \n               <Route exact path=\"/login\" render={\n                (renderProps) => loginComponent\n\n              }></Route>\n\n              {/*\n                     =============================\n                     ======== need login =========\n                     =============================\n                     */}\n              <Route exact path=\"/dashboard\" render={\n                (renderProps) =>\n                  <Dashboard app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n               <Route exact path=\"/management\" render={\n                (renderProps) =>\n                  <Management app={this} loginStatus={this.props.loginStatus}   setMenuCode={this.setMenuCode} />\n\n              }></Route>\n            </Switch>\n           \n          </div>\n         \n        </div>\n        <SockJsClient url={usedHost()+'/realtime-app'} topics={['/wsResp/progress']}\n          onMessage={(msg) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    entities: state.shopState.entities,\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    loginKey: state.userState.loginStatus,\n    loginFailed: state.userState.loginFailed,\n    menus: state.userState.menus,\n    loggedUser: state.userState.loggedUser,\n    loginAttempt: state.userState.loginAttempt,\n    requestId: state.userState.requestId,\n    division: state.userState.division,\n    cart: state.shopState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogin: (username, password, app) => dispatch(actions.performLogin(username, password, app)),\n  performLogout: (app) => dispatch(actions.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.requestAppId(app)),\n  refreshLogin: (loginStatus) => dispatch(actions.refreshLoginStatus(loginStatus))\n  // getProductCatalog: (page) => dispatch(actions.getProductList(page))\n\n})\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = {\r\n    catalogData: {},\r\n    entities: [],\r\n    entity: {},\r\n    categories: [],\r\n    suppliersData: [], \r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {  \r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ };   \r\n        case types.SEND_MESSAGE:\r\n            return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities }; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nexport const menus = [\r\n  {\r\n    code:\"home\",\r\n    name:\"Home\",\r\n    url:\"home\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"catalog\",\r\n    name:\"Catalog\",\r\n    url:\"catalog\",\r\n    active: false,\r\n     authenticated: false\r\n  } ,\r\n  {\r\n    code:\"about\",\r\n    name:\"About\",\r\n    url:\"about\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"chatroom\",\r\n    name:\"Chat Room\",\r\n    url:\"chatroom\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"login\",\r\n    name:\"Login\",\r\n    url:\"login\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"dashboard\",\r\n    name:\"Dashboard\",\r\n    url:\"dashboard\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"management\",\r\n    name:\"Management\",\r\n    url:\"management\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"logout\",\r\n    name:\"Logout\",\r\n    url:\"#\",\r\n    active: false,\r\n    authenticated: true\r\n  }\r\n];\r\n","import * as types from './types'\r\nimport * as menus from '../utils/HardCodedEntites'\r\nimport * as menuCodes from '../constant/Menus'\r\nimport { initialState } from './reducers';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menus.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    divisions: null,\r\n    division: null,\r\n    requestId: null\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    let updatedMenus = new Array();\r\n    if (action.payload) {\r\n\r\n        let loggedIn = action.payload && action.payload.loginStatus == true;\r\n        for (let index = 0; index < menus.menus.length; index++) {\r\n            const menu = menus.menus[index];\r\n            if (loggedIn && menu.code == menuCodes.LOGIN) { continue; }\r\n\r\n            if (menu.authenticated == false) {\r\n                updatedMenus.push(menu);\r\n            } else {\r\n                if (loggedIn) { updatedMenus.push(menu); }\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case types.DO_LOGIN:\r\n            let result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                localStorage.setItem(\"loginKey\", result.loginKey);\r\n                localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n                result.divisions = action.payload.divisions\r\n            }\r\n\r\n           \r\n            return result;\r\n        case types.REQUEST_ID:\r\n            result = { ...state, requestId: action.payload.message };\r\n\r\n            if (action.payload.loggedIn != true) {\r\n                \r\n                result.loginStatus = false;\r\n                result.loggedUser = null; \r\n\r\n            }else{\r\n                \r\n                if(action.payload.sessionData){\r\n                    \r\n                    result.division = action.payload.sessionData.division;\r\n                    result.loggedUser = action.payload.sessionData.user;\r\n                    result.loginStatus = action.payload.loggedIn;\r\n                }\r\n            }\r\n\r\n           console.log(\"o o o result.loginStatus:\",result.loginStatus)\r\n          //  action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                division:null,\r\n                loggedUser: null\r\n            };\r\n            localStorage.removeItem(\"loginKey\");\r\n            localStorage.removeItem(\"loggedUser\");\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n\r\n            return result;\r\n        case types.GET_DIVISIONS:\r\n            if(action.payload.invalidSession != true){\r\n                result = {\r\n                    ...state,\r\n                    divisions: action.payload.divisions,\r\n                }; \r\n            }else{\r\n                result = {\r\n                    ...state,\r\n                    divisions: [],\r\n                    loggedUser: null,\r\n                    loginStatus: false\r\n                };\r\n            }\r\n           \r\n            \r\n            return result;\r\n        case types.SELECT_DIVISION:\r\n            result = {\r\n                ...state,\r\n                division: action.payload.entity,\r\n            };\r\n            return result;\r\n        default:\r\n            if (action.payload && action.payload.loginStatus != null)\r\n                return { ...state, menus: updatedMenus };\r\n            else {\r\n                return { ...state };\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as entityUtil from '../utils/EntityConfigurations'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    events: [],\r\n    addNew: false\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, addNew: false, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, addNew: false, managedEntity: null };\r\n        case types.GET_EVENTS_BY_DATE:\r\n\r\n            if (action.payload.entities)\r\n                return { ...state, events: action.payload.entities };\r\n        case types.ADD_EVENT_FROM_TIMELINE:\r\n\r\n            const eventsData = { entityConfig: entityUtil.eventConfig };\r\n            console.log(\"EVENTS DATA: \", eventsData);\r\n            return {\r\n                ...state, addNew: true, managedEntity: action.payload.entity,\r\n                entitiesData: eventsData\r\n            };\r\n        case types.RESET_MANAGEMENT_PAGE:\r\n\r\n            return initState;\r\n        case types.SET_ENTITY_CONFIG:\r\n            const entitiesData = state.entitiesData;\r\n\r\n            entitiesData.entityConfig = action.payload.entityConfig;\r\n            entitiesData.entities = [];\r\n\r\n            return { ...state, entitiesData: entitiesData };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n    sessionsMap: [],\r\n    messages: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_SESSIONS:\r\n            return { ...state, sessionsMap: action.payload    };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload    };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload    };\r\n        case types.UPDATE_SESSIONS:\r\n            const sessionsMap = state.sessionsMap;\r\n            sessionsMap.push(action.payload.session);\r\n\r\n            console.log(\"Session map: \",sessionsMap);\r\n\r\n            action.payload.app.refresh();\r\n\r\n            return {...state, sessionsMap: sessionsMap};\r\n        case types.SEND_VIDEO_IMAGE:\r\n\r\n            action.payload.app.setSendingVideoFalse();\r\n            return {...state  }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as managementReducer from \"./managementReducer\"\r\nimport * as chatReducer from \"./chatReducer\"\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        chatState: chatReducer.reducer,\r\n        managementState: managementReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    chatState: chatReducer.initState,\r\n    managementState: managementReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as actionCreator from './actionCreators';\r\nimport * as types from './types';\r\nimport * as config from '../utils/WebConfig'\r\nimport * as stringUtil from '../utils/StringUtil';\r\nimport * as rc from '../constant/ResponseCode'\r\n\r\nconst commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\")\r\n    }\r\n};\r\nconst POST_METHOD = \"POST\";\r\nconst TIMEOUT = 100000;\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            removeEntityMiddleware,\r\n\r\n            //user related\r\n            performLoginMiddleware,\r\n            performLogoutMiddleware,\r\n            refreshLoginStatusMiddleware,\r\n            getDivisionsMiddleware,\r\n\r\n            //transaction   \r\n            selectDivisionMiddleware,\r\n            getEventByDateMiddleware,\r\n            requestAppIdMiddleware,\r\n\r\n            storeChatMessageLocallyMiddleware,\r\n            getMessagesMiddleware,\r\n            sendChatMessageMiddleware,\r\n            updateLiveSessionsMiddleware,\r\n\r\n            /*enntity management*/\r\n            getEntityListMiddleware,\r\n            getEntityByIdMiddleware,\r\n            updateEntityMiddleware,\r\n            removeManagedEntityMiddleware,\r\n            addEventFromTimelineMiddleware,\r\n            resetManagementPageMiddleware,\r\n            setEntityConfigMiddleware,\r\n\r\n            getEntitiesWithCallbackMiddleware,\r\n            getAvailableSessionsMiddleware,\r\n\r\n            sendVideoImageMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\nfunction timeout(ms, promise) {\r\n    return new Promise(function (resolve, reject) {\r\n        setTimeout(function () {\r\n            reject(new Error(\"timeout\"))\r\n        }, ms)\r\n        promise.then(resolve, reject)\r\n    })\r\n}\r\n\r\nconst getEntitiesWithCallbackMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_WITH_CALLBACK) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n\r\n            action.meta.callback(data, action.meta.referer);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst updateEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_ENTITY) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response updateEntityMiddleware:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error Update Entity!\");\r\n                return;\r\n            }\r\n            alert(\"Update Success!\");\r\n            const callback = action.meta.callback;\r\n            const referer = action.meta.referer;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            callback(referer);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityByIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_BY_ID) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            if(data.code != \"00\"){\r\n                alert(\"error requesting: \"+data.message);\r\n                return;\r\n            }\r\n\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                data.entities = [];\r\n            }\r\n            data.entityConfig = action.meta.entityConfig;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data.messages });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst sendChatMessageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SEND_MESSAGE) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            data.username = action.payload.username;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst addEventFromTimelineMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.ADD_EVENT_FROM_TIMELINE) { return next(action); }\r\n\r\n    let eventEntity = {\r\n        date: stringUtil.dateInputVal(action.payload.day, action.payload.month, action.payload.year)\r\n    };\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entity: eventEntity } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst setEntityConfigMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_ENTITY_CONFIG) { return next(action); }\r\n\r\n    let newAction = Object.assign({}, action, { payload: { entityConfig: action.payload.entityConfig } });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload.messages });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst updateLiveSessionsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_SESSIONS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload:{...action.payload, ...action.meta }});\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst removeManagedEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_MANAGED_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetManagementPageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_MANAGEMENT_PAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n\r\nconst requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = commonAuthorizedHeader();\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    })).then(response => response.json())\r\n        .then(data => { \r\n            console.debug(config.debugMode(), \"requestAppIdMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n\r\n            data.referer = action.meta.app;\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.error(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst getEventByDateMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_EVENTS_BY_DATE) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n            data = (data);\r\n\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst selectDivisionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SELECT_DIVISION) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"selectDivisionMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getDivisionsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_DIVISIONS) { return next(action); }\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = (data);\r\n\r\n            console.debug(\"getDivisionsMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(data.message);\r\n                if (data.code == rc.CODE_INVALID_SESSION) {\r\n                    data.invalidSession = true;\r\n                } else {\r\n                    if (data.divisions == null) {\r\n                        alert(\"Server Error\")\r\n                        return;\r\n                    }\r\n                    return;\r\n                } \r\n            }\r\n \r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }))\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n            responseJson = (responseJson);\r\n\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    }))\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            responseJson = (responseJson);\r\n\r\n            let loginKey = \"\";\r\n            let loginSuccess = false;\r\n\r\n            if (responseJson.code != null && responseJson.code == \"00\") {\r\n                for (var pair of response.headers.entries()) {\r\n                    if (pair[0] == \"loginkey\") {\r\n                        loginKey = pair[1];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                loginSuccess = true;\r\n\r\n            }\r\n\r\n            console.log(\"LOGIN SUCCESS: \", loginSuccess);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user,\r\n                    divisions: responseJson.divisions,\r\n                    division: responseJson.sessionData ? responseJson.sessionData.division : null\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    }\r\n\r\n    let loggedUser = null;\r\n    if (localStorage.getItem(\"loggedUser\")) {\r\n        loggedUser = (localStorage.getItem(\"loggedUser\"));\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload: {\r\n            loginStatus: action.payload.loginStatus,\r\n            loginKey: localStorage.getItem(\"loginKey\"),\r\n            loggedUser: JSON.parse(loggedUser)\r\n        }\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\n  const getAvailableSessionsMiddleware  = store => next => action => {\r\n\r\n    const requestId = localStorage.getItem(\"requestId\");\r\n\r\n    if (!action.meta || action.meta.type !== types.GET_SESSIONS) { return next(action); }\r\n    timeout(TIMEOUT, fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': requestId }\r\n    })).then(response => response.json())\r\n        .then(data => {\r\n\r\n            const sessions = data.sessionKeys;\r\n            const filteredSessions = new Array();\r\n\r\n            for(var i in sessions){\r\n                if(sessions[i].key != requestId){\r\n                    filteredSessions.push({\r\n                        key:sessions[i].key,\r\n                        value:sessions[i].userAgent\r\n                    });\r\n                }\r\n            }\r\n\r\n\r\n            console.debug(\"getAvailableSessionsMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: filteredSessions });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n    }\r\n\r\n    \r\n\r\n    const sendVideoImageMiddleware  = store => next => action => { \r\n       \r\n            //     return; \r\n            const requestId = localStorage.getItem(\"requestId\");\r\n             \r\n            if (!action.meta || action.meta.type !== types.SEND_VIDEO_IMAGE) { return next(action); }\r\n            timeout(TIMEOUT, fetch(action.meta.url, {\r\n                method: POST_METHOD, body: JSON.stringify(action.payload),\r\n                headers: { 'Content-Type': 'application/json', 'requestId': requestId }\r\n            })).then(response => response.json())\r\n                .then(data => {\r\n        \r\n                // console.debug(\"sendVideoImageMiddleware Response:\", data);\r\n                    let newAction = Object.assign({}, action, { payload:{...data, app:action.meta.app} });\r\n                    delete newAction.meta;\r\n                    store.dispatch(newAction);\r\n                })\r\n                .catch(err => console.log(err)).finally(param => { });\r\n            }\r\n         \r\n    \r\n\r\nexport default configureStore;","export const CODE_INVALID_SESSION = \"02\";","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'core-js/stable'\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'fast-text-encoding/text';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}